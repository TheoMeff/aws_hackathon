{"ast":null,"code":"import handleKey from '../../internal/utils/handle-key';\nconst KEYBOARD_SINGLE_STEP_SIZE = 10;\nconst KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\nconst getCurrentSize = panelRef => {\n  if (!panelRef || !panelRef.current) {\n    return {\n      panelHeight: 0,\n      panelWidth: 0\n    };\n  }\n  return {\n    panelHeight: panelRef.current.clientHeight,\n    panelWidth: panelRef.current.clientWidth\n  };\n};\nexport const useKeyboardEvents = ({\n  position,\n  onResize,\n  panelRef\n}) => {\n  return {\n    onDirectionClick: direction => {\n      let currentSize;\n      const {\n        panelHeight,\n        panelWidth\n      } = getCurrentSize(panelRef);\n      if (position === 'side') {\n        currentSize = panelWidth;\n      } else {\n        currentSize = panelHeight;\n      }\n      const singleStepUp = () => onResize(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n      const singleStepDown = () => onResize(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n      switch (direction) {\n        case 'block-start':\n        case 'inline-start':\n          singleStepUp();\n          break;\n        case 'block-end':\n        case 'inline-end':\n          singleStepDown();\n          break;\n      }\n    },\n    onKeyDown: event => {\n      let currentSize;\n      let maxSize;\n      const {\n        panelHeight,\n        panelWidth\n      } = getCurrentSize(panelRef);\n      if (position === 'side') {\n        currentSize = panelWidth;\n        // don't need the exact max size as it's constrained in the set size function\n        maxSize = window.innerWidth;\n      } else {\n        currentSize = panelHeight;\n        // don't need the exact max size as it's constrained in the set size function\n        maxSize = window.innerHeight;\n      }\n      let isEventHandled = true;\n      const singleStepUp = () => onResize(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n      const singleStepDown = () => onResize(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n      const multipleStepUp = () => onResize(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n      const multipleStepDown = () => onResize(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n      handleKey(event, {\n        onBlockStart: () => {\n          position === 'bottom' ? singleStepUp() : singleStepDown();\n        },\n        onBlockEnd: () => {\n          position === 'bottom' ? singleStepDown() : singleStepUp();\n        },\n        onInlineEnd: () => {\n          position === 'bottom' ? singleStepUp() : singleStepDown();\n        },\n        onInlineStart: () => {\n          position === 'bottom' ? singleStepDown() : singleStepUp();\n        },\n        onPageDown: () => multipleStepDown(),\n        onPageUp: () => multipleStepUp(),\n        onHome: () => onResize(maxSize),\n        onEnd: () => onResize(0),\n        onDefault: () => isEventHandled = false\n      });\n      if (isEventHandled) {\n        event.preventDefault();\n      }\n    }\n  };\n};","map":{"version":3,"names":["handleKey","KEYBOARD_SINGLE_STEP_SIZE","KEYBOARD_MULTIPLE_STEPS_SIZE","getCurrentSize","panelRef","current","panelHeight","panelWidth","clientHeight","clientWidth","useKeyboardEvents","position","onResize","onDirectionClick","direction","currentSize","singleStepUp","singleStepDown","onKeyDown","event","maxSize","window","innerWidth","innerHeight","isEventHandled","multipleStepUp","multipleStepDown","onBlockStart","onBlockEnd","onInlineEnd","onInlineStart","onPageDown","onPageUp","onHome","onEnd","onDefault","preventDefault"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/app-layout/utils/use-keyboard-events.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { Direction } from '../../internal/components/drag-handle-wrapper/interfaces';\nimport handleKey from '../../internal/utils/handle-key';\nimport { SizeControlProps } from './interfaces';\n\nconst KEYBOARD_SINGLE_STEP_SIZE = 10;\nconst KEYBOARD_MULTIPLE_STEPS_SIZE = 60;\n\nconst getCurrentSize = (panelRef?: React.RefObject<HTMLDivElement>) => {\n  if (!panelRef || !panelRef.current) {\n    return {\n      panelHeight: 0,\n      panelWidth: 0,\n    };\n  }\n\n  return {\n    panelHeight: panelRef.current.clientHeight,\n    panelWidth: panelRef.current.clientWidth,\n  };\n};\n\nexport const useKeyboardEvents = ({ position, onResize, panelRef }: SizeControlProps) => {\n  return {\n    onDirectionClick: (direction: Direction) => {\n      let currentSize: number;\n\n      const { panelHeight, panelWidth } = getCurrentSize(panelRef);\n\n      if (position === 'side') {\n        currentSize = panelWidth;\n      } else {\n        currentSize = panelHeight;\n      }\n\n      const singleStepUp = () => onResize(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n      const singleStepDown = () => onResize(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n\n      switch (direction) {\n        case 'block-start':\n        case 'inline-start':\n          singleStepUp();\n          break;\n        case 'block-end':\n        case 'inline-end':\n          singleStepDown();\n          break;\n      }\n    },\n\n    onKeyDown: (event: React.KeyboardEvent<HTMLElement>) => {\n      let currentSize: number;\n      let maxSize: number;\n\n      const { panelHeight, panelWidth } = getCurrentSize(panelRef);\n\n      if (position === 'side') {\n        currentSize = panelWidth;\n        // don't need the exact max size as it's constrained in the set size function\n        maxSize = window.innerWidth;\n      } else {\n        currentSize = panelHeight;\n        // don't need the exact max size as it's constrained in the set size function\n        maxSize = window.innerHeight;\n      }\n\n      let isEventHandled = true;\n\n      const singleStepUp = () => onResize(currentSize + KEYBOARD_SINGLE_STEP_SIZE);\n      const singleStepDown = () => onResize(currentSize - KEYBOARD_SINGLE_STEP_SIZE);\n      const multipleStepUp = () => onResize(currentSize + KEYBOARD_MULTIPLE_STEPS_SIZE);\n      const multipleStepDown = () => onResize(currentSize - KEYBOARD_MULTIPLE_STEPS_SIZE);\n\n      handleKey(event, {\n        onBlockStart: () => {\n          position === 'bottom' ? singleStepUp() : singleStepDown();\n        },\n        onBlockEnd: () => {\n          position === 'bottom' ? singleStepDown() : singleStepUp();\n        },\n        onInlineEnd: () => {\n          position === 'bottom' ? singleStepUp() : singleStepDown();\n        },\n        onInlineStart: () => {\n          position === 'bottom' ? singleStepDown() : singleStepUp();\n        },\n        onPageDown: () => multipleStepDown(),\n        onPageUp: () => multipleStepUp(),\n        onHome: () => onResize(maxSize),\n        onEnd: () => onResize(0),\n        onDefault: () => (isEventHandled = false),\n      });\n\n      if (isEventHandled) {\n        event.preventDefault();\n      }\n    },\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}