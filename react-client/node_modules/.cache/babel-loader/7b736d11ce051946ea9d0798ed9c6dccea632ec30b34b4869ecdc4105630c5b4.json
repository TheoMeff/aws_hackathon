{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useCurrentMode, useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalLiveRegion from '../live-region/internal';\nimport ErrorScreen from './error-screen';\nimport { useChangeEffect } from './listeners';\nimport LoadingScreen from './loading-screen';\nimport { Pane } from './pane';\nimport PreferencesModal from './preferences-modal';\nimport { ResizableBox } from './resizable-box';\nimport { setupEditor } from './setup-editor';\nimport { StatusBar } from './status-bar';\nimport { useEditor, useSyncEditorLabels, useSyncEditorLanguage, useSyncEditorSize, useSyncEditorTheme, useSyncEditorValue, useSyncEditorWrapLines } from './use-editor';\nimport { DEFAULT_AVAILABLE_THEMES, getDefaultTheme, getLanguageLabel } from './util';\nimport styles from './styles.css.js';\nconst CodeEditor = forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n      ace,\n      value,\n      language,\n      i18nStrings,\n      editorContentHeight,\n      onEditorContentResize,\n      ariaLabel,\n      languageLabel: customLanguageLabel,\n      preferences,\n      loading,\n      themes,\n      getModalRoot,\n      removeModalRoot\n    } = props,\n    rest = __rest(props, [\"ace\", \"value\", \"language\", \"i18nStrings\", \"editorContentHeight\", \"onEditorContentResize\", \"ariaLabel\", \"languageLabel\", \"preferences\", \"loading\", \"themes\", \"getModalRoot\", \"removeModalRoot\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('CodeEditor', {\n    props: {\n      language\n    }\n  });\n  const {\n    controlId,\n    ariaLabelledby,\n    ariaDescribedby\n  } = useFormFieldContext(props);\n  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight'\n  });\n  const mode = useCurrentMode(__internalRootRef);\n  const isRefresh = useVisualRefresh();\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('code-editor');\n  const i18nModal = useInternalI18n('modal');\n  const errorsTabRef = useRef(null);\n  const warningsTabRef = useRef(null);\n  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n  const paneId = useUniqueId('code-editor-pane');\n  const [paneStatus, setPaneStatus] = useState('hidden');\n  const [annotations, setAnnotations] = useState([]);\n  const [highlightedAnnotation, setHighlightedAnnotation] = useState();\n  const [cursorPosition, setCursorPosition] = useState({\n    row: 0,\n    column: 0\n  });\n  const [isTabFocused, setTabFocused] = useState(false);\n  const {\n    editorRef,\n    editor\n  } = useEditor(ace, themes, loading);\n  useForwardFocus(ref, editorRef);\n  useEffect(() => {\n    if (!ace || !editor) {\n      return;\n    }\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n    return () => {\n      editor === null || editor === void 0 ? void 0 : editor.destroy();\n    };\n  }, [ace, editor]);\n  useSyncEditorLabels(editor, {\n    controlId,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby\n  });\n  const {\n    onResize\n  } = useSyncEditorSize(editor, {\n    width: codeEditorWidth,\n    height: editorContentHeight\n  });\n  useSyncEditorValue(editor, value);\n  useSyncEditorLanguage(editor, language);\n  useSyncEditorWrapLines(editor, preferences === null || preferences === void 0 ? void 0 : preferences.wrapLines);\n  const defaultTheme = getDefaultTheme(mode, themes);\n  useSyncEditorTheme(editor, (_a = preferences === null || preferences === void 0 ? void 0 : preferences.theme) !== null && _a !== void 0 ? _a : defaultTheme);\n  // Change listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n  // Hide error panel when there are no errors to show.\n  useEffect(() => {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, {\n        annotations\n      });\n    }\n  }, [annotations, props.onValidate]);\n  const languageLabel = customLanguageLabel !== null && customLanguageLabel !== void 0 ? customLanguageLabel : getLanguageLabel(language);\n  const errorCount = annotations.filter(a => a.type === 'error').length;\n  const warningCount = annotations.filter(a => a.type === 'warning').length;\n  const currentAnnotations = useMemo(() => annotations.filter(a => a.type === paneStatus), [annotations, paneStatus]);\n  /*\n   * Callbacks\n   */\n  const onEditorKeydown = useCallback(e => {\n    if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n      e.stopPropagation();\n      e.preventDefault();\n      editor.focus();\n    }\n  }, [editor]);\n  const onTabFocus = useCallback(() => setTabFocused(true), []);\n  const onTabBlur = useCallback(() => setTabFocused(false), []);\n  const onErrorPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n  const onWarningPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n  const onPaneClose = () => {\n    setPaneStatus('hidden');\n  };\n  const onAnnotationClick = ({\n    row = 0,\n    column = 0\n  }) => {\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n  const onAnnotationClear = useCallback(() => {\n    setHighlightedAnnotation(undefined);\n  }, []);\n  const [isPreferencesModalVisible, setPreferencesModalVisible] = useState(false);\n  const onPreferencesOpen = () => setPreferencesModalVisible(true);\n  const onPreferencesConfirm = p => {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  const onPreferencesDismiss = () => setPreferencesModalVisible(false);\n  const isPaneVisible = paneStatus !== 'hidden';\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(styles['code-editor'], baseProps.className, {\n      [styles['code-editor-refresh']]: isRefresh\n    }),\n    ref: mergedRef\n  }), loading && React.createElement(LoadingScreen, null, React.createElement(InternalLiveRegion, {\n    tagName: \"span\"\n  }, i18n('i18nStrings.loadingState', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.loadingState))), !ace && !loading && React.createElement(ErrorScreen, {\n    recoveryText: i18n('i18nStrings.errorStateRecovery', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorStateRecovery),\n    onRecoveryClick: props.onRecoveryClick\n  }, i18n('i18nStrings.errorState', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorState)), ace && !loading && React.createElement(React.Fragment, null, React.createElement(ResizableBox, {\n    height: Math.max(editorHeight, 20),\n    minHeight: 20,\n    onResize: height => {\n      setEditorHeight(height);\n      onResize();\n      fireNonCancelableEvent(onEditorContentResize, {\n        height\n      });\n    },\n    handleAriaLabel: i18n('i18nStrings.resizeHandleAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.resizeHandleAriaLabel),\n    handleTooltipText: i18n('i18nStrings.resizeHandleTooltipText', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.resizeHandleTooltipText)\n  }, React.createElement(\"div\", {\n    ref: editorRef,\n    className: clsx(styles.editor, styles.ace, isRefresh && styles['editor-refresh']),\n    onKeyDown: onEditorKeydown,\n    tabIndex: 0,\n    role: \"group\",\n    \"aria-label\": i18n('i18nStrings.editorGroupAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.editorGroupAriaLabel)\n  })), React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-label\": i18n('i18nStrings.statusBarGroupAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.statusBarGroupAriaLabel)\n  }, React.createElement(StatusBar, {\n    languageLabel: languageLabel,\n    cursorPosition: i18n('i18nStrings.cursorPosition', (_b = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition) === null || _b === void 0 ? void 0 : _b.call(i18nStrings, cursorPosition.row + 1, cursorPosition.column + 1), format => format({\n      row: cursorPosition.row + 1,\n      column: cursorPosition.column + 1\n    })),\n    errorCount: errorCount,\n    warningCount: warningCount,\n    paneStatus: paneStatus,\n    onErrorPaneToggle: onErrorPaneToggle,\n    onWarningPaneToggle: onWarningPaneToggle,\n    onTabFocus: onTabFocus,\n    onTabBlur: onTabBlur,\n    errorsTabRef: errorsTabRef,\n    warningsTabRef: warningsTabRef,\n    i18nStrings: i18nStrings,\n    isTabFocused: isTabFocused,\n    paneId: isPaneVisible ? paneId : undefined,\n    onPreferencesOpen: onPreferencesOpen,\n    isRefresh: isRefresh\n  }), React.createElement(Pane, {\n    id: paneId,\n    paneStatus: paneStatus,\n    visible: isPaneVisible,\n    annotations: currentAnnotations,\n    highlighted: highlightedAnnotation,\n    onAnnotationClick: onAnnotationClick,\n    onAnnotationClear: onAnnotationClear,\n    onClose: onPaneClose,\n    cursorPositionLabel: i18n('i18nStrings.cursorPosition', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition, format => (row, column) => format({\n      row,\n      column\n    })),\n    closeButtonAriaLabel: i18n('i18nStrings.paneCloseButtonAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.paneCloseButtonAriaLabel),\n    handleAriaLabel: i18n('i18nStrings.resizeHandleAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.resizeHandleAriaLabel),\n    handleTooltipText: i18n('i18nStrings.resizeHandleTooltipText', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.resizeHandleTooltipText)\n  })), isPreferencesModalVisible && React.createElement(PreferencesModal, {\n    getModalRoot: getModalRoot,\n    removeModalRoot: removeModalRoot,\n    onConfirm: onPreferencesConfirm,\n    onDismiss: onPreferencesDismiss,\n    themes: themes !== null && themes !== void 0 ? themes : DEFAULT_AVAILABLE_THEMES,\n    preferences: preferences,\n    defaultTheme: defaultTheme,\n    i18nStrings: {\n      header: i18n('i18nStrings.preferencesModalHeader', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalHeader),\n      cancel: i18n('i18nStrings.preferencesModalCancel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalCancel),\n      confirm: i18n('i18nStrings.preferencesModalConfirm', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalConfirm),\n      close: i18nModal('closeAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalCloseAriaLabel) || (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalCancel),\n      wrapLines: i18n('i18nStrings.preferencesModalWrapLines', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalWrapLines),\n      theme: i18n('i18nStrings.preferencesModalTheme', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalTheme),\n      lightThemes: i18n('i18nStrings.preferencesModalLightThemes', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalLightThemes),\n      darkThemes: i18n('i18nStrings.preferencesModalDarkThemes', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalDarkThemes),\n      themeFilteringAriaLabel: i18n('i18nStrings.preferencesModalThemeFilteringAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringAriaLabel),\n      themeFilteringPlaceholder: i18n('i18nStrings.preferencesModalThemeFilteringPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringPlaceholder),\n      themeFilteringClearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringClearAriaLabel\n    }\n  })));\n});\napplyDisplayName(CodeEditor, 'CodeEditor');\nexport default CodeEditor;","map":{"version":3,"names":["React","forwardRef","useCallback","useEffect","useMemo","useRef","useState","clsx","useContainerQuery","useCurrentMode","useMergeRefs","useInternalI18n","getBaseProps","useFormFieldContext","fireNonCancelableEvent","useForwardFocus","useBaseComponent","useControllable","useUniqueId","useVisualRefresh","KeyCode","applyDisplayName","InternalLiveRegion","ErrorScreen","useChangeEffect","LoadingScreen","Pane","PreferencesModal","ResizableBox","setupEditor","StatusBar","useEditor","useSyncEditorLabels","useSyncEditorLanguage","useSyncEditorSize","useSyncEditorTheme","useSyncEditorValue","useSyncEditorWrapLines","DEFAULT_AVAILABLE_THEMES","getDefaultTheme","getLanguageLabel","styles","CodeEditor","props","ref","ace","value","language","i18nStrings","editorContentHeight","onEditorContentResize","ariaLabel","languageLabel","customLanguageLabel","preferences","loading","themes","getModalRoot","removeModalRoot","rest","__rest","__internalRootRef","controlId","ariaLabelledby","ariaDescribedby","editorHeight","setEditorHeight","componentName","changeHandler","controlledProp","mode","isRefresh","baseProps","i18n","i18nModal","errorsTabRef","warningsTabRef","codeEditorWidth","codeEditorMeasureRef","rect","contentBoxWidth","mergedRef","paneId","paneStatus","setPaneStatus","annotations","setAnnotations","highlightedAnnotation","setHighlightedAnnotation","cursorPosition","setCursorPosition","row","column","isTabFocused","setTabFocused","editorRef","editor","destroy","onResize","width","height","wrapLines","defaultTheme","_a","theme","onChange","onDelayedChange","length","onValidate","errorCount","filter","a","type","warningCount","currentAnnotations","onEditorKeydown","e","target","container","keyCode","enter","stopPropagation","preventDefault","focus","onTabFocus","onTabBlur","onErrorPaneToggle","onWarningPaneToggle","onPaneClose","onAnnotationClick","gotoLine","undefined","onAnnotationClear","isPreferencesModalVisible","setPreferencesModalVisible","onPreferencesOpen","onPreferencesConfirm","p","onPreferencesChange","onPreferencesDismiss","isPaneVisible","createElement","Object","assign","className","tagName","loadingState","recoveryText","errorStateRecovery","onRecoveryClick","errorState","Fragment","Math","max","minHeight","handleAriaLabel","resizeHandleAriaLabel","handleTooltipText","resizeHandleTooltipText","onKeyDown","tabIndex","role","editorGroupAriaLabel","statusBarGroupAriaLabel","_b","call","format","id","visible","highlighted","onClose","cursorPositionLabel","closeButtonAriaLabel","paneCloseButtonAriaLabel","onConfirm","onDismiss","header","preferencesModalHeader","cancel","preferencesModalCancel","confirm","preferencesModalConfirm","close","preferencesModalCloseAriaLabel","preferencesModalWrapLines","preferencesModalTheme","lightThemes","preferencesModalLightThemes","darkThemes","preferencesModalDarkThemes","themeFilteringAriaLabel","preferencesModalThemeFilteringAriaLabel","themeFilteringPlaceholder","preferencesModalThemeFilteringPlaceholder","themeFilteringClearAriaLabel","preferencesModalThemeFilteringClearAriaLabel"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/code-editor/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Ace } from 'ace-builds';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useCurrentMode, useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalLiveRegion from '../live-region/internal';\nimport ErrorScreen from './error-screen';\nimport { CodeEditorProps } from './interfaces';\nimport { useChangeEffect } from './listeners';\nimport LoadingScreen from './loading-screen';\nimport { Pane } from './pane';\nimport PreferencesModal from './preferences-modal';\nimport { ResizableBox } from './resizable-box';\nimport { setupEditor } from './setup-editor';\nimport { StatusBar } from './status-bar';\nimport {\n  useEditor,\n  useSyncEditorLabels,\n  useSyncEditorLanguage,\n  useSyncEditorSize,\n  useSyncEditorTheme,\n  useSyncEditorValue,\n  useSyncEditorWrapLines,\n} from './use-editor';\nimport { DEFAULT_AVAILABLE_THEMES, getDefaultTheme, getLanguageLabel, PaneStatus } from './util';\n\nimport styles from './styles.css.js';\n\nexport { CodeEditorProps };\n\nconst CodeEditor = forwardRef((props: CodeEditorProps, ref: React.Ref<CodeEditorProps.Ref>) => {\n  const {\n    ace,\n    value,\n    language,\n    i18nStrings,\n    editorContentHeight,\n    onEditorContentResize,\n    ariaLabel,\n    languageLabel: customLanguageLabel,\n    preferences,\n    loading,\n    themes,\n    getModalRoot,\n    removeModalRoot,\n    ...rest\n  } = props;\n  const { __internalRootRef } = useBaseComponent('CodeEditor', { props: { language } });\n  const { controlId, ariaLabelledby, ariaDescribedby } = useFormFieldContext(props);\n  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {\n    componentName: 'code-editor',\n    changeHandler: 'onEditorContentResize',\n    controlledProp: 'editorContentHeight',\n  });\n  const mode = useCurrentMode(__internalRootRef);\n  const isRefresh = useVisualRefresh();\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('code-editor');\n  const i18nModal = useInternalI18n('modal');\n\n  const errorsTabRef = useRef<HTMLButtonElement>(null);\n  const warningsTabRef = useRef<HTMLButtonElement>(null);\n  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);\n\n  const paneId = useUniqueId('code-editor-pane');\n\n  const [paneStatus, setPaneStatus] = useState<PaneStatus>('hidden');\n  const [annotations, setAnnotations] = useState<Ace.Annotation[]>([]);\n  const [highlightedAnnotation, setHighlightedAnnotation] = useState<Ace.Annotation>();\n  const [cursorPosition, setCursorPosition] = useState<Ace.Point>({ row: 0, column: 0 });\n  const [isTabFocused, setTabFocused] = useState<boolean>(false);\n\n  const { editorRef, editor } = useEditor(ace, themes, loading);\n\n  useForwardFocus(ref, editorRef);\n\n  useEffect(() => {\n    if (!ace || !editor) {\n      return;\n    }\n\n    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);\n\n    return () => {\n      editor?.destroy();\n    };\n  }, [ace, editor]);\n\n  useSyncEditorLabels(editor, { controlId, ariaLabel, ariaLabelledby, ariaDescribedby });\n\n  const { onResize } = useSyncEditorSize(editor, { width: codeEditorWidth, height: editorContentHeight });\n\n  useSyncEditorValue(editor, value);\n\n  useSyncEditorLanguage(editor, language);\n\n  useSyncEditorWrapLines(editor, preferences?.wrapLines);\n\n  const defaultTheme = getDefaultTheme(mode, themes);\n  useSyncEditorTheme(editor, preferences?.theme ?? defaultTheme);\n\n  // Change listeners\n  useChangeEffect(editor, props.onChange, props.onDelayedChange);\n\n  // Hide error panel when there are no errors to show.\n  useEffect(() => {\n    if (annotations.length === 0) {\n      setPaneStatus('hidden');\n    }\n\n    if (props.onValidate) {\n      fireNonCancelableEvent(props.onValidate, { annotations });\n    }\n  }, [annotations, props.onValidate]);\n\n  const languageLabel = customLanguageLabel ?? getLanguageLabel(language);\n\n  const errorCount = annotations.filter(a => a.type === 'error').length;\n  const warningCount = annotations.filter(a => a.type === 'warning').length;\n  const currentAnnotations = useMemo(() => annotations.filter(a => a.type === paneStatus), [annotations, paneStatus]);\n\n  /*\n   * Callbacks\n   */\n\n  const onEditorKeydown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {\n        e.stopPropagation();\n        e.preventDefault();\n        editor.focus();\n      }\n    },\n    [editor]\n  );\n\n  const onTabFocus = useCallback(() => setTabFocused(true), []);\n  const onTabBlur = useCallback(() => setTabFocused(false), []);\n\n  const onErrorPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'error' ? 'error' : 'hidden');\n  }, [paneStatus]);\n\n  const onWarningPaneToggle = useCallback(() => {\n    setPaneStatus(paneStatus !== 'warning' ? 'warning' : 'hidden');\n  }, [paneStatus]);\n\n  const onPaneClose = () => {\n    setPaneStatus('hidden');\n  };\n\n  const onAnnotationClick = ({ row = 0, column = 0 }: Ace.Annotation) => {\n    if (!editor) {\n      return;\n    }\n    editor.focus();\n    editor.gotoLine(row + 1, column, false);\n    setHighlightedAnnotation(undefined);\n  };\n\n  const onAnnotationClear = useCallback(() => {\n    setHighlightedAnnotation(undefined);\n  }, []);\n\n  const [isPreferencesModalVisible, setPreferencesModalVisible] = useState(false);\n  const onPreferencesOpen = () => setPreferencesModalVisible(true);\n  const onPreferencesConfirm = (p: CodeEditorProps.Preferences) => {\n    fireNonCancelableEvent(props.onPreferencesChange, p);\n    setPreferencesModalVisible(false);\n  };\n  const onPreferencesDismiss = () => setPreferencesModalVisible(false);\n\n  const isPaneVisible = paneStatus !== 'hidden';\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(styles['code-editor'], baseProps.className, { [styles['code-editor-refresh']]: isRefresh })}\n      ref={mergedRef}\n    >\n      {loading && (\n        <LoadingScreen>\n          <InternalLiveRegion tagName=\"span\">\n            {i18n('i18nStrings.loadingState', i18nStrings?.loadingState)}\n          </InternalLiveRegion>\n        </LoadingScreen>\n      )}\n\n      {!ace && !loading && (\n        <ErrorScreen\n          recoveryText={i18n('i18nStrings.errorStateRecovery', i18nStrings?.errorStateRecovery)}\n          onRecoveryClick={props.onRecoveryClick}\n        >\n          {i18n('i18nStrings.errorState', i18nStrings?.errorState)}\n        </ErrorScreen>\n      )}\n\n      {ace && !loading && (\n        <>\n          <ResizableBox\n            height={Math.max(editorHeight, 20)}\n            minHeight={20}\n            onResize={height => {\n              setEditorHeight(height);\n              onResize();\n              fireNonCancelableEvent(onEditorContentResize, { height });\n            }}\n            handleAriaLabel={i18n('i18nStrings.resizeHandleAriaLabel', i18nStrings?.resizeHandleAriaLabel)}\n            handleTooltipText={i18n('i18nStrings.resizeHandleTooltipText', i18nStrings?.resizeHandleTooltipText)}\n          >\n            <div\n              ref={editorRef}\n              className={clsx(styles.editor, styles.ace, isRefresh && styles['editor-refresh'])}\n              onKeyDown={onEditorKeydown}\n              tabIndex={0}\n              role=\"group\"\n              aria-label={i18n('i18nStrings.editorGroupAriaLabel', i18nStrings?.editorGroupAriaLabel)}\n            />\n          </ResizableBox>\n          <div\n            role=\"group\"\n            aria-label={i18n('i18nStrings.statusBarGroupAriaLabel', i18nStrings?.statusBarGroupAriaLabel)}\n          >\n            <StatusBar\n              languageLabel={languageLabel}\n              cursorPosition={i18n(\n                'i18nStrings.cursorPosition',\n                i18nStrings?.cursorPosition?.(cursorPosition.row + 1, cursorPosition.column + 1),\n                format => format({ row: cursorPosition.row + 1, column: cursorPosition.column + 1 })\n              )}\n              errorCount={errorCount}\n              warningCount={warningCount}\n              paneStatus={paneStatus}\n              onErrorPaneToggle={onErrorPaneToggle}\n              onWarningPaneToggle={onWarningPaneToggle}\n              onTabFocus={onTabFocus}\n              onTabBlur={onTabBlur}\n              errorsTabRef={errorsTabRef}\n              warningsTabRef={warningsTabRef}\n              i18nStrings={i18nStrings}\n              isTabFocused={isTabFocused}\n              paneId={isPaneVisible ? paneId : undefined}\n              onPreferencesOpen={onPreferencesOpen}\n              isRefresh={isRefresh}\n            />\n            <Pane\n              id={paneId}\n              paneStatus={paneStatus}\n              visible={isPaneVisible}\n              annotations={currentAnnotations}\n              highlighted={highlightedAnnotation}\n              onAnnotationClick={onAnnotationClick}\n              onAnnotationClear={onAnnotationClear}\n              onClose={onPaneClose}\n              cursorPositionLabel={i18n(\n                'i18nStrings.cursorPosition',\n                i18nStrings?.cursorPosition,\n                format => (row, column) => format({ row, column })\n              )}\n              closeButtonAriaLabel={i18n('i18nStrings.paneCloseButtonAriaLabel', i18nStrings?.paneCloseButtonAriaLabel)}\n              handleAriaLabel={i18n('i18nStrings.resizeHandleAriaLabel', i18nStrings?.resizeHandleAriaLabel)}\n              handleTooltipText={i18n('i18nStrings.resizeHandleTooltipText', i18nStrings?.resizeHandleTooltipText)}\n            />\n          </div>\n          {isPreferencesModalVisible && (\n            <PreferencesModal\n              getModalRoot={getModalRoot}\n              removeModalRoot={removeModalRoot}\n              onConfirm={onPreferencesConfirm}\n              onDismiss={onPreferencesDismiss}\n              themes={themes ?? DEFAULT_AVAILABLE_THEMES}\n              preferences={preferences}\n              defaultTheme={defaultTheme}\n              i18nStrings={{\n                header: i18n('i18nStrings.preferencesModalHeader', i18nStrings?.preferencesModalHeader),\n                cancel: i18n('i18nStrings.preferencesModalCancel', i18nStrings?.preferencesModalCancel),\n                confirm: i18n('i18nStrings.preferencesModalConfirm', i18nStrings?.preferencesModalConfirm),\n                close:\n                  i18nModal('closeAriaLabel', i18nStrings?.preferencesModalCloseAriaLabel) ||\n                  i18nStrings?.preferencesModalCancel,\n                wrapLines: i18n('i18nStrings.preferencesModalWrapLines', i18nStrings?.preferencesModalWrapLines),\n                theme: i18n('i18nStrings.preferencesModalTheme', i18nStrings?.preferencesModalTheme),\n                lightThemes: i18n('i18nStrings.preferencesModalLightThemes', i18nStrings?.preferencesModalLightThemes),\n                darkThemes: i18n('i18nStrings.preferencesModalDarkThemes', i18nStrings?.preferencesModalDarkThemes),\n                themeFilteringAriaLabel: i18n(\n                  'i18nStrings.preferencesModalThemeFilteringAriaLabel',\n                  i18nStrings?.preferencesModalThemeFilteringAriaLabel\n                ),\n                themeFilteringPlaceholder: i18n(\n                  'i18nStrings.preferencesModalThemeFilteringPlaceholder',\n                  i18nStrings?.preferencesModalThemeFilteringPlaceholder\n                ),\n                themeFilteringClearAriaLabel: i18nStrings?.preferencesModalThemeFilteringClearAriaLabel,\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n});\n\napplyDisplayName(CodeEditor, 'CodeEditor');\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}