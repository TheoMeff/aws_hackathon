{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport InternalIcon from '../../../icon/internal';\nimport { ResizeIcon } from './resize-icon';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\nconst DragHandleButton = forwardRef(({\n  variant = 'drag-indicator',\n  size = 'normal',\n  className,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaDescribedby,\n  ariaValue,\n  disabled,\n  onPointerDown,\n  onKeyDown\n}, ref) => {\n  const dragHandleRefObject = useRef(null);\n  const iconProps = (() => {\n    const shared = {\n      variant: disabled ? 'disabled' : undefined,\n      size\n    };\n    switch (variant) {\n      case 'drag-indicator':\n        return Object.assign(Object.assign({}, shared), {\n          name: 'drag-indicator'\n        });\n      case 'resize-area':\n        return Object.assign(Object.assign({}, shared), {\n          name: 'resize-area'\n        });\n      case 'resize-horizontal':\n        return Object.assign(Object.assign({}, shared), {\n          svg: React.createElement(ResizeIcon, {\n            variant: \"horizontal\"\n          })\n        });\n      case 'resize-vertical':\n        return Object.assign(Object.assign({}, shared), {\n          svg: React.createElement(ResizeIcon, {\n            variant: \"vertical\"\n          })\n        });\n    }\n  })();\n  return (\n    // We need to use a div with button role instead of a button\n    // so that Safari will focus on it when clicking it.\n    // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n    // Otherwise, we can't reliably catch keyboard events coming from the handle\n    // when it is being dragged.\n    React.createElement(\"div\", {\n      ref: useMergeRefs(ref, dragHandleRefObject),\n      role: ariaValue ? 'slider' : 'button',\n      tabIndex: 0,\n      className: clsx(className, styles.handle, testUtilsStyles.root, styles[`handle-${variant}`], styles[`handle-size-${size}`], disabled && styles['handle-disabled']),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedby,\n      \"aria-disabled\": disabled,\n      \"aria-valuemax\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueMax,\n      \"aria-valuemin\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueMin,\n      \"aria-valuenow\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueNow,\n      onPointerDown: onPointerDown,\n      onKeyDown: onKeyDown\n    }, React.createElement(InternalIcon, Object.assign({}, iconProps)))\n  );\n});\nexport default DragHandleButton;","map":{"version":3,"names":["React","forwardRef","useRef","clsx","useMergeRefs","InternalIcon","ResizeIcon","styles","testUtilsStyles","DragHandleButton","variant","size","className","ariaLabel","ariaLabelledBy","ariaDescribedby","ariaValue","disabled","onPointerDown","onKeyDown","ref","dragHandleRefObject","iconProps","shared","undefined","Object","assign","name","svg","createElement","role","tabIndex","handle","root","valueMax","valueMin","valueNow"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/components/drag-handle/button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport { DragHandleProps } from './interfaces';\nimport { ResizeIcon } from './resize-icon';\n\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\n\nconst DragHandleButton = forwardRef(\n  (\n    {\n      variant = 'drag-indicator',\n      size = 'normal',\n      className,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedby,\n      ariaValue,\n      disabled,\n      onPointerDown,\n      onKeyDown,\n    }: DragHandleProps,\n    ref: React.Ref<Element>\n  ) => {\n    const dragHandleRefObject = useRef<HTMLDivElement>(null);\n\n    const iconProps: IconProps = (() => {\n      const shared = { variant: disabled ? ('disabled' as const) : undefined, size };\n      switch (variant) {\n        case 'drag-indicator':\n          return { ...shared, name: 'drag-indicator' };\n        case 'resize-area':\n          return { ...shared, name: 'resize-area' };\n        case 'resize-horizontal':\n          return { ...shared, svg: <ResizeIcon variant=\"horizontal\" /> };\n        case 'resize-vertical':\n          return { ...shared, svg: <ResizeIcon variant=\"vertical\" /> };\n      }\n    })();\n\n    return (\n      // We need to use a div with button role instead of a button\n      // so that Safari will focus on it when clicking it.\n      // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n      // Otherwise, we can't reliably catch keyboard events coming from the handle\n      // when it is being dragged.\n      <div\n        ref={useMergeRefs(ref, dragHandleRefObject)}\n        role={ariaValue ? 'slider' : 'button'}\n        tabIndex={0}\n        className={clsx(\n          className,\n          styles.handle,\n          testUtilsStyles.root,\n          styles[`handle-${variant}`],\n          styles[`handle-size-${size}`],\n          disabled && styles['handle-disabled']\n        )}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedby}\n        aria-disabled={disabled}\n        aria-valuemax={ariaValue?.valueMax}\n        aria-valuemin={ariaValue?.valueMin}\n        aria-valuenow={ariaValue?.valueNow}\n        onPointerDown={onPointerDown}\n        onKeyDown={onKeyDown}\n      >\n        <InternalIcon {...iconProps} />\n      </div>\n    );\n  }\n);\n\nexport default DragHandleButton;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,+CAA+C;AAG5E,OAAOC,YAAY,MAAM,wBAAwB;AAEjD,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,gBAAgB,GAAGR,UAAU,CACjC,CACE;EACES,OAAO,GAAG,gBAAgB;EAC1BC,IAAI,GAAG,QAAQ;EACfC,SAAS;EACTC,SAAS;EACTC,cAAc;EACdC,eAAe;EACfC,SAAS;EACTC,QAAQ;EACRC,aAAa;EACbC;AAAS,CACO,EAClBC,GAAuB,KACrB;EACF,MAAMC,mBAAmB,GAAGnB,MAAM,CAAiB,IAAI,CAAC;EAExD,MAAMoB,SAAS,GAAc,CAAC,MAAK;IACjC,MAAMC,MAAM,GAAG;MAAEb,OAAO,EAAEO,QAAQ,GAAI,UAAoB,GAAGO,SAAS;MAAEb;IAAI,CAAE;IAC9E,QAAQD,OAAO;MACb,KAAK,gBAAgB;QACnB,OAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEI,IAAI,EAAE;QAAgB;MAC5C,KAAK,aAAa;QAChB,OAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEI,IAAI,EAAE;QAAa;MACzC,KAAK,mBAAmB;QACtB,OAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEK,GAAG,EAAE5B,KAAA,CAAA6B,aAAA,CAACvB,UAAU;YAACI,OAAO,EAAC;UAAY;QAAG;MAC9D,KAAK,iBAAiB;QACpB,OAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEK,GAAG,EAAE5B,KAAA,CAAA6B,aAAA,CAACvB,UAAU;YAACI,OAAO,EAAC;UAAU;QAAG;;EAEhE,CAAC,EAAC,CAAE;EAEJ;IACE;IACA;IACA;IACA;IACA;IACAV,KAAA,CAAA6B,aAAA;MACET,GAAG,EAAEhB,YAAY,CAACgB,GAAG,EAAEC,mBAAmB,CAAC;MAC3CS,IAAI,EAAEd,SAAS,GAAG,QAAQ,GAAG,QAAQ;MACrCe,QAAQ,EAAE,CAAC;MACXnB,SAAS,EAAET,IAAI,CACbS,SAAS,EACTL,MAAM,CAACyB,MAAM,EACbxB,eAAe,CAACyB,IAAI,EACpB1B,MAAM,CAAC,UAAUG,OAAO,EAAE,CAAC,EAC3BH,MAAM,CAAC,eAAeI,IAAI,EAAE,CAAC,EAC7BM,QAAQ,IAAIV,MAAM,CAAC,iBAAiB,CAAC,CACtC;MAAA,cACWM,SAAS;MAAA,mBACJC,cAAc;MAAA,oBACbC,eAAe;MAAA,iBAClBE,QAAQ;MAAA,iBACRD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkB,QAAQ;MAAA,iBACnBlB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEmB,QAAQ;MAAA,iBACnBnB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEoB,QAAQ;MAClClB,aAAa,EAAEA,aAAa;MAC5BC,SAAS,EAAEA;IAAS,GAEpBnB,KAAA,CAAA6B,aAAA,CAACxB,YAAY,EAAAoB,MAAA,CAAAC,MAAA,KAAKJ,SAAS,EAAI;EAC3B;AAEV,CAAC,CACF;AAED,eAAeb,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}