{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { getItemGridColumns, getRemoveButtonGridColumns, isRemoveButtonOnSameLine } from './utils';\nimport styles from './styles.css.js';\nfunction render(item, itemIndex, slot) {\n  if (isSlotFunction(slot)) {\n    return slot(item, itemIndex);\n  }\n  return slot;\n  function isSlotFunction(slot) {\n    return typeof slot === 'function';\n  }\n}\nexport const Row = React.memo(({\n  breakpoint,\n  item,\n  definition,\n  layout,\n  i18nStrings = {},\n  index,\n  removable,\n  removeButtonText,\n  removeButtonRefs,\n  customRowActions,\n  onRemoveButtonClick,\n  removeButtonAriaLabel\n}) => {\n  var _a;\n  const i18n = useInternalI18n('attribute-editor');\n  const handleRemoveClick = useCallback(() => {\n    fireNonCancelableEvent(onRemoveButtonClick, {\n      itemIndex: index\n    });\n  }, [onRemoveButtonClick, index]);\n  const firstControlId = useUniqueId('first-control-id-');\n  const buttonRef = ref => {\n    removeButtonRefs[index] = ref !== null && ref !== void 0 ? ref : undefined;\n  };\n  let gridColumnStart = 1;\n  let gridColumnEnd = 1;\n  const removeButtonOnSameLine = isRemoveButtonOnSameLine(layout);\n  const customActions = customRowActions === null || customRowActions === void 0 ? void 0 : customRowActions({\n    item,\n    itemIndex: index,\n    ref: buttonRef,\n    breakpoint,\n    ownRow: !removeButtonOnSameLine\n  });\n  return React.createElement(\"div\", {\n    className: clsx(styles.row, layout.rows.length === 1 && styles['single-row']),\n    role: \"group\",\n    \"aria-labelledby\": `${firstControlId}-label ${firstControlId}`\n  }, definition.map(({\n    info,\n    label,\n    constraintText,\n    errorText,\n    warningText,\n    control\n  }, defIndex) => {\n    ({\n      gridColumnStart,\n      gridColumnEnd\n    } = getItemGridColumns(layout, defIndex));\n    return React.createElement(InternalFormField, {\n      key: defIndex,\n      className: styles.field,\n      __style: {\n        gridColumnStart,\n        gridColumnEnd\n      },\n      label: label,\n      info: info,\n      constraintText: render(item, index, constraintText),\n      errorText: render(item, index, errorText),\n      warningText: render(item, index, warningText),\n      stretch: true,\n      i18nStrings: {\n        errorIconAriaLabel: i18nStrings.errorIconAriaLabel,\n        warningIconAriaLabel: i18nStrings.warningIconAriaLabel\n      },\n      __hideLabel: index !== 0 && removeButtonOnSameLine,\n      controlId: defIndex === 0 ? firstControlId : undefined\n    }, render(item, index, control));\n  }), React.createElement(\"div\", {\n    className: clsx(styles['remove-button-container'], {\n      [styles['remove-button-field-padding']]: removeButtonOnSameLine && index === 0,\n      [styles['remove-button-own-row']]: !removeButtonOnSameLine\n    }),\n    style: Object.assign({}, getRemoveButtonGridColumns(layout, gridColumnEnd))\n  }, removable && (customActions !== undefined ? customActions : React.createElement(InternalButton, {\n    className: styles['remove-button'],\n    formAction: \"none\",\n    ref: buttonRef,\n    ariaLabel: (_a = removeButtonAriaLabel !== null && removeButtonAriaLabel !== void 0 ? removeButtonAriaLabel : i18nStrings.removeButtonAriaLabel) === null || _a === void 0 ? void 0 : _a(item),\n    onClick: handleRemoveClick\n  }, i18n('removeButtonText', removeButtonText)))), !removeButtonOnSameLine && React.createElement(\"div\", {\n    className: styles.divider\n  }));\n});","map":{"version":3,"names":["React","useCallback","clsx","InternalButton","InternalFormField","useInternalI18n","fireNonCancelableEvent","useUniqueId","getItemGridColumns","getRemoveButtonGridColumns","isRemoveButtonOnSameLine","styles","render","item","itemIndex","slot","isSlotFunction","Row","memo","breakpoint","definition","layout","i18nStrings","index","removable","removeButtonText","removeButtonRefs","customRowActions","onRemoveButtonClick","removeButtonAriaLabel","i18n","handleRemoveClick","firstControlId","buttonRef","ref","undefined","gridColumnStart","gridColumnEnd","removeButtonOnSameLine","customActions","ownRow","createElement","className","row","rows","length","role","map","info","label","constraintText","errorText","warningText","control","defIndex","key","field","__style","stretch","errorIconAriaLabel","warningIconAriaLabel","__hideLabel","controlId","style","Object","assign","formAction","ariaLabel","_a","onClick","divider"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/attribute-editor/row.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { Breakpoint } from '../internal/breakpoints';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { AttributeEditorProps } from './interfaces';\nimport { getItemGridColumns, getRemoveButtonGridColumns, isRemoveButtonOnSameLine } from './utils';\n\nimport styles from './styles.css.js';\n\ninterface RowProps<T> {\n  breakpoint: Breakpoint | null;\n  layout: AttributeEditorProps.GridLayout;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  i18nStrings: AttributeEditorProps.I18nStrings | undefined;\n  index: number;\n  removable: boolean;\n  removeButtonText?: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  customRowActions?: (props: AttributeEditorProps.RowActionsProps<T>) => React.ReactNode;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n  removeButtonAriaLabel?: (item: T) => string;\n}\n\nfunction render<T>(\n  item: T,\n  itemIndex: number,\n  slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode | undefined\n) {\n  if (isSlotFunction(slot)) {\n    return slot(item, itemIndex);\n  }\n  return slot;\n\n  function isSlotFunction(slot: unknown): slot is AttributeEditorProps.FieldRenderable<T> {\n    return typeof slot === 'function';\n  }\n}\n\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    layout,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    customRowActions,\n    onRemoveButtonClick,\n    removeButtonAriaLabel,\n  }: RowProps<T>) => {\n    const i18n = useInternalI18n('attribute-editor');\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    const firstControlId = useUniqueId('first-control-id-');\n\n    const buttonRef = (ref: ButtonProps.Ref | null) => {\n      removeButtonRefs[index] = ref ?? undefined;\n    };\n\n    let gridColumnStart = 1;\n    let gridColumnEnd = 1;\n    const removeButtonOnSameLine = isRemoveButtonOnSameLine(layout);\n\n    const customActions = customRowActions?.({\n      item,\n      itemIndex: index,\n      ref: buttonRef,\n      breakpoint,\n      ownRow: !removeButtonOnSameLine,\n    });\n\n    return (\n      <div\n        className={clsx(styles.row, layout.rows.length === 1 && styles['single-row'])}\n        role=\"group\"\n        aria-labelledby={`${firstControlId}-label ${firstControlId}`}\n      >\n        {definition.map(({ info, label, constraintText, errorText, warningText, control }, defIndex) => {\n          ({ gridColumnStart, gridColumnEnd } = getItemGridColumns(layout, defIndex));\n          return (\n            <InternalFormField\n              key={defIndex}\n              className={styles.field}\n              __style={{ gridColumnStart, gridColumnEnd }}\n              label={label}\n              info={info}\n              constraintText={render(item, index, constraintText)}\n              errorText={render(item, index, errorText)}\n              warningText={render(item, index, warningText)}\n              stretch={true}\n              i18nStrings={{\n                errorIconAriaLabel: i18nStrings.errorIconAriaLabel,\n                warningIconAriaLabel: i18nStrings.warningIconAriaLabel,\n              }}\n              __hideLabel={index !== 0 && removeButtonOnSameLine}\n              controlId={defIndex === 0 ? firstControlId : undefined}\n            >\n              {render(item, index, control)}\n            </InternalFormField>\n          );\n        })}\n        <div\n          className={clsx(styles['remove-button-container'], {\n            [styles['remove-button-field-padding']]: removeButtonOnSameLine && index === 0,\n            [styles['remove-button-own-row']]: !removeButtonOnSameLine,\n          })}\n          style={{ ...getRemoveButtonGridColumns(layout, gridColumnEnd) }}\n        >\n          {removable &&\n            (customActions !== undefined ? (\n              customActions\n            ) : (\n              <InternalButton\n                className={styles['remove-button']}\n                formAction=\"none\"\n                ref={buttonRef}\n                ariaLabel={(removeButtonAriaLabel ?? i18nStrings.removeButtonAriaLabel)?.(item)}\n                onClick={handleRemoveClick}\n              >\n                {i18n('removeButtonText', removeButtonText)}\n              </InternalButton>\n            ))}\n        </div>\n        {!removeButtonOnSameLine && <div className={styles.divider} />}\n      </div>\n    );\n  }\n) as <T>(props: RowProps<T>) => JSX.Element;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}