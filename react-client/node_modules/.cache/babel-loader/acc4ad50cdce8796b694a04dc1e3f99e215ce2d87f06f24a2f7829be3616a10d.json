{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from './styles.css.js';\nconst splitOnFiltering = (str, highlightText) => {\n  // We match by creating a regex using user-provided strings, so we skip\n  // highlighting if the generated regex would be too memory intensive.\n  if (highlightText.length > 10000) {\n    return {\n      noMatches: [str],\n      matches: null\n    };\n  }\n  // Filtering needs to be case insensitive\n  const filteringPattern = highlightText.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n  const regexp = new RegExp(filteringPattern, 'gi');\n  const noMatches = str.split(regexp);\n  const matches = str.match(regexp);\n  return {\n    noMatches,\n    matches\n  };\n};\nfunction Highlight({\n  str\n}) {\n  return str ? React.createElement(\"mark\", {\n    className: styles['filtering-match-highlight']\n  }, str) : null;\n}\nexport default function HighlightMatch({\n  str,\n  highlightText\n}) {\n  if (!str || !highlightText) {\n    return React.createElement(\"span\", null, str);\n  }\n  if (str === highlightText) {\n    return React.createElement(Highlight, {\n      str: str\n    });\n  }\n  const {\n    noMatches,\n    matches\n  } = splitOnFiltering(str, highlightText);\n  const highlighted = [];\n  noMatches.forEach((noMatch, idx) => {\n    highlighted.push(React.createElement(\"span\", {\n      key: `noMatch-${idx}`\n    }, noMatch));\n    if (matches && idx < matches.length) {\n      highlighted.push(React.createElement(Highlight, {\n        key: `match-${idx}`,\n        str: matches[idx]\n      }));\n    }\n  });\n  return React.createElement(\"span\", null, highlighted);\n}","map":{"version":3,"names":["React","styles","splitOnFiltering","str","highlightText","length","noMatches","matches","filteringPattern","replace","regexp","RegExp","split","match","Highlight","createElement","className","HighlightMatch","highlighted","forEach","noMatch","idx","push","key"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/components/option/highlight-match.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport styles from './styles.css.js';\n\nconst splitOnFiltering = (str: string, highlightText: string) => {\n  // We match by creating a regex using user-provided strings, so we skip\n  // highlighting if the generated regex would be too memory intensive.\n  if (highlightText.length > 10_000) {\n    return { noMatches: [str], matches: null };\n  }\n\n  // Filtering needs to be case insensitive\n  const filteringPattern = highlightText.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n  const regexp = new RegExp(filteringPattern, 'gi');\n  const noMatches = str.split(regexp);\n  const matches = str.match(regexp);\n\n  return { noMatches, matches };\n};\n\ninterface HighlightMatchProps {\n  str?: string;\n  highlightText?: string;\n}\n\nfunction Highlight({ str }: HighlightMatchProps) {\n  return str ? <mark className={styles['filtering-match-highlight']}>{str}</mark> : null;\n}\n\nexport default function HighlightMatch({ str, highlightText }: HighlightMatchProps) {\n  if (!str || !highlightText) {\n    return <span>{str}</span>;\n  }\n\n  if (str === highlightText) {\n    return <Highlight str={str} />;\n  }\n\n  const { noMatches, matches } = splitOnFiltering(str, highlightText);\n\n  const highlighted: (string | JSX.Element)[] = [];\n\n  noMatches.forEach((noMatch, idx) => {\n    highlighted.push(<span key={`noMatch-${idx}`}>{noMatch}</span>);\n\n    if (matches && idx < matches.length) {\n      highlighted.push(<Highlight key={`match-${idx}`} str={matches[idx]} />);\n    }\n  });\n\n  return <span>{highlighted}</span>;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,gBAAgB,GAAGA,CAACC,GAAW,EAAEC,aAAqB,KAAI;EAC9D;EACA;EACA,IAAIA,aAAa,CAACC,MAAM,GAAG,KAAM,EAAE;IACjC,OAAO;MAAEC,SAAS,EAAE,CAACH,GAAG,CAAC;MAAEI,OAAO,EAAE;IAAI,CAAE;;EAG5C;EACA,MAAMC,gBAAgB,GAAGJ,aAAa,CAACK,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC;EAC/E,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACH,gBAAgB,EAAE,IAAI,CAAC;EACjD,MAAMF,SAAS,GAAGH,GAAG,CAACS,KAAK,CAACF,MAAM,CAAC;EACnC,MAAMH,OAAO,GAAGJ,GAAG,CAACU,KAAK,CAACH,MAAM,CAAC;EAEjC,OAAO;IAAEJ,SAAS;IAAEC;EAAO,CAAE;AAC/B,CAAC;AAOD,SAASO,SAASA,CAAC;EAAEX;AAAG,CAAuB;EAC7C,OAAOA,GAAG,GAAGH,KAAA,CAAAe,aAAA;IAAMC,SAAS,EAAEf,MAAM,CAAC,2BAA2B;EAAC,GAAGE,GAAG,CAAQ,GAAG,IAAI;AACxF;AAEA,eAAc,SAAUc,cAAcA,CAAC;EAAEd,GAAG;EAAEC;AAAa,CAAuB;EAChF,IAAI,CAACD,GAAG,IAAI,CAACC,aAAa,EAAE;IAC1B,OAAOJ,KAAA,CAAAe,aAAA,eAAOZ,GAAG,CAAQ;;EAG3B,IAAIA,GAAG,KAAKC,aAAa,EAAE;IACzB,OAAOJ,KAAA,CAAAe,aAAA,CAACD,SAAS;MAACX,GAAG,EAAEA;IAAG,EAAI;;EAGhC,MAAM;IAAEG,SAAS;IAAEC;EAAO,CAAE,GAAGL,gBAAgB,CAACC,GAAG,EAAEC,aAAa,CAAC;EAEnE,MAAMc,WAAW,GAA6B,EAAE;EAEhDZ,SAAS,CAACa,OAAO,CAAC,CAACC,OAAO,EAAEC,GAAG,KAAI;IACjCH,WAAW,CAACI,IAAI,CAACtB,KAAA,CAAAe,aAAA;MAAMQ,GAAG,EAAE,WAAWF,GAAG;IAAE,GAAGD,OAAO,CAAQ,CAAC;IAE/D,IAAIb,OAAO,IAAIc,GAAG,GAAGd,OAAO,CAACF,MAAM,EAAE;MACnCa,WAAW,CAACI,IAAI,CAACtB,KAAA,CAAAe,aAAA,CAACD,SAAS;QAACS,GAAG,EAAE,SAASF,GAAG,EAAE;QAAElB,GAAG,EAAEI,OAAO,CAACc,GAAG;MAAC,EAAI,CAAC;;EAE3E,CAAC,CAAC;EAEF,OAAOrB,KAAA,CAAAe,aAAA,eAAOG,WAAW,CAAQ;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}