{"ast":null,"code":"export function getItemGridColumns(layout, itemIndex) {\n  let i = 0;\n  for (const row of layout.rows) {\n    let gridColumnStart = 1;\n    for (const columnWidth of row) {\n      if (i === itemIndex) {\n        return {\n          gridColumnStart,\n          gridColumnEnd: gridColumnStart + columnWidth\n        };\n      } else {\n        gridColumnStart += columnWidth;\n      }\n      i++;\n    }\n  }\n  return {\n    gridColumnStart: 1,\n    gridColumnEnd: 1\n  };\n}\nexport function getRemoveButtonGridColumns(layout, previousGridColumnEnd) {\n  var _a, _b;\n  const maxColumns = layout.rows.reduce((max, columns) => Math.max(max, columns.reduce((sum, col) => sum + col, 0)), 0);\n  if (isRemoveButtonOnSameLine(layout)) {\n    const removeButtonWidth = typeof ((_a = layout.removeButton) === null || _a === void 0 ? void 0 : _a.width) === 'number' ? (_b = layout.removeButton) === null || _b === void 0 ? void 0 : _b.width : 1;\n    return {\n      gridColumnStart: previousGridColumnEnd,\n      gridColumnEnd: previousGridColumnEnd + removeButtonWidth\n    };\n  }\n  return {\n    gridColumnStart: 1,\n    gridColumnEnd: maxColumns + 1\n  };\n}\nexport function isRemoveButtonOnSameLine(layout) {\n  var _a;\n  return layout.rows.length === 1 && !((_a = layout.removeButton) === null || _a === void 0 ? void 0 : _a.ownRow);\n}\nexport function getGridTemplateColumns(layout) {\n  var _a, _b, _c;\n  const totalColumnUnits = layout.rows.reduce((maxCols, row) => Math.max(maxCols, row.reduce((cols, col) => cols + col, 0)), 0);\n  const removeButtonColumn = isRemoveButtonOnSameLine(layout) ? ((_a = layout.removeButton) === null || _a === void 0 ? void 0 : _a.width) === 'auto' ? 'max-content' : `${(_c = (_b = layout.removeButton) === null || _b === void 0 ? void 0 : _b.width) !== null && _c !== void 0 ? _c : 1}fr` : '';\n  return `repeat(${totalColumnUnits}, 1fr) ${removeButtonColumn}`;\n}","map":{"version":3,"names":["getItemGridColumns","layout","itemIndex","i","row","rows","gridColumnStart","columnWidth","gridColumnEnd","getRemoveButtonGridColumns","previousGridColumnEnd","maxColumns","reduce","max","columns","Math","sum","col","isRemoveButtonOnSameLine","removeButtonWidth","_a","removeButton","width","_b","length","ownRow","getGridTemplateColumns","totalColumnUnits","maxCols","cols","removeButtonColumn","_c"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/attribute-editor/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AttributeEditorProps } from './interfaces';\n\ninterface GridColumns {\n  gridColumnStart: number;\n  gridColumnEnd: number;\n}\n\nexport function getItemGridColumns(layout: AttributeEditorProps.GridLayout, itemIndex: number): GridColumns {\n  let i = 0;\n  for (const row of layout.rows) {\n    let gridColumnStart = 1;\n    for (const columnWidth of row) {\n      if (i === itemIndex) {\n        return { gridColumnStart, gridColumnEnd: gridColumnStart + columnWidth };\n      } else {\n        gridColumnStart += columnWidth;\n      }\n      i++;\n    }\n  }\n  return { gridColumnStart: 1, gridColumnEnd: 1 };\n}\n\nexport function getRemoveButtonGridColumns(\n  layout: AttributeEditorProps.GridLayout,\n  previousGridColumnEnd: number\n): GridColumns {\n  const maxColumns = layout.rows.reduce(\n    (max, columns) =>\n      Math.max(\n        max,\n        columns.reduce((sum, col) => sum + col, 0)\n      ),\n    0\n  );\n  if (isRemoveButtonOnSameLine(layout)) {\n    const removeButtonWidth = typeof layout.removeButton?.width === 'number' ? layout.removeButton?.width : 1;\n    return {\n      gridColumnStart: previousGridColumnEnd,\n      gridColumnEnd: previousGridColumnEnd + removeButtonWidth,\n    };\n  }\n  return { gridColumnStart: 1, gridColumnEnd: maxColumns + 1 };\n}\n\nexport function isRemoveButtonOnSameLine(layout: AttributeEditorProps.GridLayout) {\n  return layout.rows.length === 1 && !layout.removeButton?.ownRow;\n}\n\nexport function getGridTemplateColumns(layout: AttributeEditorProps.GridLayout) {\n  const totalColumnUnits = layout.rows.reduce(\n    (maxCols, row) =>\n      Math.max(\n        maxCols,\n        row.reduce((cols, col) => cols + col, 0)\n      ),\n    0\n  );\n\n  const removeButtonColumn = isRemoveButtonOnSameLine(layout)\n    ? layout.removeButton?.width === 'auto'\n      ? 'max-content'\n      : `${layout.removeButton?.width ?? 1}fr`\n    : '';\n\n  return `repeat(${totalColumnUnits}, 1fr) ${removeButtonColumn}`;\n}\n"],"mappings":"AASA,OAAM,SAAUA,kBAAkBA,CAACC,MAAuC,EAAEC,SAAiB;EAC3F,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,MAAMC,GAAG,IAAIH,MAAM,CAACI,IAAI,EAAE;IAC7B,IAAIC,eAAe,GAAG,CAAC;IACvB,KAAK,MAAMC,WAAW,IAAIH,GAAG,EAAE;MAC7B,IAAID,CAAC,KAAKD,SAAS,EAAE;QACnB,OAAO;UAAEI,eAAe;UAAEE,aAAa,EAAEF,eAAe,GAAGC;QAAW,CAAE;OACzE,MAAM;QACLD,eAAe,IAAIC,WAAW;;MAEhCJ,CAAC,EAAE;;;EAGP,OAAO;IAAEG,eAAe,EAAE,CAAC;IAAEE,aAAa,EAAE;EAAC,CAAE;AACjD;AAEA,OAAM,SAAUC,0BAA0BA,CACxCR,MAAuC,EACvCS,qBAA6B;;EAE7B,MAAMC,UAAU,GAAGV,MAAM,CAACI,IAAI,CAACO,MAAM,CACnC,CAACC,GAAG,EAAEC,OAAO,KACXC,IAAI,CAACF,GAAG,CACNA,GAAG,EACHC,OAAO,CAACF,MAAM,CAAC,CAACI,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,CAC3C,EACH,CAAC,CACF;EACD,IAAIC,wBAAwB,CAACjB,MAAM,CAAC,EAAE;IACpC,MAAMkB,iBAAiB,GAAG,QAAO,CAAAC,EAAA,GAAAnB,MAAM,CAACoB,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,MAAK,QAAQ,GAAG,CAAAC,EAAA,GAAAtB,MAAM,CAACoB,YAAY,cAAAE,EAAA,uBAAAA,EAAA,CAAED,KAAK,GAAG,CAAC;IACzG,OAAO;MACLhB,eAAe,EAAEI,qBAAqB;MACtCF,aAAa,EAAEE,qBAAqB,GAAGS;KACxC;;EAEH,OAAO;IAAEb,eAAe,EAAE,CAAC;IAAEE,aAAa,EAAEG,UAAU,GAAG;EAAC,CAAE;AAC9D;AAEA,OAAM,SAAUO,wBAAwBA,CAACjB,MAAuC;;EAC9E,OAAOA,MAAM,CAACI,IAAI,CAACmB,MAAM,KAAK,CAAC,IAAI,EAAC,CAAAJ,EAAA,GAAAnB,MAAM,CAACoB,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAEK,MAAM;AACjE;AAEA,OAAM,SAAUC,sBAAsBA,CAACzB,MAAuC;;EAC5E,MAAM0B,gBAAgB,GAAG1B,MAAM,CAACI,IAAI,CAACO,MAAM,CACzC,CAACgB,OAAO,EAAExB,GAAG,KACXW,IAAI,CAACF,GAAG,CACNe,OAAO,EACPxB,GAAG,CAACQ,MAAM,CAAC,CAACiB,IAAI,EAAEZ,GAAG,KAAKY,IAAI,GAAGZ,GAAG,EAAE,CAAC,CAAC,CACzC,EACH,CAAC,CACF;EAED,MAAMa,kBAAkB,GAAGZ,wBAAwB,CAACjB,MAAM,CAAC,GACvD,EAAAmB,EAAA,GAAAnB,MAAM,CAACoB,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,MAAK,MAAM,GACnC,aAAa,GACb,GAAG,CAAAS,EAAA,IAAAR,EAAA,GAAAtB,MAAM,CAACoB,YAAY,cAAAE,EAAA,uBAAAA,EAAA,CAAED,KAAK,cAAAS,EAAA,cAAAA,EAAA,GAAI,CAAC,IAAI,GACxC,EAAE;EAEN,OAAO,UAAUJ,gBAAgB,UAAUG,kBAAkB,EAAE;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}