{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/s2s.js\";\nimport React, { createRef } from 'react';\nimport './s2s.css';\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Container, ColumnLayout, Header, FormField, Select, Textarea, Checkbox } from '@cloudscape-design/components';\nimport S2sEvent from './helper/s2sEvents';\nimport Meter from './components/meter';\nimport S2sEventDisplay from './components/eventDisplay';\nimport { base64ToFloat32Array } from './helper/audioHelper';\nimport AudioPlayer from './helper/audioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass S2sChatBot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSessionChange = e => {\n      if (this.state.sessionStarted) {\n        // End session\n        this.endSession();\n        this.cancelAudio();\n        if (this.meterRef.current) this.meterRef.current.stop();\n        this.audioPlayer.start();\n      } else {\n        // Start session\n        this.setState({\n          chatMessages: {},\n          events: []\n        });\n        if (this.eventDisplayRef.current) this.eventDisplayRef.current.cleanup();\n        if (this.meterRef.current) this.meterRef.current.start();\n\n        // Init S2sSessionManager\n        try {\n          if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n            this.connectWebSocket();\n          }\n\n          // Start microphone \n          this.startMicrophone();\n        } catch (error) {\n          console.error('Error accessing microphone: ', error);\n        }\n      }\n      this.setState({\n        sessionStarted: !this.state.sessionStarted\n      });\n    };\n    this.state = {\n      status: \"loading\",\n      // null, loading, loaded\n      alert: null,\n      sessionStarted: false,\n      showEventJson: false,\n      showConfig: false,\n      selectedEvent: null,\n      chatMessages: {},\n      events: [],\n      audioChunks: [],\n      audioPlayPromise: null,\n      includeChatHistory: false,\n      promptName: null,\n      textContentName: null,\n      audioContentName: null,\n      showUsage: true,\n      // S2S config items\n      configAudioInput: null,\n      configSystemPrompt: S2sEvent.DEFAULT_SYSTEM_PROMPT,\n      configAudioOutput: S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG,\n      configVoiceIdOption: {\n        label: \"Matthew (en-US)\",\n        value: \"matthew\"\n      },\n      configToolUse: JSON.stringify(S2sEvent.DEFAULT_TOOL_CONFIG, null, 2),\n      configChatHistory: JSON.stringify(S2sEvent.DEFAULT_CHAT_HISTORY, null, 2)\n    };\n    this.socket = null;\n    this.mediaRecorder = null;\n    this.chatMessagesEndRef = /*#__PURE__*/React.createRef();\n    this.stateRef = /*#__PURE__*/React.createRef();\n    this.eventDisplayRef = /*#__PURE__*/React.createRef();\n    this.meterRef = /*#__PURE__*/React.createRef();\n    this.audioPlayer = new AudioPlayer();\n  }\n  componentDidMount() {\n    this.stateRef.current = this.state;\n    // Initialize audio player early\n    this.audioPlayer.start().catch(err => {\n      console.error(\"Failed to initialize audio player:\", err);\n    });\n  }\n  componentWillUnmount() {\n    this.audioPlayer.stop();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.stateRef.current = this.state;\n    if (prevState.chatMessages.length !== this.state.chatMessages.length) {\n      var _this$chatMessagesEnd;\n      (_this$chatMessagesEnd = this.chatMessagesEndRef.current) === null || _this$chatMessagesEnd === void 0 ? void 0 : _this$chatMessagesEnd.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }\n  sendEvent(event) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(event));\n      event.timestamp = Date.now();\n      this.eventDisplayRef.current.displayEvent(event, \"out\");\n    }\n  }\n  cancelAudio() {\n    this.audioPlayer.bargeIn();\n    this.setState({\n      isPlaying: false\n    });\n  }\n  handleIncomingMessage(message) {\n    const eventType = Object.keys(message === null || message === void 0 ? void 0 : message.event)[0];\n    const role = message.event[eventType][\"role\"];\n    const content = message.event[eventType][\"content\"];\n    const contentId = message.event[eventType].contentId;\n    let stopReason = message.event[eventType].stopReason;\n    const contentType = message.event[eventType].type;\n    var chatMessages = this.state.chatMessages;\n    switch (eventType) {\n      case \"textOutput\":\n        // Detect interruption\n        if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n          const evt = JSON.parse(content);\n          if (evt.interrupted === true) {\n            this.cancelAudio();\n          }\n        }\n        if (chatMessages.hasOwnProperty(contentId)) {\n          chatMessages[contentId].content = content;\n          chatMessages[contentId].role = role;\n          if (chatMessages[contentId].raw === undefined) chatMessages[contentId].raw = [];\n          chatMessages[contentId].raw.push(message);\n        }\n        this.setState({\n          chatMessages: chatMessages\n        });\n        break;\n      case \"audioOutput\":\n        try {\n          const base64Data = message.event[eventType].content;\n          const audioData = base64ToFloat32Array(base64Data);\n          this.audioPlayer.playAudio(audioData);\n        } catch (error) {\n          console.error(\"Error processing audio chunk:\", error);\n        }\n        break;\n      case \"contentStart\":\n        if (contentType === \"TEXT\") {\n          var generationStage = \"\";\n          if (message.event.contentStart.additionalModelFields) {\n            var _JSON$parse;\n            generationStage = (_JSON$parse = JSON.parse(message.event.contentStart.additionalModelFields)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.generationStage;\n          }\n          chatMessages[contentId] = {\n            \"content\": \"\",\n            \"role\": role,\n            \"generationStage\": generationStage,\n            \"raw\": []\n          };\n          chatMessages[contentId].raw.push(message);\n          this.setState({\n            chatMessages: chatMessages\n          });\n        }\n        break;\n      case \"contentEnd\":\n        if (contentType === \"TEXT\") {\n          if (chatMessages.hasOwnProperty(contentId)) {\n            if (chatMessages[contentId].raw === undefined) chatMessages[contentId].raw = [];\n            chatMessages[contentId].raw.push(message);\n            chatMessages[contentId].stopReason = stopReason;\n          }\n          this.setState({\n            chatMessages: chatMessages\n          });\n        }\n        break;\n      case \"usageEvent\":\n        if (this.meterRef.current) {\n          this.meterRef.current.updateMeter(message);\n          if (this.state.showUsage === false) {\n            this.setState({\n              showUsage: true\n            });\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    this.eventDisplayRef.current.displayEvent(message, \"in\");\n  }\n  connectWebSocket() {\n    // Connect to the S2S WebSocket server\n    if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n      const promptName = crypto.randomUUID();\n      const textContentName = crypto.randomUUID();\n      const audioContentName = crypto.randomUUID();\n      this.setState({\n        promptName: promptName,\n        textContentName: textContentName,\n        audioContentName: audioContentName\n      });\n      const ws_url = process.env.REACT_APP_WEBSOCKET_URL ? process.env.REACT_APP_WEBSOCKET_URL : \"ws://localhost:8081\";\n      this.socket = new WebSocket(ws_url);\n      this.socket.onopen = () => {\n        console.log(\"WebSocket connected!\");\n\n        // Start session events\n        this.sendEvent(S2sEvent.sessionStart());\n        var audioConfig = S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG;\n        audioConfig.voiceId = this.state.configVoiceIdOption.value;\n        var toolConfig = this.state.configToolUse ? JSON.parse(this.state.configToolUse) : S2sEvent.DEFAULT_TOOL_CONFIG;\n        this.sendEvent(S2sEvent.promptStart(promptName, audioConfig, toolConfig));\n        this.sendEvent(S2sEvent.contentStartText(promptName, textContentName));\n        this.sendEvent(S2sEvent.textInput(promptName, textContentName, this.state.configSystemPrompt));\n        this.sendEvent(S2sEvent.contentEnd(promptName, textContentName));\n\n        // Chat history\n        if (this.state.includeChatHistory) {\n          var chatHistory = JSON.parse(this.state.configChatHistory);\n          if (chatHistory === null) chatHistory = S2sEvent.DEFAULT_CHAT_HISTORY;\n          for (const chat of chatHistory) {\n            const chatHistoryContentName = crypto.randomUUID();\n            this.sendEvent(S2sEvent.contentStartText(promptName, chatHistoryContentName, chat.role));\n            this.sendEvent(S2sEvent.textInput(promptName, chatHistoryContentName, chat.content));\n            this.sendEvent(S2sEvent.contentEnd(promptName, chatHistoryContentName));\n          }\n        }\n        this.sendEvent(S2sEvent.contentStartAudio(promptName, audioContentName));\n      };\n\n      // Handle incoming messages\n      this.socket.onmessage = message => {\n        const event = JSON.parse(message.data);\n        this.handleIncomingMessage(event);\n      };\n\n      // Handle errors\n      this.socket.onerror = error => {\n        this.setState({\n          alert: \"WebSocket Error: \",\n          error\n        });\n        console.error(\"WebSocket Error: \", error);\n      };\n\n      // Handle connection close\n      this.socket.onclose = () => {\n        console.log(\"WebSocket Disconnected\");\n        if (this.state.sessionStarted) this.setState({\n          alert: \"WebSocket Disconnected\"\n        });\n      };\n    }\n  }\n  async startMicrophone() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        latencyHint: 'interactive'\n      });\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(512, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n      const targetSampleRate = 16000;\n      processor.onaudioprocess = async e => {\n        if (this.state.sessionStarted) {\n          const inputBuffer = e.inputBuffer;\n\n          // Create an offline context for resampling\n          const offlineContext = new OfflineAudioContext({\n            numberOfChannels: 1,\n            length: Math.ceil(inputBuffer.duration * targetSampleRate),\n            sampleRate: targetSampleRate\n          });\n\n          // Copy input to offline context buffer\n          const offlineSource = offlineContext.createBufferSource();\n          const monoBuffer = offlineContext.createBuffer(1, inputBuffer.length, inputBuffer.sampleRate);\n          monoBuffer.copyToChannel(inputBuffer.getChannelData(0), 0);\n          offlineSource.buffer = monoBuffer;\n          offlineSource.connect(offlineContext.destination);\n          offlineSource.start(0);\n\n          // Resample and get the rendered buffer\n          const renderedBuffer = await offlineContext.startRendering();\n          const resampled = renderedBuffer.getChannelData(0);\n\n          // Convert to Int16 PCM\n          const buffer = new ArrayBuffer(resampled.length * 2);\n          const pcmData = new DataView(buffer);\n          for (let i = 0; i < resampled.length; i++) {\n            const s = Math.max(-1, Math.min(1, resampled[i]));\n            pcmData.setInt16(i * 2, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n          }\n\n          // Convert to binary string and base64 encode\n          let binary = '';\n          for (let i = 0; i < pcmData.byteLength; i++) {\n            binary += String.fromCharCode(pcmData.getUint8(i));\n          }\n          const currentState = this.stateRef.current;\n          const event = S2sEvent.audioInput(currentState.promptName, currentState.audioContentName, btoa(binary));\n          this.sendEvent(event);\n        }\n      };\n      window.audioCleanup = () => {\n        processor.disconnect();\n        source.disconnect();\n        stream.getTracks().forEach(track => track.stop());\n      };\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.ondataavailable = event => {\n        this.state.audioChunks.push(event.data);\n      };\n      this.mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(this.state.audioChunks, {\n          type: 'audio/webm'\n        });\n        this.sendEvent(S2sEvent.audioInput(this.state.promptName, this.state.audioContentName, btoa(audioBlob)));\n        this.setState({\n          audioChunks: []\n        });\n      };\n      this.mediaRecorder.start();\n      this.setState({\n        sessionStarted: true\n      });\n      console.log('Microphone recording started');\n    } catch (error) {\n      console.error('Error accessing microphone: ', error);\n    }\n  }\n  endSession() {\n    if (this.socket) {\n      // Close microphone\n      if (this.mediaRecorder && this.state.sessionStarted) {\n        this.mediaRecorder.stop();\n        console.log('Microphone recording stopped');\n      }\n\n      // Close S2sSessionManager\n      this.sendEvent(S2sEvent.contentEnd(this.state.promptName, this.state.audioContentName));\n      this.sendEvent(S2sEvent.promptEnd(this.state.promptName));\n      this.sendEvent(S2sEvent.sessionEnd());\n\n      // Close websocket\n      this.socket.close();\n      this.setState({\n        sessionStarted: false\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s2s\",\n        children: [this.state.alert !== null && this.state.alert.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            statusIconAriaLabel: \"Warning\",\n            type: \"warning\",\n            children: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mic-button${this.state.sessionStarted ? ' active' : ''}`,\n          onClick: this.handleSessionChange,\n          children: this.state.sessionStarted ?\n          /*#__PURE__*/\n          // Speaker icon (animated)\n          _jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M3 10v4h4l5 5V5l-5 5H3zm13.5 2c0-1.77-1-3.29-2.5-4.03v8.06A4.978 4.978 0 0 0 16.5 12zm2.5 0c0 3.04-1.64 5.64-4.5 6.32v2.02c4.01-.68 7-4.07 7-8.34s-2.99-7.66-7-8.34v2.02c2.86.68 4.5 3.28 4.5 6.32z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this) :\n          /*#__PURE__*/\n          // Mic icon\n          _jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a1 1 0 0 1 2 0 7 7 0 0 1-6 6.92V21h-2v-3.08A7 7 0 0 1 5 11a1 1 0 0 1 2 0 5 5 0 0 0 10 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.setState({\n            showConfig: true\n          }),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColumnLayout, {\n        columns: 3,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          header: /*#__PURE__*/_jsxDEV(Header, {\n            variant: \"h2\",\n            children: \"Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatarea\",\n            children: [Object.keys(this.state.chatMessages).map((key, index) => {\n              const msg = this.state.chatMessages[key];\n              //if (msg.stopReason === \"END_TURN\" || msg.role === \"USER\")\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: msg.role === \"USER\" ? \"user\" : \"bot\",\n                  onClick: () => this.setState({\n                    showEventJson: true,\n                    selectedEvent: {\n                      events: msg.raw\n                    }\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: msg.role === \"USER\" ? \"user-profile\" : \"gen-ai\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 41\n                  }, this), \"\\xA0\\xA0\", msg.content, msg.role === \"ASSISTANT\" && msg.generationStage ? ` [${msg.generationStage}]` : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 40\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"endbar\",\n              ref: this.chatMessagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          header: /*#__PURE__*/_jsxDEV(Header, {\n            variant: \"h2\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            children: \"Placeholder for data view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          header: /*#__PURE__*/_jsxDEV(Header, {\n            variant: \"h2\",\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(S2sEventDisplay, {\n            ref: this.eventDisplayRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onDismiss: () => this.setState({\n          showEventJson: false\n        }),\n        visible: this.state.showEventJson,\n        header: \"Event details\",\n        size: \"medium\",\n        footer: /*#__PURE__*/_jsxDEV(Box, {\n          float: \"right\",\n          children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n            direction: \"horizontal\",\n            size: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => this.setState({\n                showEventJson: false\n              }),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eventdetail\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            id: \"jsonDisplay\",\n            children: this.state.selectedEvent && this.state.selectedEvent.events.map(e => {\n              const eventType = Object.keys(e === null || e === void 0 ? void 0 : e.event)[0];\n              if (eventType === \"audioInput\" || eventType === \"audioOutput\") e.event[eventType].content = e.event[eventType].content.substr(0, 10) + \"...\";\n              const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                year: \"numeric\",\n                month: \"2-digit\",\n                day: \"2-digit\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                fractionalSecondDigits: 3,\n                // Show milliseconds\n                hour12: false // 24-hour format\n              });\n              var displayJson = {\n                ...e\n              };\n              delete displayJson.timestamp;\n              return ts + \"\\n\" + JSON.stringify(displayJson, null, 2) + \"\\n\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onDismiss: () => this.setState({\n          showConfig: false\n        }),\n        visible: this.state.showConfig,\n        header: \"Nova S2S settings\",\n        size: \"large\",\n        footer: /*#__PURE__*/_jsxDEV(Box, {\n          float: \"right\",\n          children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n            direction: \"horizontal\",\n            size: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => this.setState({\n                showConfig: false\n              }),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config\",\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Voice Id\",\n            stretch: true,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              selectedOption: this.state.configVoiceIdOption,\n              onChange: ({\n                detail\n              }) => this.setState({\n                configVoiceIdOption: detail.selectedOption\n              }),\n              options: [{\n                label: \"Matthew (en-US)\",\n                value: \"matthew\"\n              }, {\n                label: \"Tiffany (en-US)\",\n                value: \"tiffany\"\n              }, {\n                label: \"Amy (en-GB)\",\n                value: \"amy\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"System prompt\",\n            description: \"For the speech model\",\n            stretch: true,\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              onChange: ({\n                detail\n              }) => this.setState({\n                configSystemPrompt: detail.value\n              }),\n              value: this.state.configSystemPrompt,\n              placeholder: \"Speech system prompt\",\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Tool use configuration\",\n            description: \"For external integration such as RAG and Agents\",\n            stretch: true,\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              onChange: ({\n                detail\n              }) => this.setState({\n                configToolUse: detail.value\n              }),\n              value: this.state.configToolUse,\n              rows: 10,\n              placeholder: \"{}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Chat history\",\n            description: \"Sample chat history to resume conversation\",\n            stretch: true,\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              onChange: ({\n                detail\n              }) => this.setState({\n                configChatHistory: detail.value\n              }),\n              value: this.state.configChatHistory,\n              rows: 15,\n              placeholder: \"{}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default S2sChatBot;","map":{"version":3,"names":["React","createRef","Icon","Alert","Button","Modal","Box","SpaceBetween","Container","ColumnLayout","Header","FormField","Select","Textarea","Checkbox","S2sEvent","Meter","S2sEventDisplay","base64ToFloat32Array","AudioPlayer","jsxDEV","_jsxDEV","S2sChatBot","Component","constructor","props","handleSessionChange","e","state","sessionStarted","endSession","cancelAudio","meterRef","current","stop","audioPlayer","start","setState","chatMessages","events","eventDisplayRef","cleanup","socket","readyState","WebSocket","OPEN","connectWebSocket","startMicrophone","error","console","status","alert","showEventJson","showConfig","selectedEvent","audioChunks","audioPlayPromise","includeChatHistory","promptName","textContentName","audioContentName","showUsage","configAudioInput","configSystemPrompt","DEFAULT_SYSTEM_PROMPT","configAudioOutput","DEFAULT_AUDIO_OUTPUT_CONFIG","configVoiceIdOption","label","value","configToolUse","JSON","stringify","DEFAULT_TOOL_CONFIG","configChatHistory","DEFAULT_CHAT_HISTORY","mediaRecorder","chatMessagesEndRef","stateRef","componentDidMount","catch","err","componentWillUnmount","componentDidUpdate","prevProps","prevState","length","_this$chatMessagesEnd","scrollIntoView","behavior","sendEvent","event","send","timestamp","Date","now","displayEvent","bargeIn","isPlaying","handleIncomingMessage","message","eventType","Object","keys","role","content","contentId","stopReason","contentType","type","startsWith","evt","parse","interrupted","hasOwnProperty","raw","undefined","push","base64Data","audioData","playAudio","generationStage","contentStart","additionalModelFields","_JSON$parse","updateMeter","crypto","randomUUID","ws_url","process","env","REACT_APP_WEBSOCKET_URL","onopen","log","sessionStart","audioConfig","voiceId","toolConfig","promptStart","contentStartText","textInput","contentEnd","chatHistory","chat","chatHistoryContentName","contentStartAudio","onmessage","data","onerror","onclose","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","audioContext","window","AudioContext","webkitAudioContext","latencyHint","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","targetSampleRate","onaudioprocess","inputBuffer","offlineContext","OfflineAudioContext","numberOfChannels","Math","ceil","duration","sampleRate","offlineSource","createBufferSource","monoBuffer","createBuffer","copyToChannel","getChannelData","buffer","renderedBuffer","startRendering","resampled","ArrayBuffer","pcmData","DataView","i","s","max","min","setInt16","binary","byteLength","String","fromCharCode","getUint8","currentState","audioInput","btoa","audioCleanup","disconnect","getTracks","forEach","track","MediaRecorder","ondataavailable","onstop","audioBlob","Blob","promptEnd","sessionEnd","close","render","children","className","statusIconAriaLabel","fileName","_jsxFileName","lineNumber","columnNumber","onClick","viewBox","d","name","columns","header","variant","map","key","index","msg","ref","onDismiss","visible","size","footer","float","direction","id","substr","ts","toLocaleString","year","month","day","hour","minute","second","fractionalSecondDigits","hour12","displayJson","stretch","selectedOption","onChange","detail","options","description","placeholder","rows"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/s2s.js"],"sourcesContent":["import React, { createRef } from 'react';\nimport './s2s.css'\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Container, ColumnLayout, Header, FormField, Select, Textarea, Checkbox } from '@cloudscape-design/components';\nimport S2sEvent from './helper/s2sEvents';\nimport Meter from './components/meter';\nimport S2sEventDisplay from './components/eventDisplay';\nimport { base64ToFloat32Array } from './helper/audioHelper';\nimport AudioPlayer from './helper/audioPlayer';\n\nclass S2sChatBot extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: \"loading\", // null, loading, loaded\n            alert: null,\n            sessionStarted: false,\n            showEventJson: false,\n            showConfig: false,\n            selectedEvent: null,\n\n            chatMessages: {},\n            events: [],\n            audioChunks: [],\n            audioPlayPromise: null,\n            includeChatHistory: false,\n\n            promptName: null,\n            textContentName: null,\n            audioContentName: null,\n\n            showUsage: true,\n\n            // S2S config items\n            configAudioInput: null,\n            configSystemPrompt: S2sEvent.DEFAULT_SYSTEM_PROMPT,\n            configAudioOutput: S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG,\n            configVoiceIdOption: { label: \"Matthew (en-US)\", value: \"matthew\" },\n            configToolUse: JSON.stringify(S2sEvent.DEFAULT_TOOL_CONFIG, null, 2),\n            configChatHistory: JSON.stringify(S2sEvent.DEFAULT_CHAT_HISTORY, null, 2),\n        };\n        this.socket = null;\n        this.mediaRecorder = null;\n        this.chatMessagesEndRef = React.createRef();\n        this.stateRef = React.createRef();  \n        this.eventDisplayRef = React.createRef();\n        this.meterRef =React.createRef();\n        this.audioPlayer = new AudioPlayer();\n    }\n\n    componentDidMount() {\n        this.stateRef.current = this.state;\n        // Initialize audio player early\n        this.audioPlayer.start().catch(err => {\n            console.error(\"Failed to initialize audio player:\", err);\n        });\n    }\n\n    componentWillUnmount() {\n        this.audioPlayer.stop();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        this.stateRef.current = this.state; \n\n        if (prevState.chatMessages.length !== this.state.chatMessages.length) {\n            this.chatMessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n    \n    sendEvent(event) {\n        if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n            this.socket.send(JSON.stringify(event));\n            event.timestamp = Date.now();\n\n            this.eventDisplayRef.current.displayEvent(event, \"out\");\n        }\n    }\n    \n    cancelAudio() {\n        this.audioPlayer.bargeIn();\n        this.setState({ isPlaying: false });\n    }\n\n    handleIncomingMessage (message) {\n        const eventType = Object.keys(message?.event)[0];\n        const role = message.event[eventType][\"role\"];\n        const content = message.event[eventType][\"content\"];\n        const contentId = message.event[eventType].contentId;\n        let stopReason = message.event[eventType].stopReason;\n        const contentType = message.event[eventType].type;\n        var chatMessages = this.state.chatMessages;\n\n        switch(eventType) {\n            case \"textOutput\": \n                // Detect interruption\n                if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n                    const evt = JSON.parse(content);\n                    if (evt.interrupted === true) {\n                        this.cancelAudio()\n                    }\n                }\n\n                if (chatMessages.hasOwnProperty(contentId)) {\n                    chatMessages[contentId].content = content;\n                    chatMessages[contentId].role = role;\n                    if (chatMessages[contentId].raw === undefined)\n                        chatMessages[contentId].raw = [];\n                    chatMessages[contentId].raw.push(message);\n                }\n                this.setState({chatMessages: chatMessages});\n                break;\n            case \"audioOutput\":\n                try {\n                    const base64Data = message.event[eventType].content;\n                    const audioData = base64ToFloat32Array(base64Data);\n                    this.audioPlayer.playAudio(audioData);\n                } catch (error) {\n                    console.error(\"Error processing audio chunk:\", error);\n                }\n                break;\n            case \"contentStart\":\n                if (contentType === \"TEXT\") {\n                    var generationStage = \"\";\n                    if (message.event.contentStart.additionalModelFields) {\n                        generationStage = JSON.parse(message.event.contentStart.additionalModelFields)?.generationStage;\n                    }\n\n                    chatMessages[contentId] =  {\n                        \"content\": \"\", \n                        \"role\": role,\n                        \"generationStage\": generationStage,\n                        \"raw\": [],\n                    };\n                    chatMessages[contentId].raw.push(message);\n                    this.setState({chatMessages: chatMessages});\n                }\n                break;\n            case \"contentEnd\":\n                if (contentType === \"TEXT\") {\n                    if (chatMessages.hasOwnProperty(contentId)) {\n                        if (chatMessages[contentId].raw === undefined)\n                            chatMessages[contentId].raw = [];\n                        chatMessages[contentId].raw.push(message);\n                        chatMessages[contentId].stopReason = stopReason;\n                    }\n                    this.setState({chatMessages: chatMessages});\n                }\n                break;\n            case \"usageEvent\":\n                if (this.meterRef.current) { \n                    this.meterRef.current.updateMeter(message);\n                    if (this.state.showUsage === false) {\n                        this.setState({showUsage: true});\n                    }\n                }\n                break;\n            default:\n                break;\n\n        }\n\n        this.eventDisplayRef.current.displayEvent(message, \"in\");\n    }\n\n    handleSessionChange = e => {\n        if (this.state.sessionStarted) {\n            // End session\n            this.endSession();\n            this.cancelAudio();\n            if (this.meterRef.current) this.meterRef.current.stop();\n            this.audioPlayer.start(); \n        }\n        else {\n            // Start session\n            this.setState({\n                chatMessages:{}, \n                events: [], \n            });\n            if (this.eventDisplayRef.current) this.eventDisplayRef.current.cleanup();\n            if (this.meterRef.current) this.meterRef.current.start();\n            \n            // Init S2sSessionManager\n            try {\n                if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n                    this.connectWebSocket();\n                }\n\n                // Start microphone \n                this.startMicrophone();\n            } catch (error) {\n                console.error('Error accessing microphone: ', error);\n            }\n\n        }\n        this.setState({sessionStarted: !this.state.sessionStarted});\n    }\n\n    connectWebSocket() {\n        // Connect to the S2S WebSocket server\n        if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n            const promptName = crypto.randomUUID();\n            const textContentName = crypto.randomUUID();\n            const audioContentName = crypto.randomUUID();\n            this.setState({\n                promptName: promptName,\n                textContentName: textContentName,\n                audioContentName: audioContentName\n            })\n\n            const ws_url = process.env.REACT_APP_WEBSOCKET_URL?process.env.REACT_APP_WEBSOCKET_URL:\"ws://localhost:8081\"\n            this.socket = new WebSocket(ws_url);\n            this.socket.onopen = () => {\n                console.log(\"WebSocket connected!\");\n    \n                // Start session events\n                this.sendEvent(S2sEvent.sessionStart());\n\n                var audioConfig = S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG;\n                audioConfig.voiceId = this.state.configVoiceIdOption.value;\n                var toolConfig = this.state.configToolUse?JSON.parse(this.state.configToolUse):S2sEvent.DEFAULT_TOOL_CONFIG;\n\n                this.sendEvent(S2sEvent.promptStart(promptName, audioConfig, toolConfig));\n\n                this.sendEvent(S2sEvent.contentStartText(promptName, textContentName));\n\n                this.sendEvent(S2sEvent.textInput(promptName, textContentName, this.state.configSystemPrompt));\n                this.sendEvent(S2sEvent.contentEnd(promptName, textContentName));\n\n                // Chat history\n                if (this.state.includeChatHistory) {\n                    var chatHistory = JSON.parse(this.state.configChatHistory);\n                    if (chatHistory === null) chatHistory = S2sEvent.DEFAULT_CHAT_HISTORY;\n                    for (const chat of chatHistory) {\n                        const chatHistoryContentName = crypto.randomUUID();\n                        this.sendEvent(S2sEvent.contentStartText(promptName, chatHistoryContentName, chat.role));\n                        this.sendEvent(S2sEvent.textInput(promptName, chatHistoryContentName, chat.content));\n                        this.sendEvent(S2sEvent.contentEnd(promptName, chatHistoryContentName));\n                    }\n                    \n                }\n\n                this.sendEvent(S2sEvent.contentStartAudio(promptName, audioContentName));\n              };\n\n            // Handle incoming messages\n            this.socket.onmessage = (message) => {\n                const event = JSON.parse(message.data);\n                this.handleIncomingMessage(event);\n            };\n        \n            // Handle errors\n            this.socket.onerror = (error) => {\n                this.setState({alert: \"WebSocket Error: \", error});\n                console.error(\"WebSocket Error: \", error);\n            };\n        \n            // Handle connection close\n            this.socket.onclose = () => {\n                console.log(\"WebSocket Disconnected\");\n                if (this.state.sessionStarted)\n                    this.setState({alert: \"WebSocket Disconnected\"});\n            };\n        }\n    }\n      \n    async startMicrophone() {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    autoGainControl: true\n                }\n            });\n    \n            const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n                latencyHint: 'interactive'\n            });\n    \n            const source = audioContext.createMediaStreamSource(stream);\n            const processor = audioContext.createScriptProcessor(512, 1, 1);\n    \n            source.connect(processor);\n            processor.connect(audioContext.destination);\n    \n            const targetSampleRate = 16000;\n    \n            processor.onaudioprocess = async (e) => {\n                if (this.state.sessionStarted) {\n                    const inputBuffer = e.inputBuffer;\n    \n                    // Create an offline context for resampling\n                    const offlineContext = new OfflineAudioContext({\n                        numberOfChannels: 1,\n                        length: Math.ceil(inputBuffer.duration * targetSampleRate),\n                        sampleRate: targetSampleRate\n                    });\n    \n                    // Copy input to offline context buffer\n                    const offlineSource = offlineContext.createBufferSource();\n                    const monoBuffer = offlineContext.createBuffer(1, inputBuffer.length, inputBuffer.sampleRate);\n                    monoBuffer.copyToChannel(inputBuffer.getChannelData(0), 0);\n    \n                    offlineSource.buffer = monoBuffer;\n                    offlineSource.connect(offlineContext.destination);\n                    offlineSource.start(0);\n    \n                    // Resample and get the rendered buffer\n                    const renderedBuffer = await offlineContext.startRendering();\n                    const resampled = renderedBuffer.getChannelData(0);\n    \n                    // Convert to Int16 PCM\n                    const buffer = new ArrayBuffer(resampled.length * 2);\n                    const pcmData = new DataView(buffer);\n    \n                    for (let i = 0; i < resampled.length; i++) {\n                        const s = Math.max(-1, Math.min(1, resampled[i]));\n                        pcmData.setInt16(i * 2, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                    }\n    \n                    // Convert to binary string and base64 encode\n                    let binary = '';\n                    for (let i = 0; i < pcmData.byteLength; i++) {\n                        binary += String.fromCharCode(pcmData.getUint8(i));\n                    }\n    \n                    const currentState = this.stateRef.current;\n                    const event = S2sEvent.audioInput(\n                        currentState.promptName,\n                        currentState.audioContentName,\n                        btoa(binary)\n                    );\n                    this.sendEvent(event);\n                }\n            };\n    \n            window.audioCleanup = () => {\n                processor.disconnect();\n                source.disconnect();\n                stream.getTracks().forEach(track => track.stop());\n            };\n    \n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.ondataavailable = (event) => {\n                this.state.audioChunks.push(event.data);\n            };\n            this.mediaRecorder.onstop = () => {\n                const audioBlob = new Blob(this.state.audioChunks, { type: 'audio/webm' });\n                this.sendEvent(S2sEvent.audioInput(this.state.promptName, this.state.audioContentName, btoa(audioBlob)));\n                this.setState({ audioChunks: [] });\n            };\n    \n            this.mediaRecorder.start();\n            this.setState({ sessionStarted: true });\n            console.log('Microphone recording started');\n    \n        } catch (error) {\n            console.error('Error accessing microphone: ', error);\n        }\n    }\n\n    endSession() {\n        if (this.socket) {\n            // Close microphone\n            if (this.mediaRecorder && this.state.sessionStarted) {\n                this.mediaRecorder.stop();\n                console.log('Microphone recording stopped');\n            }\n\n            // Close S2sSessionManager\n            this.sendEvent(S2sEvent.contentEnd(this.state.promptName, this.state.audioContentName));\n            this.sendEvent(S2sEvent.promptEnd(this.state.promptName));\n            this.sendEvent(S2sEvent.sessionEnd());\n\n            // Close websocket\n            this.socket.close();\n\n            this.setState({sessionStarted: false});\n        }\n  \n    }\n    render() {\n        return (\n            <div>\n                <div className=\"s2s\">\n                    {this.state.alert !== null && this.state.alert.length > 0?\n                    <div><Alert statusIconAriaLabel=\"Warning\" type=\"warning\">\n                    {this.state.alert}\n                    </Alert><br/></div>:<div/>}\n                    {/* Floating mic button */}\n                    <div className={`mic-button${this.state.sessionStarted ? ' active' : ''}`} onClick={this.handleSessionChange}>\n                      {this.state.sessionStarted ? (\n                        // Speaker icon (animated)\n                        <svg viewBox=\"0 0 24 24\">\n                          <path d=\"M3 10v4h4l5 5V5l-5 5H3zm13.5 2c0-1.77-1-3.29-2.5-4.03v8.06A4.978 4.978 0 0 0 16.5 12zm2.5 0c0 3.04-1.64 5.64-4.5 6.32v2.02c4.01-.68 7-4.07 7-8.34s-2.99-7.66-7-8.34v2.02c2.86.68 4.5 3.28 4.5 6.32z\"/>\n                        </svg>\n                      ) : (\n                        // Mic icon\n                        <svg viewBox=\"0 0 24 24\">\n                          <path d=\"M12 14a3 3 0 0 0 3-3V5a3 3 0 0 0-6 0v6a3 3 0 0 0 3 3zm5-3a1 1 0 0 1 2 0 7 7 0 0 1-6 6.92V21h-2v-3.08A7 7 0 0 1 5 11a1 1 0 0 1 2 0 5 5 0 0 0 10 0z\"/>\n                        </svg>\n                      )}\n                    </div>\n                </div>\n\n                    <div className='setting'>\n                        <Button onClick={()=> \n                            this.setState({\n                                showConfig: true, \n                            })\n                        }>\n                            <Icon name=\"settings\"/>\n                        </Button>\n                        \n                    </div>\n                <br/>\n                <ColumnLayout columns={3}>\n                    <Container header={\n                        <Header variant=\"h2\">Conversation</Header>\n                    }>\n                    <div className=\"chatarea\">\n                        {Object.keys(this.state.chatMessages).map((key,index) => {\n                            const msg = this.state.chatMessages[key];\n                            //if (msg.stopReason === \"END_TURN\" || msg.role === \"USER\")\n                                return <div className='item'>\n                                    <div className={msg.role === \"USER\"?\"user\":\"bot\"} onClick={()=> \n                                            this.setState({\n                                                showEventJson: true, \n                                                selectedEvent: {events:msg.raw}\n                                            })\n                                        }>\n                                        <Icon name={msg.role === \"USER\"?\"user-profile\":\"gen-ai\"} />&nbsp;&nbsp;\n                                        {msg.content}\n                                        {msg.role === \"ASSISTANT\" && msg.generationStage? ` [${msg.generationStage}]`:\"\"}\n                                    </div>\n                                </div>\n                        })}\n                        <div className='endbar' ref={this.chatMessagesEndRef}></div>\n                    </div>\n                    </Container>\n                    <Container header={\n                        <Header variant=\"h2\">Details</Header>\n                    }>\n                        <div className=\"placeholder\">Placeholder for data view</div>\n                    </Container>\n                    <Container header={\n                        <Header variant=\"h2\">Events</Header>\n                    }>\n                        <S2sEventDisplay ref={this.eventDisplayRef}></S2sEventDisplay>\n                    </Container>\n                </ColumnLayout>\n                <Modal\n                    onDismiss={() => this.setState({showEventJson: false})}\n                    visible={this.state.showEventJson}\n                    header=\"Event details\"\n                    size='medium'\n                    footer={\n                        <Box float=\"right\">\n                        <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                            <Button variant=\"link\" onClick={() => this.setState({showEventJson: false})}>Close</Button>\n                        </SpaceBetween>\n                        </Box>\n                    }\n                >\n                    <div className='eventdetail'>\n                    <pre id=\"jsonDisplay\">\n                        {this.state.selectedEvent && this.state.selectedEvent.events.map(e=>{\n                            const eventType = Object.keys(e?.event)[0];\n                            if (eventType === \"audioInput\" || eventType === \"audioOutput\")\n                                e.event[eventType].content = e.event[eventType].content.substr(0,10) + \"...\";\n                            const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                                year: \"numeric\",\n                                month: \"2-digit\",\n                                day: \"2-digit\",\n                                hour: \"2-digit\",\n                                minute: \"2-digit\",\n                                second: \"2-digit\",\n                                fractionalSecondDigits: 3, // Show milliseconds\n                                hour12: false // 24-hour format\n                            });\n                            var displayJson = { ...e };\n                            delete displayJson.timestamp;\n                            return ts + \"\\n\" + JSON.stringify(displayJson,null,2) + \"\\n\";\n                        })}\n                    </pre>\n                    </div>\n                </Modal>\n                <Modal  \n                    onDismiss={() => this.setState({showConfig: false})}\n                    visible={this.state.showConfig}\n                    header=\"Nova S2S settings\"\n                    size='large'\n                    footer={\n                        <Box float=\"right\">\n                        <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                            <Button variant=\"link\" onClick={() => this.setState({showConfig: false})}>Save</Button>\n                        </SpaceBetween>\n                        </Box>\n                    }\n                >\n                    <div className='config'>\n                        <FormField\n                            label=\"Voice Id\"\n                            stretch={true}\n                        >\n                            <Select\n                                selectedOption={this.state.configVoiceIdOption}\n                                onChange={({ detail }) =>\n                                    this.setState({configVoiceIdOption: detail.selectedOption})\n                                }\n                                options={[\n                                    { label: \"Matthew (en-US)\", value: \"matthew\" },\n                                    { label: \"Tiffany (en-US)\", value: \"tiffany\" },\n                                    { label: \"Amy (en-GB)\", value: \"amy\" },\n                                ]}\n                                />\n                        </FormField>\n                        <br/>\n                        <FormField\n                            label=\"System prompt\"\n                            description=\"For the speech model\"\n                            stretch={true}\n                        >\n                            <Textarea\n                                onChange={({ detail }) => this.setState({configSystemPrompt: detail.value})}\n                                value={this.state.configSystemPrompt}\n                                placeholder=\"Speech system prompt\"\n                                rows={5}\n                            />\n                        </FormField>\n                        <br/>\n                        <FormField\n                            label=\"Tool use configuration\"\n                            description=\"For external integration such as RAG and Agents\"\n                            stretch={true}\n                        >\n                            <Textarea\n                                onChange={({ detail }) => this.setState({configToolUse: detail.value})}\n                                value={this.state.configToolUse}\n                                rows={10}\n                                placeholder=\"{}\"\n                            />\n                        </FormField>\n                                <br/>\n                        <FormField\n                            label=\"Chat history\"\n                            description=\"Sample chat history to resume conversation\"\n                            stretch={true}\n                        >\n                            <Textarea\n                                onChange={({ detail }) => this.setState({configChatHistory: detail.value})}\n                                value={this.state.configChatHistory}\n                                rows={15}\n                                placeholder=\"{}\"\n                            />\n                        </FormField>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default S2sChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}