{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useAppLayoutFlagEnabled } from '../../../app-layout/utils/feature-flags';\nimport { AppLayoutVisibilityContext, BreadcrumbsSlotContext } from '../../../app-layout/visual-refresh-toolbar/contexts';\nimport { awsuiPluginsInternal } from '../api';\nfunction useSetGlobalBreadcrumbsImplementation(_a) {\n  var _b, _c;\n  var {\n      __disableGlobalization\n    } = _a,\n    props = __rest(_a, [\"__disableGlobalization\"]);\n  const {\n    isInToolbar\n  } = (_b = useContext(BreadcrumbsSlotContext)) !== null && _b !== void 0 ? _b : {};\n  const isLayoutVisible = (_c = useContext(AppLayoutVisibilityContext)) !== null && _c !== void 0 ? _c : true;\n  const registrationRef = useRef();\n  const [registered, setRegistered] = useState(false);\n  useEffect(() => {\n    if (isInToolbar || __disableGlobalization || !isLayoutVisible) {\n      return;\n    }\n    const registration = awsuiPluginsInternal.breadcrumbs.registerBreadcrumbs(props, isRegistered => setRegistered(isRegistered !== null && isRegistered !== void 0 ? isRegistered : true));\n    registrationRef.current = registration;\n    return () => {\n      registration.cleanup();\n    };\n    // subsequent prop changes are handled by another effect\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isInToolbar, __disableGlobalization, isLayoutVisible]);\n  useLayoutEffect(() => {\n    var _a;\n    (_a = registrationRef.current) === null || _a === void 0 ? void 0 : _a.update(props);\n  });\n  return registered;\n}\nexport function useSetGlobalBreadcrumbs(props) {\n  // avoid additional side effects when this feature is not active\n  if (!useAppLayoutFlagEnabled()) {\n    return false;\n  }\n  // getGlobalFlag() value does not change without full page reload\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSetGlobalBreadcrumbsImplementation(props);\n}\nexport function useGetGlobalBreadcrumbs(enabled) {\n  const [discoveredBreadcrumbs, setDiscoveredBreadcrumbs] = useState(null);\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    return awsuiPluginsInternal.breadcrumbs.registerAppLayout(breadcrumbs => {\n      setDiscoveredBreadcrumbs(breadcrumbs);\n    });\n  }, [enabled]);\n  return discoveredBreadcrumbs;\n}","map":{"version":3,"names":["useContext","useEffect","useLayoutEffect","useRef","useState","useAppLayoutFlagEnabled","AppLayoutVisibilityContext","BreadcrumbsSlotContext","awsuiPluginsInternal","useSetGlobalBreadcrumbsImplementation","_a","__disableGlobalization","props","__rest","isInToolbar","_b","isLayoutVisible","_c","registrationRef","registered","setRegistered","registration","breadcrumbs","registerBreadcrumbs","isRegistered","current","cleanup","update","useSetGlobalBreadcrumbs","useGetGlobalBreadcrumbs","enabled","discoveredBreadcrumbs","setDiscoveredBreadcrumbs","registerAppLayout"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/plugins/helpers/use-global-breadcrumbs.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, useEffect, useLayoutEffect, useRef, useState } from 'react';\n\nimport { useAppLayoutFlagEnabled } from '../../../app-layout/utils/feature-flags';\nimport {\n  AppLayoutVisibilityContext,\n  BreadcrumbsSlotContext,\n} from '../../../app-layout/visual-refresh-toolbar/contexts';\nimport { BreadcrumbGroupProps } from '../../../breadcrumb-group/interfaces';\nimport { awsuiPluginsInternal } from '../api';\nimport { BreadcrumbsGlobalRegistration } from '../controllers/breadcrumbs';\n\nfunction useSetGlobalBreadcrumbsImplementation({\n  __disableGlobalization,\n  ...props\n}: BreadcrumbGroupProps<any> & { __disableGlobalization?: boolean }) {\n  const { isInToolbar } = useContext(BreadcrumbsSlotContext) ?? {};\n  const isLayoutVisible = useContext(AppLayoutVisibilityContext) ?? true;\n  const registrationRef = useRef<BreadcrumbsGlobalRegistration<BreadcrumbGroupProps> | null>();\n  const [registered, setRegistered] = useState(false);\n\n  useEffect(() => {\n    if (isInToolbar || __disableGlobalization || !isLayoutVisible) {\n      return;\n    }\n    const registration = awsuiPluginsInternal.breadcrumbs.registerBreadcrumbs(props, isRegistered =>\n      setRegistered(isRegistered ?? true)\n    );\n    registrationRef.current = registration;\n\n    return () => {\n      registration.cleanup();\n    };\n    // subsequent prop changes are handled by another effect\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isInToolbar, __disableGlobalization, isLayoutVisible]);\n\n  useLayoutEffect(() => {\n    registrationRef.current?.update(props);\n  });\n\n  return registered;\n}\n\nexport function useSetGlobalBreadcrumbs<T extends BreadcrumbGroupProps.Item>(props: BreadcrumbGroupProps<T>) {\n  // avoid additional side effects when this feature is not active\n  if (!useAppLayoutFlagEnabled()) {\n    return false;\n  }\n  // getGlobalFlag() value does not change without full page reload\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSetGlobalBreadcrumbsImplementation(props);\n}\n\nexport function useGetGlobalBreadcrumbs(enabled: boolean) {\n  const [discoveredBreadcrumbs, setDiscoveredBreadcrumbs] = useState<BreadcrumbGroupProps<any> | null>(null);\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    return awsuiPluginsInternal.breadcrumbs.registerAppLayout(breadcrumbs => {\n      setDiscoveredBreadcrumbs(breadcrumbs);\n    });\n  }, [enabled]);\n\n  return discoveredBreadcrumbs;\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,UAAU,EAAEC,SAAS,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEhF,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SACEC,0BAA0B,EAC1BC,sBAAsB,QACjB,qDAAqD;AAE5D,SAASC,oBAAoB,QAAQ,QAAQ;AAG7C,SAASC,qCAAqCA,CAACC,EAGoB;;MAHpB;MAC7CC;IAAsB,IAAAD,EAE2C;IAD9DE,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFqC,0BAG9C,CADS;EAER,MAAM;IAAEI;EAAW,CAAE,GAAG,CAAAC,EAAA,GAAAf,UAAU,CAACO,sBAAsB,CAAC,cAAAQ,EAAA,cAAAA,EAAA,GAAI,EAAE;EAChE,MAAMC,eAAe,GAAG,CAAAC,EAAA,GAAAjB,UAAU,CAACM,0BAA0B,CAAC,cAAAW,EAAA,cAAAA,EAAA,GAAI,IAAI;EACtE,MAAMC,eAAe,GAAGf,MAAM,EAA8D;EAC5F,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnDH,SAAS,CAAC,MAAK;IACb,IAAIa,WAAW,IAAIH,sBAAsB,IAAI,CAACK,eAAe,EAAE;MAC7D;;IAEF,MAAMK,YAAY,GAAGb,oBAAoB,CAACc,WAAW,CAACC,mBAAmB,CAACX,KAAK,EAAEY,YAAY,IAC3FJ,aAAa,CAACI,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,IAAI,CAAC,CACpC;IACDN,eAAe,CAACO,OAAO,GAAGJ,YAAY;IAEtC,OAAO,MAAK;MACVA,YAAY,CAACK,OAAO,EAAE;IACxB,CAAC;IACD;IACA;EACF,CAAC,EAAE,CAACZ,WAAW,EAAEH,sBAAsB,EAAEK,eAAe,CAAC,CAAC;EAE1Dd,eAAe,CAAC,MAAK;;IACnB,CAAAQ,EAAA,GAAAQ,eAAe,CAACO,OAAO,cAAAf,EAAA,uBAAAA,EAAA,CAAEiB,MAAM,CAACf,KAAK,CAAC;EACxC,CAAC,CAAC;EAEF,OAAOO,UAAU;AACnB;AAEA,OAAM,SAAUS,uBAAuBA,CAAsChB,KAA8B;EACzG;EACA,IAAI,CAACP,uBAAuB,EAAE,EAAE;IAC9B,OAAO,KAAK;;EAEd;EACA;EACA,OAAOI,qCAAqC,CAACG,KAAK,CAAC;AACrD;AAEA,OAAM,SAAUiB,uBAAuBA,CAACC,OAAgB;EACtD,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG5B,QAAQ,CAAmC,IAAI,CAAC;EAE1GH,SAAS,CAAC,MAAK;IACb,IAAI,CAAC6B,OAAO,EAAE;MACZ;;IAEF,OAAOtB,oBAAoB,CAACc,WAAW,CAACW,iBAAiB,CAACX,WAAW,IAAG;MACtEU,wBAAwB,CAACV,WAAW,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACQ,OAAO,CAAC,CAAC;EAEb,OAAOC,qBAAqB;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}