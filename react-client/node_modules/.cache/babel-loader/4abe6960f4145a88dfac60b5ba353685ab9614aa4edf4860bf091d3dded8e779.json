{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport PanelResizeHandle from '../../internal/components/panel-resize-handle';\nimport { getLimitedValue } from '../../split-panel/utils/size-utils';\nimport { TOOLS_DRAWER_ID } from '../utils/use-drawers';\nimport { useKeyboardEvents } from '../utils/use-keyboard-events';\nimport { usePointerEvents } from '../utils/use-pointer-events';\nimport { Drawer } from './index';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport const ResizableDrawer = _a => {\n  var _b, _c, _d, _e, _f;\n  var {\n      onResize,\n      maxWidth,\n      minWidth,\n      refs,\n      activeDrawer,\n      toolsContent\n    } = _a,\n    props = __rest(_a, [\"onResize\", \"maxWidth\", \"minWidth\", \"refs\", \"activeDrawer\", \"toolsContent\"]);\n  const {\n    isOpen,\n    children,\n    width,\n    isMobile\n  } = props;\n  const clampedWidth = getLimitedValue(minWidth, width, maxWidth);\n  const relativeSize = (clampedWidth - minWidth) / (maxWidth - minWidth) * 100;\n  const setSidePanelWidth = newWidth => {\n    const size = getLimitedValue(minWidth, newWidth, maxWidth);\n    const id = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id;\n    if (isOpen && id && maxWidth >= minWidth) {\n      onResize({\n        size,\n        id\n      });\n    }\n  };\n  const drawerRefObject = useRef(null);\n  const sizeControlProps = {\n    position: 'side',\n    panelRef: drawerRefObject,\n    handleRef: refs.slider,\n    onResize: setSidePanelWidth\n  };\n  const onSliderPointerDown = usePointerEvents(sizeControlProps);\n  const {\n    onKeyDown,\n    onDirectionClick\n  } = useKeyboardEvents(sizeControlProps);\n  return React.createElement(Drawer, Object.assign({}, props, {\n    id: activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id,\n    width: clampedWidth,\n    ref: drawerRefObject,\n    isHidden: !activeDrawer,\n    resizeHandle: !isMobile && (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.resizable) && React.createElement(PanelResizeHandle, {\n      ref: refs.slider,\n      position: \"side\",\n      className: testutilStyles['drawers-slider'],\n      ariaLabel: (_b = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _b === void 0 ? void 0 : _b.resizeHandle,\n      tooltipText: (_c = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _c === void 0 ? void 0 : _c.resizeHandleTooltipText,\n      ariaValuenow: relativeSize,\n      onKeyDown: onKeyDown,\n      onDirectionClick: onDirectionClick,\n      onPointerDown: onSliderPointerDown\n    }),\n    ariaLabels: {\n      openLabel: (_d = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _d === void 0 ? void 0 : _d.triggerButton,\n      mainLabel: (_e = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _e === void 0 ? void 0 : _e.drawerName,\n      closeLabel: (_f = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _f === void 0 ? void 0 : _f.closeButton\n    }\n  }), toolsContent && React.createElement(\"div\", {\n    className: clsx((activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id) !== TOOLS_DRAWER_ID && styles.hide)\n  }, toolsContent), (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id) !== TOOLS_DRAWER_ID ? children : null);\n};","map":{"version":3,"names":["React","useRef","clsx","PanelResizeHandle","getLimitedValue","TOOLS_DRAWER_ID","useKeyboardEvents","usePointerEvents","Drawer","testutilStyles","styles","ResizableDrawer","_a","onResize","maxWidth","minWidth","refs","activeDrawer","toolsContent","props","__rest","isOpen","children","width","isMobile","clampedWidth","relativeSize","setSidePanelWidth","newWidth","size","id","drawerRefObject","sizeControlProps","position","panelRef","handleRef","slider","onSliderPointerDown","onKeyDown","onDirectionClick","createElement","Object","assign","ref","isHidden","resizeHandle","resizable","className","ariaLabel","_b","ariaLabels","tooltipText","_c","resizeHandleTooltipText","ariaValuenow","onPointerDown","openLabel","_d","triggerButton","mainLabel","_e","drawerName","closeLabel","_f","closeButton","hide"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/app-layout/drawer/resizable-drawer.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport PanelResizeHandle from '../../internal/components/panel-resize-handle';\nimport { getLimitedValue } from '../../split-panel/utils/size-utils';\nimport { SizeControlProps } from '../utils/interfaces';\nimport { TOOLS_DRAWER_ID } from '../utils/use-drawers';\nimport { useKeyboardEvents } from '../utils/use-keyboard-events';\nimport { usePointerEvents } from '../utils/use-pointer-events';\nimport { Drawer } from './index';\nimport { ResizableDrawerProps } from './interfaces';\n\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport const ResizableDrawer = ({\n  onResize,\n  maxWidth,\n  minWidth,\n  refs,\n  activeDrawer,\n  toolsContent,\n  ...props\n}: ResizableDrawerProps) => {\n  const { isOpen, children, width, isMobile } = props;\n\n  const clampedWidth = getLimitedValue(minWidth, width, maxWidth);\n  const relativeSize = ((clampedWidth - minWidth) / (maxWidth - minWidth)) * 100;\n\n  const setSidePanelWidth = (newWidth: number) => {\n    const size = getLimitedValue(minWidth, newWidth, maxWidth);\n    const id = activeDrawer?.id;\n\n    if (isOpen && id && maxWidth >= minWidth) {\n      onResize({ size, id });\n    }\n  };\n\n  const drawerRefObject = useRef<HTMLDivElement>(null);\n\n  const sizeControlProps: SizeControlProps = {\n    position: 'side',\n    panelRef: drawerRefObject,\n    handleRef: refs.slider,\n    onResize: setSidePanelWidth,\n  };\n\n  const onSliderPointerDown = usePointerEvents(sizeControlProps);\n  const { onKeyDown, onDirectionClick } = useKeyboardEvents(sizeControlProps);\n\n  return (\n    <Drawer\n      {...props}\n      id={activeDrawer?.id}\n      width={clampedWidth}\n      ref={drawerRefObject}\n      isHidden={!activeDrawer}\n      resizeHandle={\n        !isMobile &&\n        activeDrawer?.resizable && (\n          <PanelResizeHandle\n            ref={refs.slider}\n            position=\"side\"\n            className={testutilStyles['drawers-slider']}\n            ariaLabel={activeDrawer?.ariaLabels?.resizeHandle}\n            tooltipText={activeDrawer?.ariaLabels?.resizeHandleTooltipText}\n            ariaValuenow={relativeSize}\n            onKeyDown={onKeyDown}\n            onDirectionClick={onDirectionClick}\n            onPointerDown={onSliderPointerDown}\n          />\n        )\n      }\n      ariaLabels={{\n        openLabel: activeDrawer?.ariaLabels?.triggerButton,\n        mainLabel: activeDrawer?.ariaLabels?.drawerName,\n        closeLabel: activeDrawer?.ariaLabels?.closeButton,\n      }}\n    >\n      {toolsContent && <div className={clsx(activeDrawer?.id !== TOOLS_DRAWER_ID && styles.hide)}>{toolsContent}</div>}\n      {activeDrawer?.id !== TOOLS_DRAWER_ID ? children : null}\n    </Drawer>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}