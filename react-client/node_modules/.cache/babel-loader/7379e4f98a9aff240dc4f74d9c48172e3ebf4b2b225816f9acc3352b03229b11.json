{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport PopoverBody from '../../../popover/body';\nimport PopoverContainer from '../../../popover/container';\nimport { getBaseProps } from '../../base-component';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport styles from './styles.css.js';\nimport testClasses from './test-classes/styles.css.js';\nexport default React.forwardRef(ChartPopover);\nfunction ChartPopover(_a, ref) {\n  var {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      dismissButton = false,\n      dismissAriaLabel,\n      children,\n      footer,\n      title,\n      trackRef,\n      getTrack,\n      trackKey,\n      onDismiss,\n      container,\n      minVisibleBlockSize,\n      onMouseEnter,\n      onMouseLeave,\n      onBlur\n    } = _a,\n    restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"dismissButton\", \"dismissAriaLabel\", \"children\", \"footer\", \"title\", \"trackRef\", \"getTrack\", \"trackKey\", \"onDismiss\", \"container\", \"minVisibleBlockSize\", \"onMouseEnter\", \"onMouseLeave\", \"onBlur\"]);\n  const baseProps = getBaseProps(restProps);\n  const popoverObjectRef = useRef(null);\n  const popoverRef = useMergeRefs(popoverObjectRef, ref);\n  useEffect(() => {\n    const onDocumentClick = event => {\n      if (event.target && !nodeBelongs(popoverObjectRef.current, event.target) &&\n      // click not in popover\n      !nodeContains(container, event.target) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n    document.addEventListener('mousedown', onDocumentClick, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, {\n        capture: true\n      });\n    };\n  }, [container, onDismiss]);\n  // In chart popovers, dismiss button is present when they are pinned, so both values are equivalent.\n  const isPinned = dismissButton;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(popoverStyles.root, styles.root, baseProps.className),\n    ref: popoverRef,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onBlur: onBlur,\n    // The tabIndex makes it so that clicking inside popover assigns this element as blur target.\n    // That is necessary in charts to ensure the blur target is within the chart and no cleanup is needed.\n    tabIndex: -1\n  }), React.createElement(PopoverContainer, {\n    size: size,\n    fixedWidth: fixedWidth,\n    position: position,\n    trackRef: trackRef,\n    getTrack: getTrack,\n    trackKey: trackKey,\n    minVisibleBlockSize: minVisibleBlockSize,\n    arrow: position => React.createElement(\"div\", {\n      className: clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])\n    }, React.createElement(\"div\", {\n      className: popoverStyles['arrow-outer']\n    }), React.createElement(\"div\", {\n      className: popoverStyles['arrow-inner']\n    })),\n    keepPosition: true,\n    allowVerticalOverflow: true,\n    allowScrollToFit: isPinned,\n    hoverArea: true\n  }, React.createElement(PopoverBody, {\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    header: React.createElement(\"span\", {\n      className: testClasses.header\n    }, title),\n    onDismiss: onDismiss,\n    overflowVisible: \"content\",\n    className: styles['popover-body'],\n    variant: \"chart\"\n  }, React.createElement(\"div\", {\n    className: testClasses.body\n  }, children), footer && React.createElement(\"div\", {\n    className: clsx(testClasses.footer, styles.footer)\n  }, footer))));\n}","map":{"version":3,"names":["React","useEffect","useRef","clsx","nodeContains","useMergeRefs","PopoverBody","PopoverContainer","getBaseProps","nodeBelongs","popoverStyles","styles","testClasses","forwardRef","ChartPopover","_a","ref","position","size","fixedWidth","dismissButton","dismissAriaLabel","children","footer","title","trackRef","getTrack","trackKey","onDismiss","container","minVisibleBlockSize","onMouseEnter","onMouseLeave","onBlur","restProps","__rest","baseProps","popoverObjectRef","popoverRef","onDocumentClick","event","target","current","document","addEventListener","capture","removeEventListener","isPinned","createElement","Object","assign","className","root","tabIndex","arrow","keepPosition","allowVerticalOverflow","allowScrollToFit","hoverArea","header","overflowVisible","variant","body"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/components/chart-popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport PopoverBody from '../../../popover/body';\nimport PopoverContainer from '../../../popover/container';\nimport { PopoverProps } from '../../../popover/interfaces';\nimport { getBaseProps } from '../../base-component';\nimport { nodeBelongs } from '../../utils/node-belongs';\n\nimport popoverStyles from '../../../popover/styles.css.js';\nimport styles from './styles.css.js';\nimport testClasses from './test-classes/styles.css.js';\n\nexport interface ChartPopoverProps extends PopoverProps {\n  /** Title of the popover */\n  title?: React.ReactNode;\n\n  /** References the element the container is positioned against. */\n  trackRef?: React.RefObject<HTMLElement | SVGElement>;\n  getTrack?: () => null | HTMLElement | SVGElement;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n  minVisibleBlockSize?: number;\n\n  /** Optional container element that prevents any clicks in there from dismissing the popover */\n  container: Element | null;\n\n  /** Event that is fired when the popover is dismissed */\n  onDismiss: (outsideClick?: boolean) => void;\n\n  /** Fired when the pointer enters the hoverable area around the popover */\n  onMouseEnter?: (event: React.MouseEvent) => void;\n\n  /** Fired when the pointer leaves the hoverable area around the popover */\n  onMouseLeave?: (event: React.MouseEvent) => void;\n\n  onBlur?: (event: React.FocusEvent) => void;\n\n  /** Popover content */\n  children?: React.ReactNode;\n\n  /** Popover footer */\n  footer?: React.ReactNode;\n}\n\nexport default React.forwardRef(ChartPopover);\n\nfunction ChartPopover(\n  {\n    position = 'right',\n    size = 'medium',\n    fixedWidth = false,\n    dismissButton = false,\n    dismissAriaLabel,\n\n    children,\n    footer,\n\n    title,\n    trackRef,\n    getTrack,\n    trackKey,\n    onDismiss,\n    container,\n    minVisibleBlockSize,\n\n    onMouseEnter,\n    onMouseLeave,\n    onBlur,\n\n    ...restProps\n  }: ChartPopoverProps,\n  ref: React.Ref<HTMLElement>\n) {\n  const baseProps = getBaseProps(restProps);\n  const popoverObjectRef = useRef<HTMLDivElement | null>(null);\n\n  const popoverRef = useMergeRefs(popoverObjectRef, ref);\n\n  useEffect(() => {\n    const onDocumentClick = (event: MouseEvent) => {\n      if (\n        event.target &&\n        !nodeBelongs(popoverObjectRef.current, event.target as Element) && // click not in popover\n        !nodeContains(container, event.target as Element) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, { capture: true });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, { capture: true });\n    };\n  }, [container, onDismiss]);\n\n  // In chart popovers, dismiss button is present when they are pinned, so both values are equivalent.\n  const isPinned = dismissButton;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(popoverStyles.root, styles.root, baseProps.className)}\n      ref={popoverRef}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onBlur={onBlur}\n      // The tabIndex makes it so that clicking inside popover assigns this element as blur target.\n      // That is necessary in charts to ensure the blur target is within the chart and no cleanup is needed.\n      tabIndex={-1}\n    >\n      <PopoverContainer\n        size={size}\n        fixedWidth={fixedWidth}\n        position={position}\n        trackRef={trackRef}\n        getTrack={getTrack}\n        trackKey={trackKey}\n        minVisibleBlockSize={minVisibleBlockSize}\n        arrow={position => (\n          <div className={clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])}>\n            <div className={popoverStyles['arrow-outer']} />\n            <div className={popoverStyles['arrow-inner']} />\n          </div>\n        )}\n        keepPosition={true}\n        allowVerticalOverflow={true}\n        allowScrollToFit={isPinned}\n        hoverArea={true}\n      >\n        <PopoverBody\n          dismissButton={dismissButton}\n          dismissAriaLabel={dismissAriaLabel}\n          header={<span className={testClasses.header}>{title}</span>}\n          onDismiss={onDismiss}\n          overflowVisible=\"content\"\n          className={styles['popover-body']}\n          variant=\"chart\"\n        >\n          <div className={testClasses.body}>{children}</div>\n          {footer && <div className={clsx(testClasses.footer, styles.footer)}>{footer}</div>}\n        </PopoverBody>\n      </PopoverContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}