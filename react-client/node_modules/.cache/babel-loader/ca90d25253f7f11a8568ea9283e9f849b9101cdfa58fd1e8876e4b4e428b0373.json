{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { AnalyticsFunnel, AnalyticsFunnelStep } from '../internal/analytics/components/analytics-funnel';\nimport { useFunnel, useFunnelNameSelector, useFunnelStepRef } from '../internal/analytics/hooks/use-funnel';\nimport { getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport { getAnalyticsMetadataProps } from '../internal/base-component';\nimport { ButtonContext } from '../internal/context/button-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalForm from './internal';\nimport headerStyles from '../header/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nconst FormWithAnalytics = _a => {\n  var {\n      variant = 'full-page',\n      actions,\n      errorText,\n      __internalRootRef\n    } = _a,\n    props = __rest(_a, [\"variant\", \"actions\", \"errorText\", \"__internalRootRef\"]);\n  const {\n    funnelIdentifier,\n    funnelInteractionId,\n    funnelProps,\n    funnelSubmit,\n    funnelNextOrSubmitAttempt,\n    errorCount,\n    submissionAttempt,\n    funnelErrorContext\n  } = useFunnel();\n  const funnelStepInfo = useFunnelStepRef();\n  const handleActionButtonClick = ({\n    variant\n  }) => {\n    if (variant === 'primary') {\n      funnelNextOrSubmitAttempt();\n      funnelSubmit();\n    }\n  };\n  const errorSlotId = useUniqueId('form-error-');\n  useEffect(() => {\n    var _a, _b;\n    if (funnelInteractionId && errorText) {\n      errorCount.current++;\n      const stepName = getTextFromSelector(funnelStepInfo.current.stepNameSelector);\n      FunnelMetrics.funnelStepError({\n        funnelInteractionId,\n        stepNumber: funnelStepInfo.current.stepNumber,\n        stepNameSelector: funnelStepInfo.current.stepNameSelector,\n        stepName,\n        stepIdentifier: funnelStepInfo.current.stepIdentifier,\n        currentDocument: (_a = __internalRootRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument,\n        totalSubSteps: funnelStepInfo.current.subStepCount.current,\n        funnelIdentifier,\n        subStepAllSelector: getSubStepAllSelector(),\n        errorContext: funnelStepInfo.current.stepErrorContext,\n        subStepConfiguration: (_b = funnelStepInfo.current.subStepConfiguration.current) === null || _b === void 0 ? void 0 : _b.get(funnelStepInfo.current.stepNumber),\n        stepErrorSelector: '#' + errorSlotId\n      });\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        errorCount.current--;\n      };\n    }\n  }, [funnelInteractionId, funnelIdentifier, errorText, submissionAttempt, errorCount, funnelErrorContext, errorSlotId, __internalRootRef, funnelStepInfo]);\n  return React.createElement(ButtonContext.Provider, {\n    value: {\n      onClick: handleActionButtonClick\n    }\n  }, React.createElement(InternalForm, Object.assign({\n    variant: variant,\n    actions: actions,\n    errorText: errorText,\n    __errorSlotId: errorSlotId\n  }, props, funnelProps, funnelStepInfo.current.funnelStepProps, {\n    __internalRootRef: __internalRootRef,\n    __injectAnalyticsComponentMetadata: true\n  })));\n};\nexport default function Form(_a) {\n  var {\n      variant = 'full-page'\n    } = _a,\n    props = __rest(_a, [\"variant\"]);\n  const analyticsMetadata = getAnalyticsMetadataProps(props);\n  const baseComponentProps = useBaseComponent('Form', {\n    props: {\n      variant,\n      flowType: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.flowType\n    },\n    metadata: {\n      hasResourceType: Boolean(analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.resourceType),\n      hasInstanceIdentifier: Boolean(analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier)\n    }\n  }, analyticsMetadata);\n  const inheritedFunnelNameSelector = useFunnelNameSelector();\n  const funnelNameSelector = inheritedFunnelNameSelector || `.${analyticsSelectors.header} .${headerStyles['heading-text']}`;\n  return React.createElement(AnalyticsFunnel, {\n    funnelIdentifier: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier,\n    funnelFlowType: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.flowType,\n    funnelErrorContext: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.errorContext,\n    funnelResourceType: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.resourceType,\n    funnelType: \"single-page\",\n    optionalStepNumbers: [],\n    totalFunnelSteps: 1,\n    funnelNameSelectors: () => [funnelNameSelector, `.${analyticsSelectors.header}`]\n  }, React.createElement(AnalyticsFunnelStep, {\n    stepIdentifier: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier,\n    stepErrorContext: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.errorContext,\n    stepNumber: 1\n  }, React.createElement(FormWithAnalytics, Object.assign({\n    variant: variant\n  }, props, baseComponentProps))));\n}\napplyDisplayName(Form, 'Form');","map":{"version":3,"names":["React","useEffect","FunnelMetrics","AnalyticsFunnel","AnalyticsFunnelStep","useFunnel","useFunnelNameSelector","useFunnelStepRef","getSubStepAllSelector","getTextFromSelector","getAnalyticsMetadataProps","ButtonContext","useBaseComponent","useUniqueId","applyDisplayName","InternalForm","headerStyles","analyticsSelectors","FormWithAnalytics","_a","variant","actions","errorText","__internalRootRef","props","__rest","funnelIdentifier","funnelInteractionId","funnelProps","funnelSubmit","funnelNextOrSubmitAttempt","errorCount","submissionAttempt","funnelErrorContext","funnelStepInfo","handleActionButtonClick","errorSlotId","current","stepName","stepNameSelector","funnelStepError","stepNumber","stepIdentifier","currentDocument","ownerDocument","totalSubSteps","subStepCount","subStepAllSelector","errorContext","stepErrorContext","subStepConfiguration","_b","get","stepErrorSelector","createElement","Provider","value","onClick","Object","assign","__errorSlotId","funnelStepProps","__injectAnalyticsComponentMetadata","Form","analyticsMetadata","baseComponentProps","flowType","metadata","hasResourceType","Boolean","resourceType","hasInstanceIdentifier","instanceIdentifier","inheritedFunnelNameSelector","funnelNameSelector","header","funnelFlowType","funnelResourceType","funnelType","optionalStepNumbers","totalFunnelSteps","funnelNameSelectors"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/form/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\n\nimport { FunnelMetrics } from '../internal/analytics';\nimport { AnalyticsFunnel, AnalyticsFunnelStep } from '../internal/analytics/components/analytics-funnel';\nimport { useFunnel, useFunnelNameSelector, useFunnelStepRef } from '../internal/analytics/hooks/use-funnel';\nimport { getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport { ButtonContext, ButtonContextProps } from '../internal/context/button-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { FormProps } from './interfaces';\nimport InternalForm from './internal';\n\nimport headerStyles from '../header/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { FormProps };\n\nconst FormWithAnalytics = ({\n  variant = 'full-page',\n  actions,\n  errorText,\n  __internalRootRef,\n  ...props\n}: FormProps & ReturnType<typeof useBaseComponent<HTMLElement>>) => {\n  const {\n    funnelIdentifier,\n    funnelInteractionId,\n    funnelProps,\n    funnelSubmit,\n    funnelNextOrSubmitAttempt,\n    errorCount,\n    submissionAttempt,\n    funnelErrorContext,\n  } = useFunnel();\n\n  const funnelStepInfo = useFunnelStepRef();\n\n  const handleActionButtonClick: ButtonContextProps['onClick'] = ({ variant }) => {\n    if (variant === 'primary') {\n      funnelNextOrSubmitAttempt();\n      funnelSubmit();\n    }\n  };\n\n  const errorSlotId = useUniqueId('form-error-');\n\n  useEffect(() => {\n    if (funnelInteractionId && errorText) {\n      errorCount.current++;\n\n      const stepName = getTextFromSelector(funnelStepInfo.current.stepNameSelector);\n\n      FunnelMetrics.funnelStepError({\n        funnelInteractionId,\n        stepNumber: funnelStepInfo.current.stepNumber,\n        stepNameSelector: funnelStepInfo.current.stepNameSelector,\n        stepName,\n        stepIdentifier: funnelStepInfo.current.stepIdentifier,\n        currentDocument: __internalRootRef.current?.ownerDocument,\n        totalSubSteps: funnelStepInfo.current.subStepCount.current,\n        funnelIdentifier,\n        subStepAllSelector: getSubStepAllSelector(),\n        errorContext: funnelStepInfo.current.stepErrorContext,\n        subStepConfiguration: funnelStepInfo.current.subStepConfiguration.current?.get(\n          funnelStepInfo.current.stepNumber\n        ),\n        stepErrorSelector: '#' + errorSlotId,\n      });\n\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        errorCount.current--;\n      };\n    }\n  }, [\n    funnelInteractionId,\n    funnelIdentifier,\n    errorText,\n    submissionAttempt,\n    errorCount,\n    funnelErrorContext,\n    errorSlotId,\n    __internalRootRef,\n    funnelStepInfo,\n  ]);\n\n  return (\n    <ButtonContext.Provider value={{ onClick: handleActionButtonClick }}>\n      <InternalForm\n        variant={variant}\n        actions={actions}\n        errorText={errorText}\n        __errorSlotId={errorSlotId}\n        {...props}\n        {...funnelProps}\n        {...funnelStepInfo.current.funnelStepProps}\n        __internalRootRef={__internalRootRef}\n        __injectAnalyticsComponentMetadata={true}\n      />\n    </ButtonContext.Provider>\n  );\n};\n\nexport default function Form({ variant = 'full-page', ...props }: FormProps) {\n  const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n  const baseComponentProps = useBaseComponent<HTMLElement>(\n    'Form',\n    {\n      props: {\n        variant,\n        flowType: analyticsMetadata?.flowType,\n      },\n      metadata: {\n        hasResourceType: Boolean(analyticsMetadata?.resourceType),\n        hasInstanceIdentifier: Boolean(analyticsMetadata?.instanceIdentifier),\n      },\n    },\n    analyticsMetadata\n  );\n  const inheritedFunnelNameSelector = useFunnelNameSelector();\n  const funnelNameSelector =\n    inheritedFunnelNameSelector || `.${analyticsSelectors.header} .${headerStyles['heading-text']}`;\n\n  return (\n    <AnalyticsFunnel\n      funnelIdentifier={analyticsMetadata?.instanceIdentifier}\n      funnelFlowType={analyticsMetadata?.flowType}\n      funnelErrorContext={analyticsMetadata?.errorContext}\n      funnelResourceType={analyticsMetadata?.resourceType}\n      funnelType=\"single-page\"\n      optionalStepNumbers={[]}\n      totalFunnelSteps={1}\n      funnelNameSelectors={() => [funnelNameSelector, `.${analyticsSelectors.header}`]}\n    >\n      <AnalyticsFunnelStep\n        stepIdentifier={analyticsMetadata?.instanceIdentifier}\n        stepErrorContext={analyticsMetadata?.errorContext}\n        stepNumber={1}\n      >\n        <FormWithAnalytics variant={variant} {...props} {...baseComponentProps} />\n      </AnalyticsFunnelStep>\n    </AnalyticsFunnel>\n  );\n}\n\napplyDisplayName(Form, 'Form');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}