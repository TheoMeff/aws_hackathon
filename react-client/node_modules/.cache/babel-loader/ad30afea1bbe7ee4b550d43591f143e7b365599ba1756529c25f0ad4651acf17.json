{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport Item from '../parts/item';\nimport MultiselectItem from '../parts/multiselect-item';\nimport { getItemProps } from './get-item-props';\nexport const renderOptions = ({\n  options,\n  getOptionProps,\n  filteringValue,\n  highlightType,\n  checkboxes = false,\n  hasDropdownStatus,\n  virtualItems,\n  useInteractiveGroups,\n  screenReaderContent,\n  ariaSetsize,\n  withScrollbar,\n  firstOptionSticky,\n  stickyOptionRef\n}) => {\n  return options.map((option, index) => {\n    const virtualItem = virtualItems && virtualItems[index];\n    const globalIndex = virtualItem ? virtualItem.index : index;\n    const props = getItemProps({\n      option,\n      index: globalIndex,\n      getOptionProps,\n      filteringValue: option.type === 'select-all' ? '' : filteringValue,\n      checkboxes\n    });\n    const isLastItem = index === options.length - 1;\n    const padBottom = !hasDropdownStatus && isLastItem;\n    const ListItem = useInteractiveGroups ? MultiselectItem : Item;\n    const isSticky = firstOptionSticky && globalIndex === 0;\n    return React.createElement(ListItem, Object.assign({\n      key: globalIndex\n    }, props, {\n      virtualPosition: virtualItem && virtualItem.start,\n      ref: isSticky && stickyOptionRef ? stickyOptionRef : virtualItem && virtualItem.measureRef,\n      padBottom: padBottom,\n      screenReaderContent: screenReaderContent,\n      ariaPosinset: globalIndex + 1,\n      ariaSetsize: ariaSetsize,\n      highlightType: highlightType.type,\n      withScrollbar: withScrollbar,\n      sticky: isSticky\n    }));\n  });\n};","map":{"version":3,"names":["React","Item","MultiselectItem","getItemProps","renderOptions","options","getOptionProps","filteringValue","highlightType","checkboxes","hasDropdownStatus","virtualItems","useInteractiveGroups","screenReaderContent","ariaSetsize","withScrollbar","firstOptionSticky","stickyOptionRef","map","option","index","virtualItem","globalIndex","props","type","isLastItem","length","padBottom","ListItem","isSticky","createElement","Object","assign","key","virtualPosition","start","ref","measureRef","ariaPosinset","sticky"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/select/utils/render-options.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { DropdownOption } from '../../internal/components/option/interfaces';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option';\nimport { VirtualItem } from '../../internal/vendor/react-virtual';\nimport Item from '../parts/item';\nimport MultiselectItem from '../parts/multiselect-item';\nimport { getItemProps } from './get-item-props';\n\ninterface RenderOptionProps {\n  options: ReadonlyArray<DropdownOption>;\n  getOptionProps: any;\n  filteringValue: string;\n  highlightType: HighlightType;\n  checkboxes?: boolean;\n  hasDropdownStatus?: boolean;\n  virtualItems?: VirtualItem[];\n  useInteractiveGroups?: boolean;\n  screenReaderContent?: string;\n  ariaSetsize?: number;\n  withScrollbar: boolean;\n  firstOptionSticky?: boolean;\n  stickyOptionRef?: React.Ref<HTMLDivElement>;\n}\n\nexport const renderOptions = ({\n  options,\n  getOptionProps,\n  filteringValue,\n  highlightType,\n  checkboxes = false,\n  hasDropdownStatus,\n  virtualItems,\n  useInteractiveGroups,\n  screenReaderContent,\n  ariaSetsize,\n  withScrollbar,\n  firstOptionSticky,\n  stickyOptionRef,\n}: RenderOptionProps) => {\n  return options.map((option, index) => {\n    const virtualItem = virtualItems && virtualItems[index];\n    const globalIndex = virtualItem ? virtualItem.index : index;\n    const props = getItemProps({\n      option,\n      index: globalIndex,\n      getOptionProps,\n      filteringValue: option.type === 'select-all' ? '' : filteringValue,\n      checkboxes,\n    });\n\n    const isLastItem = index === options.length - 1;\n    const padBottom = !hasDropdownStatus && isLastItem;\n    const ListItem = useInteractiveGroups ? MultiselectItem : Item;\n    const isSticky = firstOptionSticky && globalIndex === 0;\n\n    return (\n      <ListItem\n        key={globalIndex}\n        {...props}\n        virtualPosition={virtualItem && virtualItem.start}\n        ref={isSticky && stickyOptionRef ? stickyOptionRef : virtualItem && virtualItem.measureRef}\n        padBottom={padBottom}\n        screenReaderContent={screenReaderContent}\n        ariaPosinset={globalIndex + 1}\n        ariaSetsize={ariaSetsize}\n        highlightType={highlightType.type}\n        withScrollbar={withScrollbar}\n        sticky={isSticky}\n      />\n    );\n  });\n};\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAKzB,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,YAAY,QAAQ,kBAAkB;AAkB/C,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAC5BC,OAAO;EACPC,cAAc;EACdC,cAAc;EACdC,aAAa;EACbC,UAAU,GAAG,KAAK;EAClBC,iBAAiB;EACjBC,YAAY;EACZC,oBAAoB;EACpBC,mBAAmB;EACnBC,WAAW;EACXC,aAAa;EACbC,iBAAiB;EACjBC;AAAe,CACG,KAAI;EACtB,OAAOZ,OAAO,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAI;IACnC,MAAMC,WAAW,GAAGV,YAAY,IAAIA,YAAY,CAACS,KAAK,CAAC;IACvD,MAAME,WAAW,GAAGD,WAAW,GAAGA,WAAW,CAACD,KAAK,GAAGA,KAAK;IAC3D,MAAMG,KAAK,GAAGpB,YAAY,CAAC;MACzBgB,MAAM;MACNC,KAAK,EAAEE,WAAW;MAClBhB,cAAc;MACdC,cAAc,EAAEY,MAAM,CAACK,IAAI,KAAK,YAAY,GAAG,EAAE,GAAGjB,cAAc;MAClEE;KACD,CAAC;IAEF,MAAMgB,UAAU,GAAGL,KAAK,KAAKf,OAAO,CAACqB,MAAM,GAAG,CAAC;IAC/C,MAAMC,SAAS,GAAG,CAACjB,iBAAiB,IAAIe,UAAU;IAClD,MAAMG,QAAQ,GAAGhB,oBAAoB,GAAGV,eAAe,GAAGD,IAAI;IAC9D,MAAM4B,QAAQ,GAAGb,iBAAiB,IAAIM,WAAW,KAAK,CAAC;IAEvD,OACEtB,KAAA,CAAA8B,aAAA,CAACF,QAAQ,EAAAG,MAAA,CAAAC,MAAA;MACPC,GAAG,EAAEX;IAAW,GACZC,KAAK;MACTW,eAAe,EAAEb,WAAW,IAAIA,WAAW,CAACc,KAAK;MACjDC,GAAG,EAAEP,QAAQ,IAAIZ,eAAe,GAAGA,eAAe,GAAGI,WAAW,IAAIA,WAAW,CAACgB,UAAU;MAC1FV,SAAS,EAAEA,SAAS;MACpBd,mBAAmB,EAAEA,mBAAmB;MACxCyB,YAAY,EAAEhB,WAAW,GAAG,CAAC;MAC7BR,WAAW,EAAEA,WAAW;MACxBN,aAAa,EAAEA,aAAa,CAACgB,IAAI;MACjCT,aAAa,EAAEA,aAAa;MAC5BwB,MAAM,EAAEV;IAAQ,GAChB;EAEN,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}