{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { NotificationsSkeleton } from '../skeleton/slot-skeletons';\nimport { NotificationsSlot } from '../skeleton/slot-wrappers';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport function AppLayoutNotificationsImplementation({\n  appLayoutInternals,\n  children\n}) {\n  const {\n    ariaLabels,\n    stickyNotifications,\n    setNotificationsHeight,\n    verticalOffsets\n  } = appLayoutInternals;\n  const [hasNotificationsContent, setHasNotificationsContent] = useState(false);\n  const rootRef = useRef(null);\n  useResizeObserver(rootRef, entry => {\n    const hasContent = entry.contentBoxHeight > 0;\n    setNotificationsHeight(hasContent ? entry.borderBoxHeight : 0);\n    setHasNotificationsContent(hasContent);\n  });\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(NotificationsSlot, {\n    ref: rootRef,\n    className: clsx(appLayoutInternals.headerVariant === 'high-contrast' && highContrastHeaderClassName, stickyNotifications && styles['sticky-notifications'], hasNotificationsContent && styles['has-notifications-content'], appLayoutInternals.headerVariant !== 'high-contrast' && styles['sticky-notifications-with-background']),\n    style: {\n      insetBlockStart: stickyNotifications ? verticalOffsets.notifications : undefined\n    }\n  }, React.createElement(\"div\", {\n    className: testutilStyles.notifications,\n    role: \"region\",\n    \"aria-label\": ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications\n  }, children));\n}\nexport const createWidgetizedAppLayoutNotifications = createWidgetizedComponent(AppLayoutNotificationsImplementation, NotificationsSkeleton);","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","useResizeObserver","highContrastHeaderClassName","createWidgetizedComponent","NotificationsSkeleton","NotificationsSlot","testutilStyles","styles","AppLayoutNotificationsImplementation","appLayoutInternals","children","ariaLabels","stickyNotifications","setNotificationsHeight","verticalOffsets","hasNotificationsContent","setHasNotificationsContent","rootRef","entry","hasContent","contentBoxHeight","borderBoxHeight","createElement","ref","className","headerVariant","style","insetBlockStart","notifications","undefined","role","createWidgetizedAppLayoutNotifications"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/app-layout/visual-refresh-toolbar/notifications/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { AppLayoutInternals } from '../interfaces';\nimport { NotificationsSkeleton } from '../skeleton/slot-skeletons';\nimport { NotificationsSlot } from '../skeleton/slot-wrappers';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface AppLayoutNotificationsImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutNotificationsImplementation({\n  appLayoutInternals,\n  children,\n}: AppLayoutNotificationsImplementationProps) {\n  const { ariaLabels, stickyNotifications, setNotificationsHeight, verticalOffsets } = appLayoutInternals;\n  const [hasNotificationsContent, setHasNotificationsContent] = useState(false);\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(rootRef, entry => {\n    const hasContent = entry.contentBoxHeight > 0;\n    setNotificationsHeight(hasContent ? entry.borderBoxHeight : 0);\n    setHasNotificationsContent(hasContent);\n  });\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <NotificationsSlot\n      ref={rootRef}\n      className={clsx(\n        appLayoutInternals.headerVariant === 'high-contrast' && highContrastHeaderClassName,\n        stickyNotifications && styles['sticky-notifications'],\n        hasNotificationsContent && styles['has-notifications-content'],\n        appLayoutInternals.headerVariant !== 'high-contrast' && styles['sticky-notifications-with-background']\n      )}\n      style={{\n        insetBlockStart: stickyNotifications ? verticalOffsets.notifications : undefined,\n      }}\n    >\n      <div className={testutilStyles.notifications} role=\"region\" aria-label={ariaLabels?.notifications}>\n        {children}\n      </div>\n    </NotificationsSlot>\n  );\n}\n\nexport const createWidgetizedAppLayoutNotifications = createWidgetizedComponent(\n  AppLayoutNotificationsImplementation,\n  NotificationsSkeleton\n);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,+CAA+C;AAEjF,SAASC,2BAA2B,QAAQ,8CAA8C;AAC1F,SAASC,yBAAyB,QAAQ,2BAA2B;AAErE,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,iBAAiB,QAAQ,2BAA2B;AAE7D,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,MAAM,MAAM,iBAAiB;AAOpC,OAAM,SAAUC,oCAAoCA,CAAC;EACnDC,kBAAkB;EAClBC;AAAQ,CACkC;EAC1C,MAAM;IAAEC,UAAU;IAAEC,mBAAmB;IAAEC,sBAAsB;IAAEC;EAAe,CAAE,GAAGL,kBAAkB;EACvG,MAAM,CAACM,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAMkB,OAAO,GAAGnB,MAAM,CAAiB,IAAI,CAAC;EAE5CG,iBAAiB,CAACgB,OAAO,EAAEC,KAAK,IAAG;IACjC,MAAMC,UAAU,GAAGD,KAAK,CAACE,gBAAgB,GAAG,CAAC;IAC7CP,sBAAsB,CAACM,UAAU,GAAGD,KAAK,CAACG,eAAe,GAAG,CAAC,CAAC;IAC9DL,0BAA0B,CAACG,UAAU,CAAC;EACxC,CAAC,CAAC;EACFtB,SAAS,CAAC,MAAK;IACb,OAAO,MAAK;MACVgB,sBAAsB,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OACEjB,KAAA,CAAA0B,aAAA,CAACjB,iBAAiB;IAChBkB,GAAG,EAAEN,OAAO;IACZO,SAAS,EAAExB,IAAI,CACbS,kBAAkB,CAACgB,aAAa,KAAK,eAAe,IAAIvB,2BAA2B,EACnFU,mBAAmB,IAAIL,MAAM,CAAC,sBAAsB,CAAC,EACrDQ,uBAAuB,IAAIR,MAAM,CAAC,2BAA2B,CAAC,EAC9DE,kBAAkB,CAACgB,aAAa,KAAK,eAAe,IAAIlB,MAAM,CAAC,sCAAsC,CAAC,CACvG;IACDmB,KAAK,EAAE;MACLC,eAAe,EAAEf,mBAAmB,GAAGE,eAAe,CAACc,aAAa,GAAGC;;EACxE,GAEDjC,KAAA,CAAA0B,aAAA;IAAKE,SAAS,EAAElB,cAAc,CAACsB,aAAa;IAAEE,IAAI,EAAC,QAAQ;IAAA,cAAanB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEiB;EAAa,GAC9FlB,QAAQ,CACL,CACY;AAExB;AAEA,OAAO,MAAMqB,sCAAsC,GAAG5B,yBAAyB,CAC7EK,oCAAoC,EACpCJ,qBAAqB,CACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}