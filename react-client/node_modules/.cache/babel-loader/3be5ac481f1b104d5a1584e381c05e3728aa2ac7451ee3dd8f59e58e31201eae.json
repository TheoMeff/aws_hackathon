{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nimport { getBaseProps } from '../internal/base-component';\nimport Dropdown from '../internal/components/dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { spinWhenOpen } from '../internal/styles/motion/utils';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport { isLinkItem } from './utils/utils.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst InternalButtonDropdown = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      showMainActionOnly,\n      __internalRootRef,\n      analyticsMetadataTransformer,\n      linkStyle,\n      fullWidth\n    } = _a,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"mainAction\", \"showMainActionOnly\", \"__internalRootRef\", \"analyticsMetadataTransformer\", \"linkStyle\", \"fullWidth\"]);\n  const isInRestrictedView = useMobile();\n  const dropdownId = useUniqueId('dropdown');\n  for (const item of items) {\n    if (isLinkItem(item)) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n  }\n  if (mainAction) {\n    checkSafeUrl('ButtonDropdown', mainAction.href);\n  }\n  if (isDevelopment) {\n    if (mainAction && variant !== 'primary' && variant !== 'normal') {\n      warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n    }\n  }\n  const isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n  const isVisualRefresh = useVisualRefresh();\n  const {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse\n  } = useButtonDropdown({\n    items,\n    onItemClick,\n    onItemFollow,\n    // Scroll is unnecessary when moving focus back to the dropdown trigger.\n    onReturnFocus: () => {\n      var _a;\n      return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n        preventScroll: true\n      });\n    },\n    expandToViewport,\n    hasExpandableGroups: expandableGroups,\n    isInRestrictedView\n  });\n  const handleMouseEvent = () => {\n    setIsUsingMouse(true);\n  };\n  const baseProps = getBaseProps(props);\n  const mainActionRef = useRef(null);\n  const triggerRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    focus(...args) {\n      var _a;\n      (_a = (isMainAction ? mainActionRef : triggerRef).current) === null || _a === void 0 ? void 0 : _a.focus(...args);\n    },\n    focusDropdownTrigger(...args) {\n      var _a;\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus(...args);\n    }\n  }), [mainActionRef, triggerRef, isMainAction]);\n  const clickHandler = () => {\n    if (!loading && !disabled) {\n      // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n      toggleDropdown({\n        moveHighlightOnOpen: !isInRestrictedView\n      });\n    }\n  };\n  const canBeOpened = !loading && !disabled;\n  const canBeFullWidth = !!fullWidth && (variant === 'primary' || variant === 'normal');\n  const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n  const iconProps = variant === 'icon' || variant === 'inline-icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: spinWhenOpen(styles, 'rotate', canBeOpened && isOpen)\n  };\n  const baseTriggerProps = Object.assign(Object.assign({\n    className: clsx(styles['trigger-button'], styles['test-utils-button-trigger'], analyticsSelectors['trigger-label'])\n  }, iconProps), {\n    variant: triggerVariant,\n    loading,\n    loadingText,\n    disabled,\n    disabledReason,\n    onClick: event => {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: 'none',\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  });\n  const triggerId = useUniqueId('awsui-button-dropdown__trigger');\n  const triggerHasBadge = () => {\n    const flatItems = items.flatMap(item => {\n      if ('items' in item) {\n        return item.items;\n      }\n      return item;\n    });\n    return variant === 'icon' && !!(flatItems === null || flatItems === void 0 ? void 0 : flatItems.find(item => {\n      if ('badge' in item) {\n        return item.badge;\n      }\n    }));\n  };\n  let trigger = null;\n  const analyticsMetadata = disabled ? {} : {\n    action: !isOpen ? 'expand' : 'collapse',\n    detail: {\n      label: `.${analyticsSelectors['trigger-label']}`\n    }\n  };\n  if (customTriggerBuilder) {\n    trigger = React.createElement(\"div\", Object.assign({\n      className: styles['dropdown-trigger']\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), customTriggerBuilder({\n      testUtilsClass: styles['test-utils-button-trigger'],\n      ariaExpanded: canBeOpened && isOpen,\n      onClick: clickHandler,\n      triggerRef,\n      ariaLabel,\n      disabled,\n      disabledReason,\n      isOpen\n    }));\n  } else if (isMainAction) {\n    const {\n        text,\n        iconName,\n        iconAlt,\n        iconSvg,\n        iconUrl,\n        external,\n        externalIconAriaLabel\n      } = mainAction,\n      mainActionProps = __rest(mainAction, [\"text\", \"iconName\", \"iconAlt\", \"iconSvg\", \"iconUrl\", \"external\", \"externalIconAriaLabel\"]);\n    const mainActionIconProps = external ? {\n      iconName: 'external',\n      iconAlign: 'right',\n      target: '_blank',\n      rel: 'noopener noreferrer'\n    } : {\n      iconName,\n      iconAlt,\n      iconSvg,\n      iconUrl\n    };\n    const mainActionAriaLabel = externalIconAriaLabel ? `${(_b = mainAction.ariaLabel) !== null && _b !== void 0 ? _b : mainAction.text} ${mainAction.externalIconAriaLabel}` : mainAction.ariaLabel;\n    const hasNoText = !text;\n    const mainActionButton = React.createElement(InternalButton, Object.assign({\n      ref: mainActionRef\n    }, mainActionProps, mainActionIconProps, {\n      fullWidth: canBeFullWidth,\n      className: clsx(styles['trigger-button'], hasNoText && styles['has-no-text'], isVisualRefresh && styles['visual-refresh'], canBeFullWidth && styles['main-action-full-width']),\n      variant: variant,\n      ariaLabel: mainActionAriaLabel,\n      formAction: \"none\"\n    }), text);\n    trigger = React.createElement(\"div\", {\n      role: \"group\",\n      \"aria-label\": ariaLabel,\n      className: styles['split-trigger-wrapper']\n    }, React.createElement(\"div\", Object.assign({\n      className: clsx(styles['trigger-item'], styles['split-trigger'], styles[`variant-${variant}`], mainActionProps.disabled && styles.disabled, mainActionProps.loading && styles.loading),\n      // Close dropdown upon main action click unless event is cancelled.\n      onClick: closeDropdown,\n      // Prevent keyboard events from propagation to the button dropdown handler.\n      onKeyDown: e => e.stopPropagation(),\n      onKeyUp: e => e.stopPropagation()\n    }, getAnalyticsMetadataAttribute({\n      action: 'click',\n      detail: {\n        label: `.${analyticsSelectors['main-action-label']}`\n      }\n    })), mainActionButton), !showMainActionOnly && React.createElement(\"div\", Object.assign({\n      className: clsx(styles['trigger-item'], styles['dropdown-trigger'], isVisualRefresh && styles['visual-refresh'], styles[`variant-${variant}`], baseTriggerProps.disabled && styles.disabled, baseTriggerProps.loading && styles.loading)\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), React.createElement(InternalButton, Object.assign({\n      ref: triggerRef\n    }, baseTriggerProps, {\n      className: clsx(baseTriggerProps.className, {\n        [styles['main-action-trigger-full-width']]: canBeFullWidth\n      }),\n      __emitPerformanceMarks: false\n    }), children)));\n  } else {\n    trigger = React.createElement(\"div\", Object.assign({\n      className: styles['dropdown-trigger']\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), React.createElement(InternalButton, Object.assign({\n      ref: triggerRef,\n      id: triggerId\n    }, baseTriggerProps, {\n      className: clsx(baseTriggerProps.className, {\n        [styles['full-width']]: canBeFullWidth,\n        [styles.loading]: canBeFullWidth && !!loading\n      }),\n      badge: triggerHasBadge(),\n      fullWidth: fullWidth\n    }), children));\n  }\n  const hasHeader = title || description;\n  const headerId = useUniqueId('awsui-button-dropdown__header');\n  const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    onMouseMove: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[`variant-${variant}`], canBeFullWidth && styles['full-width'], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: () => toggleDropdown(),\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(\"div\", {\n    className: styles.title\n  }, React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\",\n    color: \"inherit\",\n    tagOverride: \"h2\",\n    margin: {\n      vertical: 'n',\n      horizontal: 'n'\n    }\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseBlockMargin: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined,\n    statusType: \"finished\"\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    lastInDropdown: true,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant,\n    analyticsMetadataTransformer: analyticsMetadataTransformer,\n    linkStyle: linkStyle\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"names":["React","useEffect","useImperativeHandle","useRef","clsx","warnOnce","getAnalyticsMetadataAttribute","InternalBox","InternalButton","useFunnel","getBaseProps","Dropdown","OptionsList","useMobile","useUniqueId","useVisualRefresh","isDevelopment","spinWhenOpen","checkSafeUrl","ItemsList","useButtonDropdown","isLinkItem","analyticsSelectors","styles","InternalButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","disabledReason","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","mainAction","showMainActionOnly","__internalRootRef","analyticsMetadataTransformer","linkStyle","fullWidth","props","__rest","isInRestrictedView","dropdownId","item","href","isMainAction","isVisualRefresh","isOpen","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","closeDropdown","setIsUsingMouse","onReturnFocus","triggerRef","current","focus","preventScroll","hasExpandableGroups","handleMouseEvent","baseProps","mainActionRef","args","focusDropdownTrigger","clickHandler","moveHighlightOnOpen","canBeOpened","canBeFullWidth","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","baseTriggerProps","Object","assign","className","onClick","event","preventDefault","ariaExpanded","formAction","__nativeAttributes","triggerId","triggerHasBadge","flatItems","flatMap","find","badge","trigger","analyticsMetadata","action","detail","label","createElement","testUtilsClass","text","iconAlt","iconSvg","iconUrl","external","externalIconAriaLabel","mainActionProps","mainActionIconProps","target","rel","mainActionAriaLabel","_b","hasNoText","mainActionButton","role","e","stopPropagation","__emitPerformanceMarks","id","hasHeader","headerId","shouldLabelWithTrigger","loadingButtonCount","onMouseDown","onMouseMove","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","fontSize","fontWeight","color","tagOverride","margin","vertical","horizontal","position","decreaseBlockMargin","ariaLabelledby","statusType","lastInDropdown"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton, InternalButtonProps } from '../button/internal';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nimport { getBaseProps } from '../internal/base-component';\nimport Dropdown from '../internal/components/dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { spinWhenOpen } from '../internal/styles/motion/utils';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport {\n  GeneratedAnalyticsMetadataButtonDropdownCollapse,\n  GeneratedAnalyticsMetadataButtonDropdownExpand,\n} from './analytics-metadata/interfaces.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport { isLinkItem } from './utils/utils.js';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      showMainActionOnly,\n      __internalRootRef,\n      analyticsMetadataTransformer,\n      linkStyle,\n      fullWidth,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      if (isLinkItem(item)) {\n        checkSafeUrl('ButtonDropdown', item.href);\n      }\n    }\n    if (mainAction) {\n      checkSafeUrl('ButtonDropdown', mainAction.href);\n    }\n\n    if (isDevelopment) {\n      if (mainAction && variant !== 'primary' && variant !== 'normal') {\n        warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n      }\n    }\n    const isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n    const isVisualRefresh = useVisualRefresh();\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      closeDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      // Scroll is unnecessary when moving focus back to the dropdown trigger.\n      onReturnFocus: () => triggerRef.current?.focus({ preventScroll: true }),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const mainActionRef = useRef<HTMLElement>(null);\n    const triggerRef = useRef<HTMLElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args) {\n          (isMainAction ? mainActionRef : triggerRef).current?.focus(...args);\n        },\n        focusDropdownTrigger(...args) {\n          triggerRef.current?.focus(...args);\n        },\n      }),\n      [mainActionRef, triggerRef, isMainAction]\n    );\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const canBeFullWidth = !!fullWidth && (variant === 'primary' || variant === 'normal');\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon' || variant === 'inline-icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: spinWhenOpen(styles, 'rotate', canBeOpened && isOpen),\n          };\n\n    const baseTriggerProps: InternalButtonProps = {\n      className: clsx(\n        styles['trigger-button'],\n        styles['test-utils-button-trigger'],\n        analyticsSelectors['trigger-label']\n      ),\n      ...iconProps,\n      variant: triggerVariant,\n      loading,\n      loadingText,\n      disabled,\n      disabledReason,\n      onClick: (event: Event) => {\n        event.preventDefault();\n        clickHandler();\n      },\n      ariaLabel,\n      ariaExpanded: canBeOpened && isOpen,\n      formAction: 'none',\n      __nativeAttributes: {\n        'aria-haspopup': true,\n      },\n    };\n\n    const triggerId = useUniqueId('awsui-button-dropdown__trigger');\n\n    const triggerHasBadge = () => {\n      const flatItems = items.flatMap(item => {\n        if ('items' in item) {\n          return item.items;\n        }\n        return item;\n      });\n\n      return (\n        variant === 'icon' &&\n        !!flatItems?.find(item => {\n          if ('badge' in item) {\n            return item.badge;\n          }\n        })\n      );\n    };\n\n    let trigger: React.ReactNode = null;\n\n    const analyticsMetadata:\n      | GeneratedAnalyticsMetadataButtonDropdownExpand\n      | GeneratedAnalyticsMetadataButtonDropdownCollapse\n      | Record<string, never> = disabled\n      ? {}\n      : {\n          action: !isOpen ? 'expand' : 'collapse',\n          detail: {\n            label: `.${analyticsSelectors['trigger-label']}`,\n          },\n        };\n\n    if (customTriggerBuilder) {\n      trigger = (\n        <div className={styles['dropdown-trigger']} {...getAnalyticsMetadataAttribute(analyticsMetadata)}>\n          {customTriggerBuilder({\n            testUtilsClass: styles['test-utils-button-trigger'],\n            ariaExpanded: canBeOpened && isOpen,\n            onClick: clickHandler,\n            triggerRef,\n            ariaLabel,\n            disabled,\n            disabledReason,\n            isOpen,\n          })}\n        </div>\n      );\n    } else if (isMainAction) {\n      const { text, iconName, iconAlt, iconSvg, iconUrl, external, externalIconAriaLabel, ...mainActionProps } =\n        mainAction;\n      const mainActionIconProps = external\n        ? ({ iconName: 'external', iconAlign: 'right', target: '_blank', rel: 'noopener noreferrer' } as const)\n        : ({ iconName, iconAlt, iconSvg, iconUrl } as const);\n      const mainActionAriaLabel = externalIconAriaLabel\n        ? `${mainAction.ariaLabel ?? mainAction.text} ${mainAction.externalIconAriaLabel}`\n        : mainAction.ariaLabel;\n      const hasNoText = !text;\n      const mainActionButton = (\n        <InternalButton\n          ref={mainActionRef}\n          {...mainActionProps}\n          {...mainActionIconProps}\n          fullWidth={canBeFullWidth}\n          className={clsx(\n            styles['trigger-button'],\n            hasNoText && styles['has-no-text'],\n            isVisualRefresh && styles['visual-refresh'],\n            canBeFullWidth && styles['main-action-full-width']\n          )}\n          variant={variant}\n          ariaLabel={mainActionAriaLabel}\n          formAction=\"none\"\n        >\n          {text}\n        </InternalButton>\n      );\n      trigger = (\n        <div role=\"group\" aria-label={ariaLabel} className={styles['split-trigger-wrapper']}>\n          <div\n            className={clsx(\n              styles['trigger-item'],\n              styles['split-trigger'],\n              styles[`variant-${variant}`],\n              mainActionProps.disabled && styles.disabled,\n              mainActionProps.loading && styles.loading\n            )}\n            // Close dropdown upon main action click unless event is cancelled.\n            onClick={closeDropdown}\n            // Prevent keyboard events from propagation to the button dropdown handler.\n            onKeyDown={e => e.stopPropagation()}\n            onKeyUp={e => e.stopPropagation()}\n            {...getAnalyticsMetadataAttribute({\n              action: 'click',\n              detail: {\n                label: `.${analyticsSelectors['main-action-label']}`,\n              },\n            })}\n          >\n            {mainActionButton}\n          </div>\n          {!showMainActionOnly && (\n            <div\n              className={clsx(\n                styles['trigger-item'],\n                styles['dropdown-trigger'],\n                isVisualRefresh && styles['visual-refresh'],\n                styles[`variant-${variant}`],\n                baseTriggerProps.disabled && styles.disabled,\n                baseTriggerProps.loading && styles.loading\n              )}\n              {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n            >\n              <InternalButton\n                ref={triggerRef}\n                {...baseTriggerProps}\n                className={clsx(baseTriggerProps.className, {\n                  [styles['main-action-trigger-full-width']]: canBeFullWidth,\n                })}\n                __emitPerformanceMarks={false}\n              >\n                {children}\n              </InternalButton>\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      trigger = (\n        <div className={styles['dropdown-trigger']} {...getAnalyticsMetadataAttribute(analyticsMetadata)}>\n          <InternalButton\n            ref={triggerRef}\n            id={triggerId}\n            {...baseTriggerProps}\n            className={clsx(baseTriggerProps.className, {\n              [styles['full-width']]: canBeFullWidth,\n              [styles.loading]: canBeFullWidth && !!loading,\n            })}\n            badge={triggerHasBadge()}\n            fullWidth={fullWidth}\n          >\n            {children}\n          </InternalButton>\n        </div>\n      );\n    }\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(\n          styles['button-dropdown'],\n          styles[`variant-${variant}`],\n          canBeFullWidth && styles['full-width'],\n          baseProps.className\n        )}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <div className={styles.title}>\n                  <InternalBox\n                    fontSize=\"heading-s\"\n                    fontWeight=\"bold\"\n                    color=\"inherit\"\n                    tagOverride=\"h2\"\n                    margin={{ vertical: 'n', horizontal: 'n' }}\n                  >\n                    {title}\n                  </InternalBox>\n                </div>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseBlockMargin={true}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined}\n            statusType=\"finished\"\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              lastInDropdown={true}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n              analyticsMetadataTransformer={analyticsMetadataTransformer}\n              linkStyle={linkStyle}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}