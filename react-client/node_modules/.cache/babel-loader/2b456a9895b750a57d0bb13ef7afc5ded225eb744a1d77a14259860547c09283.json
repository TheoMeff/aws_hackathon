{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/components/meter.js\";\nimport React from 'react';\nimport './meter.css';\nimport { Icon, Button, Modal, Box, SpaceBetween, Link, ColumnLayout } from '@cloudscape-design/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Meter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Tokens\n      totalInputSpeechToken: 0,\n      totalInputTextToken: 0,\n      totalOutputSpeechToken: 0,\n      totalOutputTextToken: 0,\n      // Cost\n      totalInputSpeechCost: 0,\n      totalInputTextCost: 0,\n      totalOutputSpeechCost: 0,\n      totalOutputTextCost: 0,\n      showMeterDetail: false,\n      startTime: null,\n      elapsed: 0,\n      elapsedDisplay: \"0s\"\n    };\n    this.sonicPrice = {\n      inputSpeech: 0.0034,\n      inputText: 0.00006,\n      outputSpeech: 0.0136,\n      outputText: 0.00024\n    };\n    this.intervalId = null;\n  }\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      if (this.state.startTime) {\n        const elapsed = Date.now() - this.state.startTime;\n        this.setState({\n          elapsed: elapsed,\n          elapsedDisplay: this.displayElapsed(elapsed)\n        });\n      }\n    }, 500);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  updateMeter(message) {\n    var _message$event;\n    if (message !== null && message !== void 0 && (_message$event = message.event) !== null && _message$event !== void 0 && _message$event.usageEvent) {\n      var _usage$details, _usage$details$total, _usage$details2, _usage$details2$total;\n      const usage = message.event.usageEvent;\n      const input = (_usage$details = usage.details) === null || _usage$details === void 0 ? void 0 : (_usage$details$total = _usage$details.total) === null || _usage$details$total === void 0 ? void 0 : _usage$details$total.input;\n      if (input) {\n        input.speechTokens && this.setState({\n          totalInputSpeechToken: input.speechTokens,\n          totalInputSpeechCost: input.speechTokens / 1000 * this.sonicPrice.inputSpeech\n        });\n        input.textTokens && this.setState({\n          totalInputTextToken: input.textTokens,\n          totalInputTextCost: input.textTokens / 1000 * this.sonicPrice.inputText\n        });\n      }\n      const output = (_usage$details2 = usage.details) === null || _usage$details2 === void 0 ? void 0 : (_usage$details2$total = _usage$details2.total) === null || _usage$details2$total === void 0 ? void 0 : _usage$details2$total.output;\n      if (output) {\n        output.speechTokens && this.setState({\n          totalOutputSpeechToken: output.speechTokens,\n          totalOutputSpeechCost: output.speechTokens / 1000 * this.sonicPrice.outputSpeech\n        });\n        output.textTokens && this.setState({\n          totalOutputTextToken: output.textTokens,\n          totalOutputTextCost: output.textTokens / 1000 * this.sonicPrice.outputText\n        });\n      }\n    }\n  }\n  formatCurrency(value, locale = 'en-US', currency = 'USD') {\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency\n    }).format(value);\n  }\n  start() {\n    this.cleanup();\n    this.setState({\n      startTime: new Date()\n    });\n  }\n  stop() {\n    this.setState({\n      startTime: null\n    });\n  }\n  cleanup() {\n    this.setState({\n      totalInputSpeechToken: 0,\n      totalInputTextToken: 0,\n      totalOutputSpeechToken: 0,\n      totalOutputTextToken: 0,\n      // Cost\n      totalInputSpeechCost: 0,\n      totalInputTextCost: 0,\n      totalOutputSpeechCost: 0,\n      totalOutputTextCost: 0,\n      startTime: null,\n      elapsed: 0,\n      elapsedDisplay: null\n    });\n  }\n  displayElapsed(elapsed) {\n    if (elapsed > 0) {\n      const hours = Math.floor(elapsed / (1000 * 60 * 60));\n      elapsed %= 1000 * 60 * 60;\n      const minutes = Math.floor(elapsed / (1000 * 60));\n      elapsed %= 1000 * 60;\n      const seconds = Math.floor(elapsed / 1000);\n      const milliseconds = elapsed % 1000;\n      let parts = [];\n      if (hours > 0) parts.push(`${hours}h`);\n      if (minutes > 0 || hours > 0) parts.push(`${minutes}m`); // show minutes if hours is shown\n\n      parts.push(`${seconds}.${milliseconds}s`);\n      return parts.join(' ');\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meter\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Session time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), \": \", this.state.elapsedDisplay, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Total tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), \": \", (this.state.totalInputSpeechToken + this.state.totalInputTextToken + this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString(), \"\\xA0 (\", this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost + this.state.totalOutputTextCost + this.state.totalOutputSpeechCost), \") \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => {\n          this.setState({\n            showMeterDetail: true\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        onDismiss: () => this.setState({\n          showMeterDetail: false\n        }),\n        visible: this.state.showMeterDetail,\n        header: \"Total tokens and cost\",\n        size: \"large\",\n        footer: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [\"Price per 1,000 tokens \\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n            external: true,\n            href: \"https://aws.amazon.com/bedrock/pricing/\",\n            variant: \"primary\",\n            children: \"Amazon Bedrock Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Input Speech: $\", this.sonicPrice.inputSpeech]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Input Text: $\", this.sonicPrice.inputText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Output Speech: $\", this.sonicPrice.outputSpeech]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Output Text: $\", this.sonicPrice.outputText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meterdetail\",\n          children: /*#__PURE__*/_jsxDEV(ColumnLayout, {\n            columns: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total: \", (this.state.totalInputSpeechToken + this.state.totalInputTextToken + this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString(), \"\\xA0 (\", this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost + this.state.totalOutputTextCost + this.state.totalOutputSpeechCost), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total input: \", (this.state.totalInputSpeechToken + this.state.totalInputTextToken).toLocaleString(), \" (\", this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost), \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 221\n              }, this), \"Total output: \", (this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString(), \"  (\", this.formatCurrency(this.state.totalOutputTextCost + this.state.totalOutputSpeechCost), \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 227\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total input speech: \", this.state.totalInputSpeechToken.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total input text: \", this.state.totalInputTextToken.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total output speech: \", this.state.totalOutputSpeechToken.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Total output text: \", this.state.totalOutputTextToken.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Meter;","map":{"version":3,"names":["React","Icon","Button","Modal","Box","SpaceBetween","Link","ColumnLayout","jsxDEV","_jsxDEV","Meter","Component","constructor","props","state","totalInputSpeechToken","totalInputTextToken","totalOutputSpeechToken","totalOutputTextToken","totalInputSpeechCost","totalInputTextCost","totalOutputSpeechCost","totalOutputTextCost","showMeterDetail","startTime","elapsed","elapsedDisplay","sonicPrice","inputSpeech","inputText","outputSpeech","outputText","intervalId","componentDidMount","setInterval","Date","now","setState","displayElapsed","componentWillUnmount","clearInterval","updateMeter","message","_message$event","event","usageEvent","_usage$details","_usage$details$total","_usage$details2","_usage$details2$total","usage","input","details","total","speechTokens","textTokens","output","formatCurrency","value","locale","currency","Intl","NumberFormat","style","format","start","cleanup","stop","hours","Math","floor","minutes","seconds","milliseconds","parts","push","join","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","name","onDismiss","visible","header","size","footer","external","href","variant","columns"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/components/meter.js"],"sourcesContent":["import React from 'react';\nimport './meter.css'\nimport { Icon, Button, Modal, Box, SpaceBetween, Link, ColumnLayout } from '@cloudscape-design/components';\n\nclass Meter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Tokens\n            totalInputSpeechToken: 0,\n            totalInputTextToken: 0,\n            totalOutputSpeechToken: 0,\n            totalOutputTextToken: 0,\n\n            // Cost\n            totalInputSpeechCost: 0,\n            totalInputTextCost: 0,\n            totalOutputSpeechCost: 0,\n            totalOutputTextCost: 0,\n\n            showMeterDetail: false,\n\n            startTime: null,\n            elapsed: 0,\n            elapsedDisplay: \"0s\",\n        };\n        this.sonicPrice = {\n            inputSpeech: 0.0034,\n            inputText: 0.00006,\n            outputSpeech: 0.0136,\n            outputText: 0.00024\n        };\n        this.intervalId = null;\n    }\n        \n    componentDidMount() {\n        this.intervalId = setInterval(() => {\n            if (this.state.startTime) {\n                const elapsed = Date.now() - this.state.startTime;\n                this.setState({ \n                    elapsed: elapsed,\n                    elapsedDisplay: this.displayElapsed(elapsed)\n                });\n            }\n        }, 500);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    updateMeter (message) {\n        if (message?.event?.usageEvent) {\n            const usage = message.event.usageEvent;\n\n            const input = usage.details?.total?.input;\n            if (input) {\n                input.speechTokens && this.setState({\n                    totalInputSpeechToken: input.speechTokens,\n                    totalInputSpeechCost: input.speechTokens/1000*this.sonicPrice.inputSpeech\n                });\n                input.textTokens && this.setState({\n                    totalInputTextToken: input.textTokens,\n                    totalInputTextCost: input.textTokens/1000*this.sonicPrice.inputText\n                });\n            }\n\n            const output = usage.details?.total?.output;\n            if (output) {\n                output.speechTokens && this.setState({\n                    totalOutputSpeechToken: output.speechTokens,\n                    totalOutputSpeechCost: output.speechTokens/1000*this.sonicPrice.outputSpeech,\n                });\n                output.textTokens && this.setState({\n                    totalOutputTextToken: output.textTokens,\n                    totalOutputTextCost: output.textTokens/1000*this.sonicPrice.outputText\n                });\n            }\n        }\n    }\n\n    formatCurrency(value, locale = 'en-US', currency = 'USD') {\n        return new Intl.NumberFormat(locale, {\n            style: 'currency',\n            currency: currency,\n        }).format(value);\n    }\n\n    start() {\n        this.cleanup();\n        this.setState({startTime: new Date()});\n    }\n\n    stop() {\n        this.setState({startTime: null});\n    }\n\n    cleanup() {\n        this.setState({\n            totalInputSpeechToken: 0,\n            totalInputTextToken: 0,\n            totalOutputSpeechToken: 0,\n            totalOutputTextToken: 0,\n\n            // Cost\n            totalInputSpeechCost: 0,\n            totalInputTextCost: 0,\n            totalOutputSpeechCost: 0,\n            totalOutputTextCost: 0,\n\n            startTime: null,\n            elapsed: 0,\n            elapsedDisplay: null,\n        })\n    }\n\n    displayElapsed(elapsed) {\n        if (elapsed > 0) {\n            const hours = Math.floor(elapsed / (1000 * 60 * 60));\n            elapsed %= (1000 * 60 * 60);\n\n            const minutes = Math.floor(elapsed / (1000 * 60));\n            elapsed %= (1000 * 60);\n\n            const seconds = Math.floor(elapsed / 1000);\n            const milliseconds = elapsed % 1000;\n\n            let parts = [];\n\n            if (hours > 0) parts.push(`${hours}h`);\n            if (minutes > 0 || hours > 0) parts.push(`${minutes}m`); // show minutes if hours is shown\n\n            parts.push(`${seconds}.${milliseconds}s`);\n\n            return parts.join(' ');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"meter\">\n                <b>Session time</b>: {this.state.elapsedDisplay}<br/>\n                <b>Total tokens</b>: {(this.state.totalInputSpeechToken + this.state.totalInputTextToken + this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString()} \n                &nbsp; ({this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost + this.state.totalOutputTextCost + this.state.totalOutputSpeechCost)})\n                &nbsp;&nbsp;<Link onClick={()=>{this.setState({showMeterDetail: true})}}><Icon name=\"support\" /></Link>\n                <Modal\n                    onDismiss={() => this.setState({showMeterDetail: false})}\n                    visible={this.state.showMeterDetail}\n                    header=\"Total tokens and cost\"\n                    size='large'\n                    footer={\n                        <div className='footer'>\n                            Price per 1,000 tokens &nbsp;&nbsp;&nbsp; \n                            <Link\n                                external\n                                href=\"https://aws.amazon.com/bedrock/pricing/\"\n                                variant=\"primary\"\n                                >\n                                Amazon Bedrock Pricing\n                            </Link>\n                            <div className='price'>\n                                <div>\n                                    Input Speech: ${this.sonicPrice.inputSpeech}\n                                </div>\n                                <div>\n                                    Input Text: ${this.sonicPrice.inputText}\n                                </div>\n                                <div>\n                                    Output Speech: ${this.sonicPrice.outputSpeech}\n                                </div>\n                                <div>\n                                    Output Text: ${this.sonicPrice.outputText}      \n                                </div>\n                            </div>\n                        </div>\n                    }\n                >\n                    <div className='meterdetail'>\n                        <ColumnLayout columns={2}>\n                            <div>\n                                Total: {(this.state.totalInputSpeechToken + this.state.totalInputTextToken + this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString()}\n                                &nbsp; ({this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost + this.state.totalOutputTextCost + this.state.totalOutputSpeechCost)})\n                            </div>\n                            <div>\n                                Total input: {(this.state.totalInputSpeechToken + this.state.totalInputTextToken).toLocaleString()} ({this.formatCurrency(this.state.totalInputTextCost + this.state.totalInputSpeechCost)})<br/>\n                                Total output: {(this.state.totalOutputSpeechToken + this.state.totalOutputTextToken).toLocaleString()}  ({this.formatCurrency(this.state.totalOutputTextCost + this.state.totalOutputSpeechCost)})<br/>\n                            </div>\n                            <div>\n                                Total input speech: {this.state.totalInputSpeechToken.toLocaleString()}\n                            </div>\n                            <div>\n                                Total input text: {this.state.totalInputTextToken.toLocaleString()}\n                            </div>\n                            <div>\n                                Total output speech: {this.state.totalOutputSpeechToken.toLocaleString()}\n                            </div>\n                            <div>\n                                Total output text: {this.state.totalOutputTextToken.toLocaleString()}\n                            </div>\n                        </ColumnLayout>\n                    </div>\n                </Modal>\n                \n            </div>\n        );\n    }\n}\n\nexport default Meter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}