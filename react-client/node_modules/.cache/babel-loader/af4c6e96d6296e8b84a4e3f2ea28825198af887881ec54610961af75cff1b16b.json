{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { useDebounceCallback } from '../internal/hooks/use-debounce-callback';\n// Debounce delay for live region (based on testing with VoiceOver)\nconst LIVE_REGION_DELAY = 2000;\nexport default function useDebounceSearchResultCallback({\n  searchQuery,\n  countText,\n  loading,\n  announceCallback\n}) {\n  const loadingRef = useRef(loading);\n  // announceCallback is called when:\n  // - For sync filters: on searchQuery/countText changes.\n  // - For async filters: on searchQuery/countText when loading completed and countText exists.\n  const debounceLiveAnnouncement = useDebounceCallback(() => {\n    if (!countText || loadingRef.current) {\n      return;\n    }\n    announceCallback();\n  }, LIVE_REGION_DELAY);\n  useEffect(() => {\n    loadingRef.current = loading;\n    debounceLiveAnnouncement();\n  }, [searchQuery, countText, loading, debounceLiveAnnouncement]);\n}","map":{"version":3,"names":["useEffect","useRef","useDebounceCallback","LIVE_REGION_DELAY","useDebounceSearchResultCallback","searchQuery","countText","loading","announceCallback","loadingRef","debounceLiveAnnouncement","current"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/text-filter/use-debounce-search-result-callback.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\n\nimport { useDebounceCallback } from '../internal/hooks/use-debounce-callback';\n\nexport interface DebouncedLiveAnnouncementProps {\n  searchQuery: any;\n  countText: string | undefined;\n  loading: boolean;\n  announceCallback: () => void;\n}\n\n// Debounce delay for live region (based on testing with VoiceOver)\nconst LIVE_REGION_DELAY = 2000;\n\nexport default function useDebounceSearchResultCallback({\n  searchQuery,\n  countText,\n  loading,\n  announceCallback,\n}: DebouncedLiveAnnouncementProps) {\n  const loadingRef = useRef(loading);\n\n  // announceCallback is called when:\n  // - For sync filters: on searchQuery/countText changes.\n  // - For async filters: on searchQuery/countText when loading completed and countText exists.\n  const debounceLiveAnnouncement = useDebounceCallback(() => {\n    if (!countText || loadingRef.current) {\n      return;\n    }\n    announceCallback();\n  }, LIVE_REGION_DELAY);\n\n  useEffect(() => {\n    loadingRef.current = loading;\n    debounceLiveAnnouncement();\n  }, [searchQuery, countText, loading, debounceLiveAnnouncement]);\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,mBAAmB,QAAQ,yCAAyC;AAS7E;AACA,MAAMC,iBAAiB,GAAG,IAAI;AAE9B,eAAc,SAAUC,+BAA+BA,CAAC;EACtDC,WAAW;EACXC,SAAS;EACTC,OAAO;EACPC;AAAgB,CACe;EAC/B,MAAMC,UAAU,GAAGR,MAAM,CAACM,OAAO,CAAC;EAElC;EACA;EACA;EACA,MAAMG,wBAAwB,GAAGR,mBAAmB,CAAC,MAAK;IACxD,IAAI,CAACI,SAAS,IAAIG,UAAU,CAACE,OAAO,EAAE;MACpC;;IAEFH,gBAAgB,EAAE;EACpB,CAAC,EAAEL,iBAAiB,CAAC;EAErBH,SAAS,CAAC,MAAK;IACbS,UAAU,CAACE,OAAO,GAAGJ,OAAO;IAC5BG,wBAAwB,EAAE;EAC5B,CAAC,EAAE,CAACL,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEG,wBAAwB,CAAC,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}