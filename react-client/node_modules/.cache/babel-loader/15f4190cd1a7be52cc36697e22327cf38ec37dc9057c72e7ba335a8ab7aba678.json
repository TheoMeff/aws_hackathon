{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nfunction firstEnabledTab(tabs) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\nfunction shouldRenderTabContent(tab, viewedTabs) {\n  switch (tab.contentRenderStrategy) {\n    case 'active':\n      return false;\n    // rendering active tab is handled directly in component\n    case 'eager':\n      return true;\n    case 'lazy':\n      return viewedTabs.has(tab.id);\n  }\n  return false;\n}\nexport default function Tabs(_a) {\n  var _b, _c;\n  var {\n      tabs,\n      variant = 'default',\n      onChange,\n      activeTabId: controlledTabId,\n      ariaLabel,\n      ariaLabelledby,\n      disableContentPaddings = false,\n      i18nStrings,\n      fitHeight,\n      keyboardActivationMode = 'automatic',\n      actions\n    } = _a,\n    rest = __rest(_a, [\"tabs\", \"variant\", \"onChange\", \"activeTabId\", \"ariaLabel\", \"ariaLabelledby\", \"disableContentPaddings\", \"i18nStrings\", \"fitHeight\", \"keyboardActivationMode\", \"actions\"]);\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const {\n    __internalRootRef\n  } = useBaseComponent('Tabs', {\n    props: {\n      disableContentPaddings,\n      variant,\n      fitHeight,\n      keyboardActivationMode\n    },\n    metadata: {\n      hasActions: tabs.some(tab => !!tab.action),\n      hasHeaderActions: !!actions,\n      hasDisabledReasons: tabs.some(tab => !!tab.disabledReason),\n      hasEagerLoadedTabs: tabs.some(tab => tab.contentRenderStrategy === 'eager'),\n      hasLazyLoadedTabs: tabs.some(tab => tab.contentRenderStrategy === 'lazy')\n    }\n  });\n  const idNamespace = useUniqueId('awsui-tabs-');\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, (_c = (_b = firstEnabledTab(tabs)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange'\n  });\n  const viewedTabs = useRef(new Set());\n  if (activeTabId !== undefined) {\n    viewedTabs.current.add(activeTabId);\n  }\n  const baseProps = getBaseProps(rest);\n  const analyticsComponentMetadata = {\n    name: 'awsui.Tabs',\n    label: `.${analyticsSelectors['tabs-header-list']}`\n  };\n  if (activeTabId) {\n    analyticsComponentMetadata.properties = {\n      activeTabId,\n      activeTabLabel: `.${analyticsSelectors['active-tab-header']} .${analyticsSelectors['tab-label']}`,\n      activeTabPosition: `${tabs.findIndex(tab => tab.id === activeTabId) + 1}`,\n      tabsCount: `${tabs.length}`\n    };\n  }\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = tab => {\n      const isTabSelected = tab === selectedTab;\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isTabSelected\n      });\n      const contentAttributes = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({\n          namespace: idNamespace,\n          tabId: tab.id\n        })\n      };\n      const isContentShown = !tab.disabled && (isTabSelected || shouldRenderTabContent(tab, viewedTabs.current));\n      return React.createElement(\"div\", Object.assign({}, contentAttributes), isContentShown && tab.content);\n    };\n    return React.createElement(\"div\", {\n      className: clsx(variant === 'container' || variant === 'stacked' ? styles['tabs-container-content-wrapper'] : styles['tabs-content-wrapper'], {\n        [styles['with-paddings']]: !disableContentPaddings\n      })\n    }, tabs.map(renderContent));\n  };\n  const header = React.createElement(TabHeaderBar, {\n    activeTabId: activeTabId,\n    variant: variant,\n    idNamespace: idNamespace,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    tabs: tabs,\n    actions: actions,\n    onChange: changeDetail => {\n      setActiveTabId(changeDetail.activeTabId);\n      fireNonCancelableEvent(onChange, changeDetail);\n    },\n    i18nStrings: i18nStrings,\n    keyboardActivationMode: keyboardActivationMode\n  });\n  if (variant === 'container' || variant === 'stacked') {\n    return React.createElement(InternalContainer, Object.assign({\n      header: header,\n      disableHeaderPaddings: true\n    }, baseProps, {\n      className: clsx(baseProps.className, styles.root),\n      __internalRootRef: __internalRootRef,\n      disableContentPaddings: true,\n      variant: variant === 'stacked' ? 'stacked' : 'default',\n      fitHeight: fitHeight\n    }, getAnalyticsMetadataAttribute({\n      component: analyticsComponentMetadata\n    })), content());\n  }\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root, styles.tabs, {\n      [styles['fit-height']]: fitHeight\n    }),\n    ref: __internalRootRef\n  }, getAnalyticsMetadataAttribute({\n    component: analyticsComponentMetadata\n  })), header, content());\n}\napplyDisplayName(Tabs, 'Tabs');","map":{"version":3,"names":["React","useRef","clsx","getAnalyticsMetadataAttribute","InternalContainer","getBaseProps","fireNonCancelableEvent","useBaseComponent","useControllable","useUniqueId","applyDisplayName","checkSafeUrl","getTabElementId","TabHeaderBar","analyticsSelectors","styles","firstEnabledTab","tabs","enabledTabs","filter","tab","disabled","length","shouldRenderTabContent","viewedTabs","contentRenderStrategy","has","id","Tabs","_a","variant","onChange","activeTabId","controlledTabId","ariaLabel","ariaLabelledby","disableContentPaddings","i18nStrings","fitHeight","keyboardActivationMode","actions","rest","__rest","href","__internalRootRef","props","metadata","hasActions","some","action","hasHeaderActions","hasDisabledReasons","disabledReason","hasEagerLoadedTabs","hasLazyLoadedTabs","idNamespace","setActiveTabId","_c","_b","componentName","controlledProp","changeHandler","Set","undefined","current","add","baseProps","analyticsComponentMetadata","name","label","properties","activeTabLabel","activeTabPosition","findIndex","tabsCount","content","selectedTab","renderContent","isTabSelected","classes","contentAttributes","className","role","key","tabIndex","namespace","tabId","isContentShown","createElement","Object","assign","map","header","changeDetail","disableHeaderPaddings","root","component","ref"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/tabs/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { GeneratedAnalyticsMetadataTabsComponent } from './analytics-metadata/interfaces';\nimport { TabsProps } from './interfaces';\nimport { getTabElementId, TabHeaderBar } from './tab-header-bar';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport { TabsProps };\n\nfunction firstEnabledTab(tabs: ReadonlyArray<TabsProps.Tab>) {\n  const enabledTabs = tabs.filter(tab => !tab.disabled);\n  if (enabledTabs.length > 0) {\n    return enabledTabs[0];\n  }\n  return null;\n}\n\nfunction shouldRenderTabContent(tab: TabsProps.Tab, viewedTabs: Set<string>) {\n  switch (tab.contentRenderStrategy) {\n    case 'active':\n      return false; // rendering active tab is handled directly in component\n    case 'eager':\n      return true;\n    case 'lazy':\n      return viewedTabs.has(tab.id);\n  }\n  return false;\n}\n\nexport default function Tabs({\n  tabs,\n  variant = 'default',\n  onChange,\n  activeTabId: controlledTabId,\n  ariaLabel,\n  ariaLabelledby,\n  disableContentPaddings = false,\n  i18nStrings,\n  fitHeight,\n  keyboardActivationMode = 'automatic',\n  actions,\n  ...rest\n}: TabsProps) {\n  for (const tab of tabs) {\n    checkSafeUrl('Tabs', tab.href);\n  }\n  const { __internalRootRef } = useBaseComponent('Tabs', {\n    props: { disableContentPaddings, variant, fitHeight, keyboardActivationMode },\n    metadata: {\n      hasActions: tabs.some(tab => !!tab.action),\n      hasHeaderActions: !!actions,\n      hasDisabledReasons: tabs.some(tab => !!tab.disabledReason),\n      hasEagerLoadedTabs: tabs.some(tab => tab.contentRenderStrategy === 'eager'),\n      hasLazyLoadedTabs: tabs.some(tab => tab.contentRenderStrategy === 'lazy'),\n    },\n  });\n  const idNamespace = useUniqueId('awsui-tabs-');\n\n  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, firstEnabledTab(tabs)?.id ?? '', {\n    componentName: 'Tabs',\n    controlledProp: 'activeTabId',\n    changeHandler: 'onChange',\n  });\n\n  const viewedTabs = useRef(new Set<string>());\n  if (activeTabId !== undefined) {\n    viewedTabs.current.add(activeTabId);\n  }\n\n  const baseProps = getBaseProps(rest);\n\n  const analyticsComponentMetadata: GeneratedAnalyticsMetadataTabsComponent = {\n    name: 'awsui.Tabs',\n    label: `.${analyticsSelectors['tabs-header-list']}`,\n  };\n\n  if (activeTabId) {\n    analyticsComponentMetadata.properties = {\n      activeTabId,\n      activeTabLabel: `.${analyticsSelectors['active-tab-header']} .${analyticsSelectors['tab-label']}`,\n      activeTabPosition: `${tabs.findIndex(tab => tab.id === activeTabId) + 1}`,\n      tabsCount: `${tabs.length}`,\n    };\n  }\n\n  const content = () => {\n    const selectedTab = tabs.filter(tab => tab.id === activeTabId)[0];\n    const renderContent = (tab: TabsProps.Tab) => {\n      const isTabSelected = tab === selectedTab;\n\n      const classes = clsx({\n        [styles['tabs-content']]: true,\n        [styles['tabs-content-active']]: isTabSelected,\n      });\n\n      const contentAttributes: JSX.IntrinsicElements['div'] = {\n        className: classes,\n        role: 'tabpanel',\n        id: `${idNamespace}-${tab.id}-panel`,\n        key: `${idNamespace}-${tab.id}-panel`,\n        tabIndex: 0,\n        'aria-labelledby': getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      };\n\n      const isContentShown = !tab.disabled && (isTabSelected || shouldRenderTabContent(tab, viewedTabs.current));\n\n      return <div {...contentAttributes}>{isContentShown && tab.content}</div>;\n    };\n\n    return (\n      <div\n        className={clsx(\n          variant === 'container' || variant === 'stacked'\n            ? styles['tabs-container-content-wrapper']\n            : styles['tabs-content-wrapper'],\n          {\n            [styles['with-paddings']]: !disableContentPaddings,\n          }\n        )}\n      >\n        {tabs.map(renderContent)}\n      </div>\n    );\n  };\n\n  const header = (\n    <TabHeaderBar\n      activeTabId={activeTabId}\n      variant={variant}\n      idNamespace={idNamespace}\n      ariaLabel={ariaLabel}\n      ariaLabelledby={ariaLabelledby}\n      tabs={tabs}\n      actions={actions}\n      onChange={changeDetail => {\n        setActiveTabId(changeDetail.activeTabId);\n        fireNonCancelableEvent(onChange, changeDetail);\n      }}\n      i18nStrings={i18nStrings}\n      keyboardActivationMode={keyboardActivationMode}\n    />\n  );\n\n  if (variant === 'container' || variant === 'stacked') {\n    return (\n      <InternalContainer\n        header={header}\n        disableHeaderPaddings={true}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        __internalRootRef={__internalRootRef}\n        disableContentPaddings={true}\n        variant={variant === 'stacked' ? 'stacked' : 'default'}\n        fitHeight={fitHeight}\n        {...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata })}\n      >\n        {content()}\n      </InternalContainer>\n    );\n  }\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root, styles.tabs, { [styles['fit-height']]: fitHeight })}\n      ref={__internalRootRef}\n      {...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata })}\n    >\n      {header}\n      {content()}\n    </div>\n  );\n}\n\napplyDisplayName(Tabs, 'Tabs');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}