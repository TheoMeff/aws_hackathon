{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport InternalAlert from '../alert/internal';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport InternalLiveRegion from '../live-region/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport Calendar from './calendar';\nimport ModeSwitcher from './mode-switcher';\nimport RelativeRangePicker from './relative-range';\nimport { normalizeTimeOffset } from './time-offset';\nimport { formatValue, getDefaultMode, joinAbsoluteValue, splitAbsoluteValue } from './utils';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nconst VALID_RANGE = {\n  valid: true\n};\nexport function DateRangePickerDropdown({\n  locale = '',\n  startOfWeek,\n  isDateEnabled,\n  dateDisabledReason = () => '',\n  isValidRange,\n  value,\n  onClear: clearValue,\n  onApply: applyValue,\n  getTimeOffset,\n  timeOffset,\n  onDropdownClose,\n  relativeOptions,\n  showClearButton,\n  isSingleGrid,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n  rangeSelectorMode,\n  ariaLabelledby,\n  ariaDescribedby,\n  customAbsoluteRangeControl,\n  customRelativeRangeUnits,\n  granularity = 'day'\n}) {\n  const i18n = useInternalI18n('date-range-picker');\n  const isMonthPicker = granularity === 'month';\n  const hideTime = dateOnly || isMonthPicker;\n  const liveRegionRef = useRef(null);\n  const [rangeSelectionMode, setRangeSelectionMode] = useState(getDefaultMode(value, relativeOptions, rangeSelectorMode));\n  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = useState(() => splitAbsoluteValue((value === null || value === void 0 ? void 0 : value.type) === 'absolute' ? value : null, hideTime));\n  const [selectedRelativeRange, setSelectedRelativeRange] = useState((value === null || value === void 0 ? void 0 : value.type) === 'relative' ? value : null);\n  const scrollableContainerRef = useRef(null);\n  const applyButtonRef = useRef(null);\n  const [applyClicked, setApplyClicked] = useState(false);\n  const [validationResult, setValidationResult] = useState(VALID_RANGE);\n  const closeDropdown = () => {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n  const onClear = () => {\n    closeDropdown();\n    clearValue();\n  };\n  const onApply = () => {\n    var _a;\n    const newValue = rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange, hideTime);\n    const newValidationResult = applyValue(newValue);\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n      (_a = liveRegionRef.current) === null || _a === void 0 ? void 0 : _a.reannounce();\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n  useEffect(() => {\n    if (applyClicked) {\n      const visibleRange = rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n      const formattedRange = formatValue(visibleRange, {\n        dateOnly,\n        monthOnly: isMonthPicker,\n        timeOffset: dateOnly || isMonthPicker ? null : normalizeTimeOffset(visibleRange, getTimeOffset, timeOffset)\n      });\n      const newValidationResult = isValidRange(formattedRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [applyClicked, isValidRange, rangeSelectionMode, selectedRelativeRange, selectedAbsoluteRange, setValidationResult, dateOnly, isMonthPicker, getTimeOffset, timeOffset]);\n  useEffect(() => {\n    var _a;\n    return (_a = scrollableContainerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [scrollableContainerRef]);\n  return React.createElement(React.Fragment, null, React.createElement(FocusLock, {\n    className: styles['focus-lock'],\n    autoFocus: true\n  }, React.createElement(\"div\", {\n    ref: scrollableContainerRef,\n    className: clsx(styles.dropdown, testutilStyles.dropdown),\n    tabIndex: 0,\n    role: \"dialog\",\n    \"aria-label\": i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel,\n    \"aria-labelledby\": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby !== null && ariaDescribedby !== void 0 ? ariaDescribedby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby\n  }, React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content'], {\n      [styles['one-grid']]: isSingleGrid\n    })\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"l\"\n  }, React.createElement(InternalBox, {\n    padding: {\n      top: 'm',\n      horizontal: 'l'\n    }\n  }, React.createElement(InternalSpaceBetween, {\n    direction: \"vertical\",\n    size: \"s\"\n  }, rangeSelectorMode === 'default' && React.createElement(ModeSwitcher, {\n    mode: rangeSelectionMode,\n    onChange: mode => {\n      setRangeSelectionMode(mode);\n      setApplyClicked(false);\n      setValidationResult(VALID_RANGE);\n    },\n    i18nStrings: i18nStrings\n  }), rangeSelectionMode === 'absolute' && React.createElement(Calendar, {\n    value: selectedAbsoluteRange,\n    setValue: setSelectedAbsoluteRange,\n    locale: locale,\n    startOfWeek: startOfWeek,\n    isDateEnabled: isDateEnabled,\n    dateDisabledReason: dateDisabledReason,\n    i18nStrings: i18nStrings,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    customAbsoluteRangeControl: customAbsoluteRangeControl,\n    granularity: granularity\n  }), rangeSelectionMode === 'relative' && React.createElement(RelativeRangePicker, {\n    isSingleGrid: isSingleGrid,\n    options: relativeOptions,\n    dateOnly: dateOnly,\n    initialSelection: selectedRelativeRange,\n    onChange: range => setSelectedRelativeRange(range),\n    i18nStrings: i18nStrings,\n    customUnits: customRelativeRangeUnits,\n    granularity: granularity\n  })), React.createElement(InternalBox, {\n    className: testutilStyles['validation-section'],\n    margin: !validationResult.valid ? {\n      top: 's'\n    } : undefined\n  }, !validationResult.valid && React.createElement(React.Fragment, null, React.createElement(InternalAlert, {\n    type: \"error\",\n    statusIconAriaLabel: i18n('i18nStrings.errorIconAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel)\n  }, React.createElement(\"span\", {\n    className: testutilStyles['validation-error']\n  }, validationResult.errorMessage)), React.createElement(InternalLiveRegion, {\n    hidden: true,\n    tagName: \"span\",\n    ref: liveRegionRef\n  }, validationResult.errorMessage)))), React.createElement(\"div\", {\n    className: clsx(styles.footer, {\n      [styles['one-grid']]: isSingleGrid,\n      [styles['has-clear-button']]: showClearButton\n    })\n  }, showClearButton && React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(InternalButton, {\n    onClick: onClear,\n    className: testutilStyles['clear-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18n('i18nStrings.clearButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearButtonLabel))), React.createElement(\"div\", {\n    className: styles['footer-button-wrapper']\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(InternalButton, {\n    onClick: closeDropdown,\n    className: testutilStyles['cancel-button'],\n    variant: \"link\",\n    formAction: \"none\"\n  }, i18n('i18nStrings.cancelButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cancelButtonLabel)), React.createElement(InternalButton, {\n    onClick: onApply,\n    className: testutilStyles['apply-button'],\n    ref: applyButtonRef,\n    formAction: \"none\"\n  }, i18n('i18nStrings.applyButtonLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.applyButtonLabel))))))))));\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","InternalAlert","InternalBox","InternalButton","useInternalI18n","FocusLock","InternalLiveRegion","InternalSpaceBetween","Calendar","ModeSwitcher","RelativeRangePicker","normalizeTimeOffset","formatValue","getDefaultMode","joinAbsoluteValue","splitAbsoluteValue","styles","testutilStyles","VALID_RANGE","valid","DateRangePickerDropdown","locale","startOfWeek","isDateEnabled","dateDisabledReason","isValidRange","value","onClear","clearValue","onApply","applyValue","getTimeOffset","timeOffset","onDropdownClose","relativeOptions","showClearButton","isSingleGrid","i18nStrings","dateOnly","timeInputFormat","rangeSelectorMode","ariaLabelledby","ariaDescribedby","customAbsoluteRangeControl","customRelativeRangeUnits","granularity","i18n","isMonthPicker","hideTime","liveRegionRef","rangeSelectionMode","setRangeSelectionMode","selectedAbsoluteRange","setSelectedAbsoluteRange","type","selectedRelativeRange","setSelectedRelativeRange","scrollableContainerRef","applyButtonRef","applyClicked","setApplyClicked","validationResult","setValidationResult","closeDropdown","newValue","newValidationResult","_a","current","reannounce","visibleRange","formattedRange","monthOnly","focus","createElement","Fragment","className","autoFocus","ref","dropdown","tabIndex","role","ariaLabel","size","padding","top","horizontal","direction","mode","onChange","setValue","options","initialSelection","range","customUnits","margin","undefined","statusIconAriaLabel","errorIconAriaLabel","errorMessage","hidden","tagName","footer","onClick","variant","formAction","clearButtonLabel","cancelButtonLabel","applyButtonLabel"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/date-range-picker/dropdown.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport InternalAlert from '../alert/internal';\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { CalendarProps } from '../calendar/interfaces';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport InternalLiveRegion, { InternalLiveRegionRef } from '../live-region/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport Calendar from './calendar';\nimport { DateRangePickerProps } from './interfaces';\nimport ModeSwitcher from './mode-switcher';\nimport RelativeRangePicker from './relative-range';\nimport { normalizeTimeOffset } from './time-offset';\nimport { formatValue, getDefaultMode, joinAbsoluteValue, splitAbsoluteValue } from './utils';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\nconst VALID_RANGE: DateRangePickerProps.ValidRangeResult = { valid: true };\n\ninterface DateRangePickerDropdownProps\n  extends Pick<\n      Required<DateRangePickerProps>,\n      | 'locale'\n      | 'isDateEnabled'\n      | 'isValidRange'\n      | 'value'\n      | 'relativeOptions'\n      | 'showClearButton'\n      | 'dateOnly'\n      | 'rangeSelectorMode'\n    >,\n    Pick<\n      DateRangePickerProps,\n      | 'startOfWeek'\n      | 'getTimeOffset'\n      | 'timeInputFormat'\n      | 'timeOffset'\n      | 'ariaLabelledby'\n      | 'ariaDescribedby'\n      | 'i18nStrings'\n      | 'customRelativeRangeUnits'\n      | 'dateDisabledReason'\n    >,\n    Pick<CalendarProps, 'granularity'> {\n  onClear: () => void;\n  onApply: (value: null | DateRangePickerProps.Value) => DateRangePickerProps.ValidationResult;\n  onDropdownClose: () => void;\n  isSingleGrid: boolean;\n  customAbsoluteRangeControl: DateRangePickerProps.AbsoluteRangeControl | undefined;\n}\n\nexport function DateRangePickerDropdown({\n  locale = '',\n  startOfWeek,\n  isDateEnabled,\n  dateDisabledReason = () => '',\n  isValidRange,\n  value,\n  onClear: clearValue,\n  onApply: applyValue,\n  getTimeOffset,\n  timeOffset,\n  onDropdownClose,\n  relativeOptions,\n  showClearButton,\n  isSingleGrid,\n  i18nStrings,\n  dateOnly,\n  timeInputFormat,\n  rangeSelectorMode,\n  ariaLabelledby,\n  ariaDescribedby,\n  customAbsoluteRangeControl,\n  customRelativeRangeUnits,\n  granularity = 'day',\n}: DateRangePickerDropdownProps) {\n  const i18n = useInternalI18n('date-range-picker');\n  const isMonthPicker = granularity === 'month';\n  const hideTime = dateOnly || isMonthPicker;\n  const liveRegionRef = useRef<InternalLiveRegionRef>(null);\n\n  const [rangeSelectionMode, setRangeSelectionMode] = useState<'absolute' | 'relative'>(\n    getDefaultMode(value, relativeOptions, rangeSelectorMode)\n  );\n\n  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = useState<DateRangePickerProps.PendingAbsoluteValue>(() =>\n    splitAbsoluteValue(value?.type === 'absolute' ? value : null, hideTime)\n  );\n\n  const [selectedRelativeRange, setSelectedRelativeRange] = useState<DateRangePickerProps.RelativeValue | null>(\n    value?.type === 'relative' ? value : null\n  );\n\n  const scrollableContainerRef = useRef<HTMLDivElement | null>(null);\n  const applyButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const [applyClicked, setApplyClicked] = useState<boolean>(false);\n\n  const [validationResult, setValidationResult] = useState<\n    DateRangePickerProps.ValidRangeResult | DateRangePickerProps.InvalidRangeResult\n  >(VALID_RANGE);\n\n  const closeDropdown = () => {\n    setApplyClicked(false);\n    onDropdownClose();\n  };\n\n  const onClear = () => {\n    closeDropdown();\n    clearValue();\n  };\n\n  const onApply = () => {\n    const newValue =\n      rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange, hideTime);\n    const newValidationResult = applyValue(newValue);\n    if (newValidationResult.valid === false) {\n      setApplyClicked(true);\n      setValidationResult(newValidationResult);\n      liveRegionRef.current?.reannounce();\n    } else {\n      setApplyClicked(false);\n      closeDropdown();\n    }\n  };\n\n  useEffect(() => {\n    if (applyClicked) {\n      const visibleRange =\n        rangeSelectionMode === 'relative' ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);\n      const formattedRange = formatValue(visibleRange, {\n        dateOnly,\n        monthOnly: isMonthPicker,\n        timeOffset: dateOnly || isMonthPicker ? null : normalizeTimeOffset(visibleRange, getTimeOffset, timeOffset),\n      });\n      const newValidationResult = isValidRange(formattedRange);\n      setValidationResult(newValidationResult || VALID_RANGE);\n    }\n  }, [\n    applyClicked,\n    isValidRange,\n    rangeSelectionMode,\n    selectedRelativeRange,\n    selectedAbsoluteRange,\n    setValidationResult,\n    dateOnly,\n    isMonthPicker,\n    getTimeOffset,\n    timeOffset,\n  ]);\n\n  useEffect(() => scrollableContainerRef.current?.focus(), [scrollableContainerRef]);\n\n  return (\n    <>\n      <FocusLock className={styles['focus-lock']} autoFocus={true}>\n        <div\n          ref={scrollableContainerRef}\n          className={clsx(styles.dropdown, testutilStyles.dropdown)}\n          tabIndex={0}\n          role=\"dialog\"\n          aria-label={i18nStrings?.ariaLabel}\n          aria-labelledby={ariaLabelledby ?? i18nStrings?.ariaLabelledby}\n          aria-describedby={ariaDescribedby ?? i18nStrings?.ariaDescribedby}\n        >\n          <div\n            className={clsx(styles['dropdown-content'], {\n              [styles['one-grid']]: isSingleGrid,\n            })}\n          >\n            <InternalSpaceBetween size=\"l\">\n              <InternalBox padding={{ top: 'm', horizontal: 'l' }}>\n                <InternalSpaceBetween direction=\"vertical\" size=\"s\">\n                  {rangeSelectorMode === 'default' && (\n                    <ModeSwitcher\n                      mode={rangeSelectionMode}\n                      onChange={(mode: 'absolute' | 'relative') => {\n                        setRangeSelectionMode(mode);\n                        setApplyClicked(false);\n                        setValidationResult(VALID_RANGE);\n                      }}\n                      i18nStrings={i18nStrings}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'absolute' && (\n                    <Calendar\n                      value={selectedAbsoluteRange}\n                      setValue={setSelectedAbsoluteRange}\n                      locale={locale}\n                      startOfWeek={startOfWeek}\n                      isDateEnabled={isDateEnabled}\n                      dateDisabledReason={dateDisabledReason}\n                      i18nStrings={i18nStrings}\n                      dateOnly={dateOnly}\n                      timeInputFormat={timeInputFormat}\n                      customAbsoluteRangeControl={customAbsoluteRangeControl}\n                      granularity={granularity}\n                    />\n                  )}\n\n                  {rangeSelectionMode === 'relative' && (\n                    <RelativeRangePicker\n                      isSingleGrid={isSingleGrid}\n                      options={relativeOptions}\n                      dateOnly={dateOnly}\n                      initialSelection={selectedRelativeRange}\n                      onChange={range => setSelectedRelativeRange(range)}\n                      i18nStrings={i18nStrings}\n                      customUnits={customRelativeRangeUnits}\n                      granularity={granularity}\n                    />\n                  )}\n                </InternalSpaceBetween>\n\n                <InternalBox\n                  className={testutilStyles['validation-section']}\n                  margin={!validationResult.valid ? { top: 's' } : undefined}\n                >\n                  {!validationResult.valid && (\n                    <>\n                      <InternalAlert\n                        type=\"error\"\n                        statusIconAriaLabel={i18n('i18nStrings.errorIconAriaLabel', i18nStrings?.errorIconAriaLabel)}\n                      >\n                        <span className={testutilStyles['validation-error']}>{validationResult.errorMessage}</span>\n                      </InternalAlert>\n                      <InternalLiveRegion hidden={true} tagName=\"span\" ref={liveRegionRef}>\n                        {validationResult.errorMessage}\n                      </InternalLiveRegion>\n                    </>\n                  )}\n                </InternalBox>\n              </InternalBox>\n\n              <div\n                className={clsx(styles.footer, {\n                  [styles['one-grid']]: isSingleGrid,\n                  [styles['has-clear-button']]: showClearButton,\n                })}\n              >\n                {showClearButton && (\n                  <div className={styles['footer-button-wrapper']}>\n                    <InternalButton\n                      onClick={onClear}\n                      className={testutilStyles['clear-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.clearButtonLabel', i18nStrings?.clearButtonLabel)}\n                    </InternalButton>\n                  </div>\n                )}\n                <div className={styles['footer-button-wrapper']}>\n                  <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n                    <InternalButton\n                      onClick={closeDropdown}\n                      className={testutilStyles['cancel-button']}\n                      variant=\"link\"\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.cancelButtonLabel', i18nStrings?.cancelButtonLabel)}\n                    </InternalButton>\n\n                    <InternalButton\n                      onClick={onApply}\n                      className={testutilStyles['apply-button']}\n                      ref={applyButtonRef}\n                      formAction=\"none\"\n                    >\n                      {i18n('i18nStrings.applyButtonLabel', i18nStrings?.applyButtonLabel)}\n                    </InternalButton>\n                  </InternalSpaceBetween>\n                </div>\n              </div>\n            </InternalSpaceBetween>\n          </div>\n        </div>\n      </FocusLock>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}