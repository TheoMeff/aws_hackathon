{"ast":null,"code":"export default class AudioPlayer {\n  constructor() {\n    this.initialized = false;\n    this.audioContext = null;\n    this.workletNode = null;\n    this.analyser = null;\n  }\n  async start() {\n    if (this.initialized) return;\n    this.audioContext = new AudioContext({\n      \"sampleRate\": 24000\n    });\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 512;\n\n    // Load the audio worklet\n    const workletUrl = new URL('./audioPlayerProcessor.worklet.js', import.meta.url).toString();\n    await this.audioContext.audioWorklet.addModule(workletUrl);\n    this.workletNode = new AudioWorkletNode(this.audioContext, \"audio-player-processor\");\n    this.workletNode.connect(this.analyser);\n    this.analyser.connect(this.audioContext.destination);\n    this.initialized = true;\n  }\n  bargeIn() {\n    if (!this.initialized) return;\n    this.workletNode.port.postMessage({\n      type: \"barge-in\"\n    });\n  }\n  stop() {\n    if (!this.initialized) return;\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n    if (this.analyser) {\n      this.analyser.disconnect();\n    }\n    if (this.workletNode) {\n      this.workletNode.disconnect();\n    }\n    this.initialized = false;\n    this.audioContext = null;\n    this.analyser = null;\n    this.workletNode = null;\n  }\n  playAudio(samples) {\n    if (!this.initialized) {\n      console.error(\"The audio player is not initialized. Call start() before attempting to play audio.\");\n      return;\n    }\n    this.workletNode.port.postMessage({\n      type: \"audio\",\n      audioData: samples\n    });\n  }\n}","map":{"version":3,"names":["AudioPlayer","constructor","initialized","audioContext","workletNode","analyser","start","AudioContext","createAnalyser","fftSize","workletUrl","URL","import","meta","url","toString","audioWorklet","addModule","AudioWorkletNode","connect","destination","bargeIn","port","postMessage","type","stop","close","disconnect","playAudio","samples","console","error","audioData"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/helper/audioPlayer.js"],"sourcesContent":["export default class AudioPlayer {\n    constructor() {\n        this.initialized = false;\n        this.audioContext = null;\n        this.workletNode = null;\n        this.analyser = null;\n    }\n\n    async start() {\n        if (this.initialized) return;\n\n        this.audioContext = new AudioContext({ \"sampleRate\": 24000 });\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 512;\n\n        // Load the audio worklet\n        const workletUrl = new URL('./audioPlayerProcessor.worklet.js', import.meta.url).toString();\n        await this.audioContext.audioWorklet.addModule(workletUrl);\n\n        this.workletNode = new AudioWorkletNode(this.audioContext, \"audio-player-processor\");\n        this.workletNode.connect(this.analyser);\n        this.analyser.connect(this.audioContext.destination);\n\n        this.initialized = true;\n    }\n\n    bargeIn() {\n        if (!this.initialized) return;\n        this.workletNode.port.postMessage({\n            type: \"barge-in\",\n        });\n    }\n\n    stop() {\n        if (!this.initialized) return;\n\n        if (this.audioContext) {\n            this.audioContext.close();\n        }\n\n        if (this.analyser) {\n            this.analyser.disconnect();\n        }\n\n        if (this.workletNode) {\n            this.workletNode.disconnect();\n        }\n\n        this.initialized = false;\n        this.audioContext = null;\n        this.analyser = null;\n        this.workletNode = null;\n    }\n\n    playAudio(samples) {\n        if (!this.initialized) {\n            console.error(\"The audio player is not initialized. Call start() before attempting to play audio.\");\n            return;\n        }\n\n        this.workletNode.port.postMessage({\n            type: \"audio\",\n            audioData: samples,\n        });\n    }\n}"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC7BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,QAAQ,GAAG,IAAI;EACxB;EAEA,MAAMC,KAAKA,CAAA,EAAG;IACV,IAAI,IAAI,CAACJ,WAAW,EAAE;IAEtB,IAAI,CAACC,YAAY,GAAG,IAAII,YAAY,CAAC;MAAE,YAAY,EAAE;IAAM,CAAC,CAAC;IAC7D,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACF,YAAY,CAACK,cAAc,CAAC,CAAC;IAClD,IAAI,CAACH,QAAQ,CAACI,OAAO,GAAG,GAAG;;IAE3B;IACA,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,mCAAmC,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC3F,MAAM,IAAI,CAACZ,YAAY,CAACa,YAAY,CAACC,SAAS,CAACP,UAAU,CAAC;IAE1D,IAAI,CAACN,WAAW,GAAG,IAAIc,gBAAgB,CAAC,IAAI,CAACf,YAAY,EAAE,wBAAwB,CAAC;IACpF,IAAI,CAACC,WAAW,CAACe,OAAO,CAAC,IAAI,CAACd,QAAQ,CAAC;IACvC,IAAI,CAACA,QAAQ,CAACc,OAAO,CAAC,IAAI,CAAChB,YAAY,CAACiB,WAAW,CAAC;IAEpD,IAAI,CAAClB,WAAW,GAAG,IAAI;EAC3B;EAEAmB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACnB,WAAW,EAAE;IACvB,IAAI,CAACE,WAAW,CAACkB,IAAI,CAACC,WAAW,CAAC;MAC9BC,IAAI,EAAE;IACV,CAAC,CAAC;EACN;EAEAC,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC,IAAI,CAACvB,WAAW,EAAE;IAEvB,IAAI,IAAI,CAACC,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACuB,KAAK,CAAC,CAAC;IAC7B;IAEA,IAAI,IAAI,CAACrB,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACsB,UAAU,CAAC,CAAC;IAC9B;IAEA,IAAI,IAAI,CAACvB,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACuB,UAAU,CAAC,CAAC;IACjC;IAEA,IAAI,CAACzB,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACD,WAAW,GAAG,IAAI;EAC3B;EAEAwB,SAASA,CAACC,OAAO,EAAE;IACf,IAAI,CAAC,IAAI,CAAC3B,WAAW,EAAE;MACnB4B,OAAO,CAACC,KAAK,CAAC,oFAAoF,CAAC;MACnG;IACJ;IAEA,IAAI,CAAC3B,WAAW,CAACkB,IAAI,CAACC,WAAW,CAAC;MAC9BC,IAAI,EAAE,OAAO;MACbQ,SAAS,EAAEH;IACf,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}