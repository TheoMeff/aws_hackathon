{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs, warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsLabelAttribute, getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { useInternalI18n } from '../i18n/context';\nimport Icon from '../icon/internal';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { DATA_ATTR_FUNNEL_VALUE, getFunnelValueSelector, getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useModalContextLoadingButtonComponent } from '../internal/hooks/use-modal-component-analytics';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport InternalLiveRegion from '../live-region/internal';\nimport { LeftIcon, RightIcon } from './icon-helper';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nexport const InternalButton = React.forwardRef((_a, ref) => {\n  var {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      external,\n      target: targetOverride,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      badge,\n      i18nStrings,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __focusable = false,\n      __injectAnalyticsComponentMetadata = false,\n      __title,\n      __emitPerformanceMarks = true,\n      analyticsAction = 'click'\n    } = _a,\n    props = __rest(_a, [\"children\", \"iconName\", \"__iconClass\", \"onClick\", \"onFollow\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"wrapText\", \"href\", \"external\", \"target\", \"rel\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"ariaExpanded\", \"ariaControls\", \"fullWidth\", \"badge\", \"i18nStrings\", \"__nativeAttributes\", \"__internalRootRef\", \"__focusable\", \"__injectAnalyticsComponentMetadata\", \"__title\", \"__emitPerformanceMarks\", \"analyticsAction\"]);\n  const [showTooltip, setShowTooltip] = useState(false);\n  checkSafeUrl('Button', href);\n  const isAnchor = Boolean(href);\n  const target = targetOverride !== null && targetOverride !== void 0 ? targetOverride : external ? '_blank' : undefined;\n  const isNotInteractive = loading || disabled;\n  const isDisabledWithReason = (variant === 'normal' || variant === 'primary' || variant === 'icon') && !!disabledReason && disabled;\n  const hasAriaDisabled = loading && !disabled || disabled && __focusable || isDisabledWithReason;\n  const shouldHaveContent = children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss', 'inline-icon-pointer-target'].indexOf(variant) === -1;\n  if ((iconName || iconUrl || iconSvg) && iconAlign === 'right' && external) {\n    warnOnce('Button', 'A right-aligned icon should not be combined with an external icon.');\n  }\n  const buttonRef = useRef(null);\n  useForwardFocus(ref, buttonRef);\n  const buttonContext = useButtonContext();\n  const i18n = useInternalI18n('button');\n  const uniqueId = useUniqueId('button');\n  const {\n    funnelInteractionId\n  } = useFunnel();\n  const {\n    stepNumber,\n    stepNameSelector\n  } = useFunnelStep();\n  const {\n    subStepSelector,\n    subStepNameSelector\n  } = useFunnelSubStep();\n  const performanceMarkAttributes = usePerformanceMarks('primaryButton', () => variant === 'primary' && __emitPerformanceMarks && !loading && !disabled, buttonRef, () => {\n    var _a;\n    return {\n      loading,\n      disabled,\n      text: (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.innerText\n    };\n  }, [loading, disabled]);\n  useModalContextLoadingButtonComponent(variant === 'primary', loading);\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(disabledReason);\n  const handleClick = event => {\n    if (isNotInteractive) {\n      return event.preventDefault();\n    }\n    if (isAnchor && isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, {\n        href,\n        target\n      }, event);\n      if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n        const stepName = getTextFromSelector(stepNameSelector);\n        const subStepName = getTextFromSelector(subStepNameSelector);\n        FunnelMetrics.externalLinkInteracted({\n          funnelInteractionId,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          subStepSelector,\n          subStepName,\n          subStepNameSelector,\n          elementSelector: getFunnelValueSelector(uniqueId),\n          subStepAllSelector: getSubStepAllSelector()\n        });\n      }\n    }\n    const {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    } = event;\n    fireCancelableEvent(onClick, {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    }, event);\n    buttonContext.onClick({\n      variant\n    });\n  };\n  const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n    [styles.disabled]: isNotInteractive,\n    [styles['disabled-with-reason']]: isDisabledWithReason,\n    [styles['button-no-wrap']]: !wrapText,\n    [styles['button-no-text']]: !shouldHaveContent,\n    [styles['full-width']]: shouldHaveContent && fullWidth,\n    [styles.link]: isAnchor\n  });\n  const explicitTabIndex = __nativeAttributes && 'tabIndex' in __nativeAttributes ? __nativeAttributes.tabIndex : undefined;\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(buttonRef, {\n    tabIndex: isAnchor && isNotInteractive && !isDisabledWithReason ? -1 : explicitTabIndex\n  });\n  const analyticsMetadata = disabled ? {} : {\n    action: analyticsAction,\n    detail: {\n      label: {\n        root: 'self'\n      }\n    }\n  };\n  if (__injectAnalyticsComponentMetadata) {\n    analyticsMetadata.component = {\n      name: 'awsui.Button',\n      label: {\n        root: 'self'\n      },\n      properties: {\n        variant,\n        disabled: `${disabled}`\n      }\n    };\n  }\n  const buttonProps = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), performanceMarkAttributes), {\n    tabIndex,\n    // https://github.com/microsoft/TypeScript/issues/36659\n    ref: useMergeRefs(buttonRef, __internalRootRef),\n    'aria-label': ariaLabel,\n    'aria-describedby': ariaDescribedby,\n    'aria-expanded': ariaExpanded,\n    'aria-controls': ariaControls,\n    // add ariaLabel as `title` as visible hint text\n    title: __title !== null && __title !== void 0 ? __title : ariaLabel,\n    className: buttonClass,\n    onClick: handleClick,\n    [DATA_ATTR_FUNNEL_VALUE]: uniqueId\n  }), getAnalyticsMetadataAttribute(analyticsMetadata)), getAnalyticsLabelAttribute(children ? `.${analyticsSelectors.label}` : ''));\n  const iconProps = {\n    loading,\n    iconName,\n    iconAlign,\n    iconUrl,\n    iconSvg,\n    iconAlt,\n    variant,\n    badge,\n    iconClass: __iconClass,\n    iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal'\n  };\n  const buttonContent = React.createElement(React.Fragment, null, React.createElement(LeftIcon, Object.assign({}, iconProps)), shouldHaveContent && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: clsx(styles.content, analyticsSelectors.label)\n  }, children), external && React.createElement(React.Fragment, null, \"\\u00A0\", React.createElement(Icon, {\n    name: \"external\",\n    className: testUtilStyles['external-icon'],\n    ariaLabel: i18n('i18nStrings.externalIconAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.externalIconAriaLabel)\n  }))), React.createElement(RightIcon, Object.assign({}, iconProps)));\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  const disabledReasonProps = Object.assign({\n    onFocus: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onBlur: isDisabledWithReason ? () => setShowTooltip(false) : undefined,\n    onMouseEnter: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onMouseLeave: isDisabledWithReason ? () => setShowTooltip(false) : undefined\n  }, isDisabledWithReason ? targetProps : {});\n  const disabledReasonContent = React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: testUtilStyles['disabled-reason-tooltip'],\n    trackRef: buttonRef,\n    value: disabledReason,\n    onDismiss: () => setShowTooltip(false)\n  }));\n  if (isAnchor) {\n    return (\n      // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n      // eslint-disable-next-line react/jsx-no-target-blank\n      React.createElement(React.Fragment, null, React.createElement(\"a\", Object.assign({}, buttonProps, {\n        href: href,\n        target: target,\n        // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n        rel: rel !== null && rel !== void 0 ? rel : target === '_blank' ? 'noopener noreferrer' : undefined,\n        \"aria-disabled\": isNotInteractive ? true : undefined,\n        download: download\n      }, disabledReasonProps), buttonContent, isDisabledWithReason && disabledReasonContent), loading && loadingText && React.createElement(InternalLiveRegion, {\n        tagName: \"span\",\n        hidden: true\n      }, loadingText))\n    );\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", Object.assign({}, buttonProps, {\n    type: formAction === 'none' ? 'button' : 'submit',\n    disabled: disabled && !__focusable && !isDisabledWithReason,\n    \"aria-disabled\": hasAriaDisabled ? true : undefined\n  }, disabledReasonProps), buttonContent, isDisabledWithReason && disabledReasonContent), loading && loadingText && React.createElement(InternalLiveRegion, {\n    tagName: \"span\",\n    hidden: true\n  }, loadingText));\n});\nexport default InternalButton;","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","useMergeRefs","warnOnce","getAnalyticsLabelAttribute","getAnalyticsMetadataAttribute","useInternalI18n","Icon","FunnelMetrics","useFunnel","useFunnelStep","useFunnelSubStep","DATA_ATTR_FUNNEL_VALUE","getFunnelValueSelector","getSubStepAllSelector","getTextFromSelector","Tooltip","useButtonContext","useSingleTabStopNavigation","fireCancelableEvent","isPlainLeftClick","useForwardFocus","useHiddenDescription","useModalContextLoadingButtonComponent","usePerformanceMarks","useUniqueId","checkSafeUrl","InternalLiveRegion","LeftIcon","RightIcon","analyticsSelectors","styles","testUtilStyles","InternalButton","forwardRef","_a","ref","children","iconName","__iconClass","onClick","onFollow","iconAlign","iconUrl","iconSvg","iconAlt","variant","loading","loadingText","disabled","disabledReason","wrapText","href","external","target","targetOverride","rel","download","formAction","ariaLabel","ariaDescribedby","ariaExpanded","ariaControls","fullWidth","badge","i18nStrings","__nativeAttributes","__internalRootRef","__focusable","__injectAnalyticsComponentMetadata","__title","__emitPerformanceMarks","analyticsAction","props","__rest","showTooltip","setShowTooltip","isAnchor","Boolean","undefined","isNotInteractive","isDisabledWithReason","hasAriaDisabled","shouldHaveContent","indexOf","buttonRef","buttonContext","i18n","uniqueId","funnelInteractionId","stepNumber","stepNameSelector","subStepSelector","subStepNameSelector","performanceMarkAttributes","text","current","innerText","targetProps","descriptionEl","handleClick","event","preventDefault","stepName","subStepName","externalLinkInteracted","elementSelector","subStepAllSelector","altKey","button","ctrlKey","metaKey","shiftKey","buttonClass","className","link","explicitTabIndex","tabIndex","analyticsMetadata","action","detail","label","root","component","name","properties","buttonProps","Object","assign","title","iconProps","iconClass","iconSize","buttonContent","createElement","Fragment","content","externalIconAriaLabel","loadingButtonCount","disabledReasonProps","onFocus","onBlur","onMouseEnter","onMouseLeave","disabledReasonContent","trackRef","value","onDismiss","tagName","hidden","type"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/button/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs, warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  getAnalyticsLabelAttribute,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useInternalI18n } from '../i18n/context';\nimport Icon from '../icon/internal';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport {\n  DATA_ATTR_FUNNEL_VALUE,\n  getFunnelValueSelector,\n  getSubStepAllSelector,\n  getTextFromSelector,\n} from '../internal/analytics/selectors';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useModalContextLoadingButtonComponent } from '../internal/hooks/use-modal-component-analytics';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport InternalLiveRegion from '../live-region/internal';\nimport { GeneratedAnalyticsMetadataButtonFragment } from './analytics-metadata/interfaces';\nimport { ButtonIconProps, LeftIcon, RightIcon } from './icon-helper';\nimport { ButtonProps } from './interfaces';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\n\nexport type InternalButtonProps = Omit<ButtonProps, 'variant'> & {\n  variant?:\n    | ButtonProps['variant']\n    | 'flashbar-icon'\n    | 'breadcrumb-group'\n    | 'menu-trigger'\n    | 'modal-dismiss'\n    | 'inline-icon-pointer-target';\n  badge?: boolean;\n  analyticsAction?: string;\n  __nativeAttributes?:\n    | (React.HTMLAttributes<HTMLAnchorElement> & React.HTMLAttributes<HTMLButtonElement>)\n    | Record<`data-${string}`, string>;\n  __iconClass?: string;\n  __focusable?: boolean;\n  __injectAnalyticsComponentMetadata?: boolean;\n  __title?: string;\n  __emitPerformanceMarks?: boolean;\n} & InternalBaseComponentProps<HTMLAnchorElement | HTMLButtonElement>;\n\nexport const InternalButton = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      external,\n      target: targetOverride,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      badge,\n      i18nStrings,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __focusable = false,\n      __injectAnalyticsComponentMetadata = false,\n      __title,\n      __emitPerformanceMarks = true,\n      analyticsAction = 'click',\n      ...props\n    }: InternalButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    checkSafeUrl('Button', href);\n    const isAnchor = Boolean(href);\n    const target = targetOverride ?? (external ? '_blank' : undefined);\n    const isNotInteractive = loading || disabled;\n    const isDisabledWithReason =\n      (variant === 'normal' || variant === 'primary' || variant === 'icon') && !!disabledReason && disabled;\n\n    const hasAriaDisabled = (loading && !disabled) || (disabled && __focusable) || isDisabledWithReason;\n    const shouldHaveContent =\n      children &&\n      ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss', 'inline-icon-pointer-target'].indexOf(variant) === -1;\n\n    if ((iconName || iconUrl || iconSvg) && iconAlign === 'right' && external) {\n      warnOnce('Button', 'A right-aligned icon should not be combined with an external icon.');\n    }\n\n    const buttonRef = useRef<HTMLElement>(null);\n    useForwardFocus(ref, buttonRef);\n\n    const buttonContext = useButtonContext();\n    const i18n = useInternalI18n('button');\n\n    const uniqueId = useUniqueId('button');\n    const { funnelInteractionId } = useFunnel();\n    const { stepNumber, stepNameSelector } = useFunnelStep();\n    const { subStepSelector, subStepNameSelector } = useFunnelSubStep();\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'primaryButton',\n      () => variant === 'primary' && __emitPerformanceMarks && !loading && !disabled,\n      buttonRef,\n      () => ({\n        loading,\n        disabled,\n        text: buttonRef.current?.innerText,\n      }),\n      [loading, disabled]\n    );\n    useModalContextLoadingButtonComponent(variant === 'primary', loading);\n\n    const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);\n\n    const handleClick = (event: React.MouseEvent) => {\n      if (isNotInteractive) {\n        return event.preventDefault();\n      }\n\n      if (isAnchor && isPlainLeftClick(event)) {\n        fireCancelableEvent(onFollow, { href, target }, event);\n\n        if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n          const stepName = getTextFromSelector(stepNameSelector);\n          const subStepName = getTextFromSelector(subStepNameSelector);\n\n          FunnelMetrics.externalLinkInteracted({\n            funnelInteractionId,\n            stepNumber,\n            stepName,\n            stepNameSelector,\n            subStepSelector,\n            subStepName,\n            subStepNameSelector,\n            elementSelector: getFunnelValueSelector(uniqueId),\n            subStepAllSelector: getSubStepAllSelector(),\n          });\n        }\n      }\n\n      const { altKey, button, ctrlKey, metaKey, shiftKey } = event;\n      fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);\n      buttonContext.onClick({ variant });\n    };\n\n    const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n      [styles.disabled]: isNotInteractive,\n      [styles['disabled-with-reason']]: isDisabledWithReason,\n      [styles['button-no-wrap']]: !wrapText,\n      [styles['button-no-text']]: !shouldHaveContent,\n      [styles['full-width']]: shouldHaveContent && fullWidth,\n      [styles.link]: isAnchor,\n    });\n\n    const explicitTabIndex =\n      __nativeAttributes && 'tabIndex' in __nativeAttributes ? __nativeAttributes.tabIndex : undefined;\n    const { tabIndex } = useSingleTabStopNavigation(buttonRef, {\n      tabIndex: isAnchor && isNotInteractive && !isDisabledWithReason ? -1 : explicitTabIndex,\n    });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataButtonFragment = disabled\n      ? {}\n      : {\n          action: analyticsAction,\n          detail: { label: { root: 'self' } },\n        };\n    if (__injectAnalyticsComponentMetadata) {\n      analyticsMetadata.component = {\n        name: 'awsui.Button',\n        label: { root: 'self' },\n        properties: { variant, disabled: `${disabled}` },\n      };\n    }\n\n    const buttonProps = {\n      ...props,\n      ...__nativeAttributes,\n      ...performanceMarkAttributes,\n      tabIndex,\n      // https://github.com/microsoft/TypeScript/issues/36659\n      ref: useMergeRefs(buttonRef, __internalRootRef),\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedby,\n      'aria-expanded': ariaExpanded,\n      'aria-controls': ariaControls,\n      // add ariaLabel as `title` as visible hint text\n      title: __title ?? ariaLabel,\n      className: buttonClass,\n      onClick: handleClick,\n      [DATA_ATTR_FUNNEL_VALUE]: uniqueId,\n      ...getAnalyticsMetadataAttribute(analyticsMetadata),\n      ...getAnalyticsLabelAttribute(children ? `.${analyticsSelectors.label}` : ''),\n    } as const;\n\n    const iconProps: ButtonIconProps = {\n      loading,\n      iconName,\n      iconAlign,\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant,\n      badge,\n      iconClass: __iconClass,\n      iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal',\n    };\n    const buttonContent = (\n      <>\n        <LeftIcon {...iconProps} />\n        {shouldHaveContent && (\n          <>\n            <span className={clsx(styles.content, analyticsSelectors.label)}>{children}</span>\n            {external && (\n              <>\n                &nbsp;\n                <Icon\n                  name=\"external\"\n                  className={testUtilStyles['external-icon']}\n                  ariaLabel={i18n('i18nStrings.externalIconAriaLabel', i18nStrings?.externalIconAriaLabel)}\n                />\n              </>\n            )}\n          </>\n        )}\n        <RightIcon {...iconProps} />\n      </>\n    );\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    const disabledReasonProps = {\n      onFocus: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n      onBlur: isDisabledWithReason ? () => setShowTooltip(false) : undefined,\n      onMouseEnter: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n      onMouseLeave: isDisabledWithReason ? () => setShowTooltip(false) : undefined,\n      ...(isDisabledWithReason ? targetProps : {}),\n    };\n    const disabledReasonContent = (\n      <>\n        {descriptionEl}\n        {showTooltip && (\n          <Tooltip\n            className={testUtilStyles['disabled-reason-tooltip']}\n            trackRef={buttonRef}\n            value={disabledReason!}\n            onDismiss={() => setShowTooltip(false)}\n          />\n        )}\n      </>\n    );\n\n    if (isAnchor) {\n      return (\n        // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <>\n          <a\n            {...buttonProps}\n            href={href}\n            target={target}\n            // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n            rel={rel ?? (target === '_blank' ? 'noopener noreferrer' : undefined)}\n            aria-disabled={isNotInteractive ? true : undefined}\n            download={download}\n            {...disabledReasonProps}\n          >\n            {buttonContent}\n            {isDisabledWithReason && disabledReasonContent}\n          </a>\n          {loading && loadingText && (\n            <InternalLiveRegion tagName=\"span\" hidden={true}>\n              {loadingText}\n            </InternalLiveRegion>\n          )}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <button\n          {...buttonProps}\n          type={formAction === 'none' ? 'button' : 'submit'}\n          disabled={disabled && !__focusable && !isDisabledWithReason}\n          aria-disabled={hasAriaDisabled ? true : undefined}\n          {...disabledReasonProps}\n        >\n          {buttonContent}\n          {isDisabledWithReason && disabledReasonContent}\n        </button>\n        {loading && loadingText && (\n          <InternalLiveRegion tagName=\"span\" hidden={true}>\n            {loadingText}\n          </InternalLiveRegion>\n        )}\n      </>\n    );\n  }\n);\n\nexport default InternalButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}