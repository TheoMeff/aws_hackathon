{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/components/eventDisplay.js\";\nimport React, { createRef } from 'react';\nimport './eventDisplay.css';\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Toggle } from '@cloudscape-design/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass S2sEventDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audioInputIndex: 0,\n      eventsByContentName: [],\n      selectedEvent: null,\n      showEventJson: false,\n      displayUsage: false\n    };\n    this.message = null;\n    this.reset = false;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.message != this.props.message) {\n      this.displayEvent(this.props.message);\n    }\n  }\n  cleanup() {\n    this.setState({\n      eventsByContentName: [],\n      audioInputIndex: 0,\n      selectedEvent: null,\n      showEventJson: false\n    });\n  }\n  displayEvent(event, type) {\n    if (event && event.event) {\n      const eventName = Object.keys(event === null || event === void 0 ? void 0 : event.event)[0];\n      let key = null;\n      let ts = Date.now();\n      let interrupted = false;\n      const contentType = event.event[eventName].type;\n      const contentName = event.event[eventName].contentName;\n      const contentId = event.event[eventName].contentId;\n      if (eventName === \"audioOutput\") {\n        key = `${eventName}-${contentId}`;\n        // truncate event audio content\n        event.event.audioOutput.content = event.event.audioOutput.content.substr(0, 10);\n      } else if (eventName === \"audioInput\") {\n        key = `${eventName}-${contentName}-${this.state.audioInputIndex}`;\n      } else if (eventName === \"contentStart\" || eventName === \"textInput\" || eventName === \"contentEnd\") {\n        key = `${eventName}}-${contentName}-${contentType}`;\n        if (type === \"in\" && event.event[eventName].type === \"AUDIO\") {\n          this.setState({\n            audioInputIndex: this.state.audioInputIndex + 1\n          });\n        } else if (type === \"out\") {\n          key = `${eventName}-${contentName}-${contentType}-${ts}`;\n        }\n      } else if (eventName === \"textOutput\") {\n        const role = event.event[eventName].role;\n        const content = event.event[eventName].content;\n        if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n          const evt = JSON.parse(content);\n          interrupted = evt.interrupted === true;\n        }\n        key = `${eventName}-${ts}`;\n      } else {\n        key = `${eventName}-${ts}`;\n      }\n      let eventsByContentName = this.state.eventsByContentName;\n      if (eventsByContentName === null) eventsByContentName = [];\n      let exists = false;\n      for (var i = 0; i < eventsByContentName.length; i++) {\n        var item = eventsByContentName[i];\n        if (item.key === key && item.type === type) {\n          item.events.push(event);\n          item.interrupted = interrupted;\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        const item = {\n          key: key,\n          name: eventName,\n          type: type,\n          events: [event],\n          ts: ts\n        };\n        eventsByContentName.unshift(item);\n      }\n      this.setState({\n        eventsByContentName: eventsByContentName\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggleUsage\",\n        children: /*#__PURE__*/_jsxDEV(Toggle, {\n          onChange: ({\n            detail\n          }) => this.setState({\n            displayUsage: detail.checked\n          }),\n          checked: this.state.displayUsage,\n          children: \"Display Usage Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events\",\n        children: [this.state.eventsByContentName.map(event => {\n          if (!this.state.displayUsage && event.name === \"usageEvent\") return;else return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: event.name === \"toolUse\" ? \"event-tool\" : event.name === \"usageEvent\" ? \"event-usage\" : event.interrupted === true ? \"event-int\" : event.type === \"in\" ? \"event-in\" : \"event-out\",\n            onClick: () => {\n              this.setState({\n                selectedEvent: event,\n                showEventJson: true\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: event.type === \"in\" ? \"arrow-down\" : \"arrow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), \"\\xA0\\xA0\", event.name, event.events.length > 1 ? ` (${event.events.length})` : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"tooltip\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                id: \"jsonDisplay\",\n                children: event.events.map(e => {\n                  return JSON.stringify(e, null, 2);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Modal, {\n          onDismiss: () => this.setState({\n            showEventJson: false\n          }),\n          visible: this.state.showEventJson,\n          header: \"Event details\",\n          size: \"medium\",\n          footer: /*#__PURE__*/_jsxDEV(Box, {\n            float: \"right\",\n            children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n              direction: \"horizontal\",\n              size: \"xs\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => this.setState({\n                  showEventJson: false\n                }),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"eventdetail\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              id: \"jsonDisplay\",\n              children: this.state.selectedEvent && this.state.selectedEvent.events.map(e => {\n                const eventType = Object.keys(e === null || e === void 0 ? void 0 : e.event)[0];\n                if (eventType === \"audioInput\" || eventType === \"audioOutput\") e.event[eventType].content = e.event[eventType].content.substr(0, 10) + \"...\";\n                const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                  year: \"numeric\",\n                  month: \"2-digit\",\n                  day: \"2-digit\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                  fractionalSecondDigits: 3,\n                  // Show milliseconds\n                  hour12: false // 24-hour format\n                });\n                var displayJson = {\n                  ...e\n                };\n                delete displayJson.timestamp;\n                return ts + \"\\n\" + JSON.stringify(displayJson, null, 2) + \"\\n\";\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default S2sEventDisplay;","map":{"version":3,"names":["React","createRef","Icon","Alert","Button","Modal","Box","SpaceBetween","Toggle","jsxDEV","_jsxDEV","S2sEventDisplay","Component","constructor","props","state","audioInputIndex","eventsByContentName","selectedEvent","showEventJson","displayUsage","message","reset","componentDidUpdate","prevProps","prevState","displayEvent","cleanup","setState","event","type","eventName","Object","keys","key","ts","Date","now","interrupted","contentType","contentName","contentId","audioOutput","content","substr","role","startsWith","evt","JSON","parse","exists","i","length","item","events","push","name","unshift","render","children","className","onChange","detail","checked","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","class","id","e","stringify","onDismiss","visible","header","size","footer","float","direction","variant","eventType","timestamp","toLocaleString","undefined","year","month","day","hour","minute","second","fractionalSecondDigits","hour12","displayJson"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/components/eventDisplay.js"],"sourcesContent":["import React, { createRef } from 'react';\nimport './eventDisplay.css'\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Toggle } from '@cloudscape-design/components';\n\nclass S2sEventDisplay extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            audioInputIndex: 0,\n            eventsByContentName: [],\n\n            selectedEvent: null,\n            showEventJson: false,\n\n            displayUsage: false,\n        };\n        this.message = null;\n        this.reset= false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.message != this.props.message) {\n            this.displayEvent(this.props.message);\n        }\n    }\n\n    cleanup() {\n        this.setState({\n                eventsByContentName: [], \n                audioInputIndex: 0,\n                selectedEvent: null,\n                showEventJson: false\n            });\n    }\n    \n    displayEvent(event, type) {\n        if (event && event.event) {\n            const eventName = Object.keys(event?.event)[0];\n            let key = null;\n            let ts = Date.now();\n            let interrupted = false;\n            const contentType = event.event[eventName].type;\n            const contentName = event.event[eventName].contentName;\n            const contentId = event.event[eventName].contentId;\n\n            if (eventName === \"audioOutput\") {\n                key = `${eventName}-${contentId}`;\n                // truncate event audio content\n                event.event.audioOutput.content = event.event.audioOutput.content.substr(0,10);\n            }\n            else if (eventName === \"audioInput\") {\n                key = `${eventName}-${contentName}-${this.state.audioInputIndex}`;\n            }\n            else if (eventName === \"contentStart\" || eventName === \"textInput\" || eventName === \"contentEnd\") {\n                key = `${eventName}}-${contentName}-${contentType}`;\n                if (type === \"in\" && event.event[eventName].type === \"AUDIO\") {\n                    this.setState({audioInputIndex: this.state.audioInputIndex + 1});\n                }\n                else if(type === \"out\") {\n                    key = `${eventName}-${contentName}-${contentType}-${ts}`;\n                }\n            }\n            else if(eventName === \"textOutput\") {\n                const role = event.event[eventName].role;\n                const content = event.event[eventName].content;\n                if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n                    const evt = JSON.parse(content);\n                    interrupted = evt.interrupted === true;\n                }\n                key = `${eventName}-${ts}`;\n            }\n            else {\n                key = `${eventName}-${ts}`;\n            }\n\n            let eventsByContentName = this.state.eventsByContentName;\n            if (eventsByContentName === null)\n                eventsByContentName = [];\n\n            let exists = false;\n            for(var i=0;i<eventsByContentName.length;i++) {\n                var item = eventsByContentName[i];\n                if (item.key === key && item.type === type) {\n                    item.events.push(event);\n\n                    item.interrupted = interrupted;\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                const item = {\n                    key: key, \n                    name: eventName, \n                    type: type, \n                    events: [event], \n                    ts: ts,\n                };\n                eventsByContentName.unshift(item);\n            }\n            this.setState({eventsByContentName: eventsByContentName});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"toggleUsage\">\n                <Toggle\n                    onChange={({ detail }) =>\n                        this.setState({displayUsage: detail.checked })\n                    }\n                    checked={this.state.displayUsage}\n                    >\n                    Display Usage Event\n                </Toggle>\n                </div>\n                <div className='events'>\n                    {this.state.eventsByContentName.map(event=>{\n                        if (!this.state.displayUsage && event.name === \"usageEvent\")\n                            return;\n                        else return <div className={\n                                event.name === \"toolUse\"? \"event-tool\": \n                                event.name === \"usageEvent\"? \"event-usage\": \n                                event.interrupted === true?\"event-int\":\n                                event.type === \"in\"?\"event-in\":\"event-out\"\n                            } \n                            onClick={() => {\n                                this.setState({selectedEvent: event, showEventJson: true});\n                            }}\n                            >\n                            <Icon name={event.type === \"in\"? \"arrow-down\": \"arrow-up\"} />&nbsp;&nbsp;\n                            {event.name}\n                            {event.events.length > 1? ` (${event.events.length})`: \"\"}\n                            <div class=\"tooltip\">\n                                <pre id=\"jsonDisplay\">{event.events.map(e=>{\n                                    return JSON.stringify(e,null,2);\n                                })\n                            }</pre>\n                            </div>\n                        </div>\n                    })}\n                    <Modal\n                        onDismiss={() => this.setState({showEventJson: false})}\n                        visible={this.state.showEventJson}\n                        header=\"Event details\"\n                        size='medium'\n                        footer={\n                            <Box float=\"right\">\n                            <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                                <Button variant=\"link\" onClick={() => this.setState({showEventJson: false})}>Close</Button>\n                            </SpaceBetween>\n                            </Box>\n                        }\n                    >\n                        <div className='eventdetail'>\n                        <pre id=\"jsonDisplay\">\n                            {this.state.selectedEvent && this.state.selectedEvent.events.map(e=>{\n                                const eventType = Object.keys(e?.event)[0];\n                                if (eventType === \"audioInput\" || eventType === \"audioOutput\")\n                                    e.event[eventType].content = e.event[eventType].content.substr(0,10) + \"...\";\n                                const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                                    year: \"numeric\",\n                                    month: \"2-digit\",\n                                    day: \"2-digit\",\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                    second: \"2-digit\",\n                                    fractionalSecondDigits: 3, // Show milliseconds\n                                    hour12: false // 24-hour format\n                                });\n                                var displayJson = { ...e };\n                                delete displayJson.timestamp;\n                                return ts + \"\\n\" + JSON.stringify(displayJson,null,2) + \"\\n\";\n                            })}\n                        </pre>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default S2sEventDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}