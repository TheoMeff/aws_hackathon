{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useMergeRefs, useReducedMotion, warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { focusFlashById } from './flash';\n// Common logic for collapsible and non-collapsible Flashbar\nexport function useFlashbar(_a) {\n  var {\n      items,\n      onItemsAdded,\n      onItemsChanged,\n      onItemsRemoved\n    } = _a,\n    restProps = __rest(_a, [\"items\", \"onItemsAdded\", \"onItemsChanged\", \"onItemsRemoved\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Flashbar', {\n    props: {\n      stackItems: restProps.stackItems\n    }\n  });\n  const allItemsHaveId = useMemo(() => items.every(item => 'id' in item), [items]);\n  const baseProps = getBaseProps(restProps);\n  const ref = useRef(null);\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n  const isReducedMotion = useReducedMotion(ref);\n  const isVisualRefresh = useVisualRefresh();\n  const [previousItems, setPreviousItems] = useState(items);\n  const [nextFocusId, setNextFocusId] = useState(null);\n  if (isDevelopment) {\n    if (items === null || items === void 0 ? void 0 : items.some(item => item.ariaRole === 'alert' && !item.id)) {\n      warnOnce('Flashbar', `You provided \\`ariaRole=\"alert\"\\` for a flashbar item without providing an \\`id\\`. Focus will not be moved to the newly added flash message.`);\n    }\n  }\n  // Track new or removed item IDs in state to only trigger focus changes for newly added items.\n  // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n  if (items) {\n    const newItems = items.filter(({\n      id\n    }) => id && !previousItems.some(item => item.id === id));\n    const removedItems = previousItems.filter(({\n      id\n    }) => id && !items.some(item => item.id === id));\n    if (newItems.length > 0 || removedItems.length > 0) {\n      setPreviousItems(items);\n      onItemsAdded === null || onItemsAdded === void 0 ? void 0 : onItemsAdded(newItems);\n      onItemsRemoved === null || onItemsRemoved === void 0 ? void 0 : onItemsRemoved(removedItems);\n      onItemsChanged === null || onItemsChanged === void 0 ? void 0 : onItemsChanged({\n        allItemsHaveId,\n        isReducedMotion\n      });\n      const newFocusItems = newItems.filter(({\n        ariaRole\n      }) => ariaRole === 'alert');\n      if (newFocusItems.length > 0) {\n        setNextFocusId(newFocusItems[0].id);\n      }\n    }\n  }\n  useEffect(() => {\n    if (nextFocusId) {\n      focusFlashById(ref.current, nextFocusId);\n    }\n  }, [nextFocusId, ref]);\n  return {\n    allItemsHaveId,\n    baseProps,\n    isReducedMotion,\n    isVisualRefresh,\n    mergedRef,\n    ref\n  };\n}","map":{"version":3,"names":["useEffect","useMemo","useRef","useState","useMergeRefs","useReducedMotion","warnOnce","getBaseProps","useBaseComponent","useVisualRefresh","isDevelopment","focusFlashById","useFlashbar","_a","items","onItemsAdded","onItemsChanged","onItemsRemoved","restProps","__rest","__internalRootRef","props","stackItems","allItemsHaveId","every","item","baseProps","ref","mergedRef","isReducedMotion","isVisualRefresh","previousItems","setPreviousItems","nextFocusId","setNextFocusId","some","ariaRole","id","newItems","filter","removedItems","length","newFocusItems","current"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/flashbar/common.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { useMergeRefs, useReducedMotion, warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { focusFlashById } from './flash';\nimport { FlashbarProps } from './interfaces';\n\n// Common logic for collapsible and non-collapsible Flashbar\nexport function useFlashbar({\n  items,\n  onItemsAdded,\n  onItemsChanged,\n  onItemsRemoved,\n  ...restProps\n}: FlashbarProps & {\n  onItemsAdded?: (items: FlashbarProps.MessageDefinition[]) => void;\n  onItemsRemoved?: (items: FlashbarProps.MessageDefinition[]) => void;\n  onItemsChanged?: (options?: { allItemsHaveId?: boolean; isReducedMotion?: boolean }) => void;\n}) {\n  const { __internalRootRef } = useBaseComponent('Flashbar', {\n    props: { stackItems: restProps.stackItems },\n  });\n  const allItemsHaveId = useMemo(() => items.every(item => 'id' in item), [items]);\n  const baseProps = getBaseProps(restProps);\n  const ref = useRef<HTMLDivElement | null>(null);\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n  const isReducedMotion = useReducedMotion(ref);\n  const isVisualRefresh = useVisualRefresh();\n  const [previousItems, setPreviousItems] = useState<ReadonlyArray<FlashbarProps.MessageDefinition>>(items);\n  const [nextFocusId, setNextFocusId] = useState<string | null>(null);\n\n  if (isDevelopment) {\n    if (items?.some(item => item.ariaRole === 'alert' && !item.id)) {\n      warnOnce(\n        'Flashbar',\n        `You provided \\`ariaRole=\"alert\"\\` for a flashbar item without providing an \\`id\\`. Focus will not be moved to the newly added flash message.`\n      );\n    }\n  }\n\n  // Track new or removed item IDs in state to only trigger focus changes for newly added items.\n  // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n  if (items) {\n    const newItems = items.filter(({ id }) => id && !previousItems.some(item => item.id === id));\n    const removedItems = previousItems.filter(({ id }) => id && !items.some(item => item.id === id));\n    if (newItems.length > 0 || removedItems.length > 0) {\n      setPreviousItems(items);\n      onItemsAdded?.(newItems);\n      onItemsRemoved?.(removedItems);\n      onItemsChanged?.({ allItemsHaveId, isReducedMotion });\n\n      const newFocusItems = newItems.filter(({ ariaRole }) => ariaRole === 'alert');\n      if (newFocusItems.length > 0) {\n        setNextFocusId(newFocusItems[0].id!);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (nextFocusId) {\n      focusFlashById(ref.current, nextFocusId);\n    }\n  }, [nextFocusId, ref]);\n\n  return {\n    allItemsHaveId,\n    baseProps,\n    isReducedMotion,\n    isVisualRefresh,\n    mergedRef,\n    ref,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}