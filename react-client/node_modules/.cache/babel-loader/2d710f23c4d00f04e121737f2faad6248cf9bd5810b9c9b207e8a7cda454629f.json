{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport InternalIcon from '../../icon/internal.js';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport Tooltip from '../../internal/components/tooltip';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport styles from './styles.css.js';\nconst Item = (_a, ref) => {\n  var {\n      option,\n      highlighted,\n      selected,\n      filteringValue,\n      hasCheckbox,\n      virtualPosition,\n      padBottom,\n      isNextSelected,\n      screenReaderContent,\n      ariaPosinset,\n      ariaSetsize,\n      highlightType,\n      withScrollbar,\n      sticky\n    } = _a,\n    restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"virtualPosition\", \"padBottom\", \"isNextSelected\", \"screenReaderContent\", \"ariaPosinset\", \"ariaSetsize\", \"highlightType\", \"withScrollbar\", \"sticky\"]);\n  const baseProps = getBaseProps(restProps);\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n  const disabledReason = disabled && wrappedOption.disabledReason ? wrappedOption.disabledReason : '';\n  const isDisabledWithReason = !!disabledReason;\n  const internalRef = useRef(null);\n  const {\n    descriptionEl,\n    descriptionId\n  } = useHiddenDescription(disabledReason);\n  const [canShowTooltip, setCanShowTooltip] = useState(true);\n  useEffect(() => setCanShowTooltip(true), [highlighted]);\n  return React.createElement(SelectableItem, Object.assign({\n    ariaSelected: Boolean(selected),\n    selected: selected,\n    isNextSelected: isNextSelected,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    isParent: isParent,\n    isChild: isChild,\n    ref: useMergeRefs(ref, internalRef),\n    virtualPosition: virtualPosition,\n    padBottom: padBottom,\n    screenReaderContent: screenReaderContent,\n    ariaPosinset: ariaPosinset,\n    ariaSetsize: ariaSetsize,\n    highlightType: highlightType,\n    ariaDescribedby: isDisabledWithReason ? descriptionId : '',\n    value: option.option.value,\n    withScrollbar: withScrollbar,\n    sticky: sticky\n  }, baseProps), React.createElement(\"div\", {\n    className: clsx(styles.item, !isParent && wrappedOption.labelTag && styles['show-label-tag'])\n  }, hasCheckbox && !isParent && React.createElement(\"div\", {\n    className: styles.checkbox\n  }, React.createElement(CheckboxIcon, {\n    checked: selected || false,\n    disabled: option.disabled\n  })), React.createElement(Option, {\n    option: Object.assign(Object.assign({}, wrappedOption), {\n      disabled\n    }),\n    highlightedOption: highlighted,\n    selectedOption: selected,\n    highlightText: filteringValue,\n    isGroupOption: isParent\n  }), !hasCheckbox && !isParent && selected && React.createElement(\"div\", {\n    className: styles['selected-icon']\n  }, React.createElement(InternalIcon, {\n    name: \"check\"\n  })), isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, highlighted && canShowTooltip && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: internalRef,\n    value: disabledReason,\n    position: \"right\",\n    hideOnOverscroll: true,\n    onDismiss: () => setCanShowTooltip(false)\n  }))));\n};\nexport default React.memo(React.forwardRef(Item));","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","useMergeRefs","InternalIcon","getBaseProps","CheckboxIcon","Option","SelectableItem","Tooltip","useHiddenDescription","styles","Item","_a","ref","option","highlighted","selected","filteringValue","hasCheckbox","virtualPosition","padBottom","isNextSelected","screenReaderContent","ariaPosinset","ariaSetsize","highlightType","withScrollbar","sticky","restProps","__rest","baseProps","isParent","type","isChild","wrappedOption","disabled","disabledReason","isDisabledWithReason","internalRef","descriptionEl","descriptionId","canShowTooltip","setCanShowTooltip","createElement","Object","assign","ariaSelected","Boolean","ariaDescribedby","value","className","item","labelTag","checkbox","checked","highlightedOption","selectedOption","highlightText","isGroupOption","name","Fragment","trackRef","position","hideOnOverscroll","onDismiss","memo","forwardRef"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/select/parts/item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalIcon from '../../icon/internal.js';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nimport Option from '../../internal/components/option';\nimport { DropdownOption, OptionDefinition } from '../../internal/components/option/interfaces';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option.js';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport Tooltip from '../../internal/components/tooltip';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\n\nimport styles from './styles.css.js';\n\nexport interface ItemProps {\n  option: DropdownOption;\n  highlighted?: boolean;\n  selected?: boolean;\n  filteringValue?: string;\n  hasCheckbox?: boolean;\n  virtualPosition?: number;\n  padBottom?: boolean;\n  isNextSelected?: boolean;\n  screenReaderContent?: string;\n  ariaPosinset?: number;\n  ariaSetsize?: number;\n  highlightType?: HighlightType['type'];\n  withScrollbar?: boolean;\n  sticky?: boolean;\n}\n\nconst Item = (\n  {\n    option,\n    highlighted,\n    selected,\n    filteringValue,\n    hasCheckbox,\n    virtualPosition,\n    padBottom,\n    isNextSelected,\n    screenReaderContent,\n    ariaPosinset,\n    ariaSetsize,\n    highlightType,\n    withScrollbar,\n    sticky,\n    ...restProps\n  }: ItemProps,\n  ref: React.Ref<HTMLDivElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption: OptionDefinition = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n  const disabledReason = disabled && wrappedOption.disabledReason ? wrappedOption.disabledReason : '';\n  const isDisabledWithReason = !!disabledReason;\n  const internalRef = useRef<HTMLDivElement>(null);\n\n  const { descriptionEl, descriptionId } = useHiddenDescription(disabledReason);\n\n  const [canShowTooltip, setCanShowTooltip] = useState(true);\n  useEffect(() => setCanShowTooltip(true), [highlighted]);\n\n  return (\n    <SelectableItem\n      ariaSelected={Boolean(selected)}\n      selected={selected}\n      isNextSelected={isNextSelected}\n      highlighted={highlighted}\n      disabled={option.disabled}\n      isParent={isParent}\n      isChild={isChild}\n      ref={useMergeRefs(ref, internalRef)}\n      virtualPosition={virtualPosition}\n      padBottom={padBottom}\n      screenReaderContent={screenReaderContent}\n      ariaPosinset={ariaPosinset}\n      ariaSetsize={ariaSetsize}\n      highlightType={highlightType}\n      ariaDescribedby={isDisabledWithReason ? descriptionId : ''}\n      value={option.option.value}\n      withScrollbar={withScrollbar}\n      sticky={sticky}\n      {...baseProps}\n    >\n      <div className={clsx(styles.item, !isParent && wrappedOption.labelTag && styles['show-label-tag'])}>\n        {hasCheckbox && !isParent && (\n          <div className={styles.checkbox}>\n            <CheckboxIcon checked={selected || false} disabled={option.disabled} />\n          </div>\n        )}\n        <Option\n          option={{ ...wrappedOption, disabled }}\n          highlightedOption={highlighted}\n          selectedOption={selected}\n          highlightText={filteringValue}\n          isGroupOption={isParent}\n        />\n        {!hasCheckbox && !isParent && selected && (\n          <div className={styles['selected-icon']}>\n            <InternalIcon name=\"check\" />\n          </div>\n        )}\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {highlighted && canShowTooltip && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={internalRef}\n                value={disabledReason!}\n                position=\"right\"\n                hideOnOverscroll={true}\n                onDismiss={() => setCanShowTooltip(false)}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </SelectableItem>\n  );\n};\n\nexport default React.memo(React.forwardRef(Item));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}