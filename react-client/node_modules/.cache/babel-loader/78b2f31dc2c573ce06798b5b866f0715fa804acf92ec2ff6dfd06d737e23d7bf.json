{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport InternalButtonDropdown from '../../button-dropdown/internal';\nimport testutilStyles from '../test-classes/styles.css.js';\nconst mapDrawerToItem = (drawer, isTypeCheckbox) => ({\n  id: drawer.id,\n  text: drawer.ariaLabels.drawerName,\n  iconName: drawer.trigger.iconName,\n  iconSvg: drawer.trigger.iconSvg,\n  badge: drawer.badge,\n  itemType: isTypeCheckbox ? 'checkbox' : undefined,\n  checked: drawer.active\n});\nexport default function OverflowMenu({\n  items: drawers,\n  onItemClick,\n  customTriggerBuilder,\n  ariaLabel,\n  globalDrawersStartIndex\n}) {\n  const hasGlobalDrawers = globalDrawersStartIndex !== undefined;\n  const itemsFlatList = drawers.map((item, index) => mapDrawerToItem(item, hasGlobalDrawers && index >= globalDrawersStartIndex));\n  let items;\n  if (hasGlobalDrawers) {\n    items = [{\n      items: itemsFlatList.slice(0, globalDrawersStartIndex)\n    }, {\n      items: itemsFlatList.slice(globalDrawersStartIndex)\n    }];\n  } else {\n    items = itemsFlatList;\n  }\n  return React.createElement(InternalButtonDropdown, {\n    items: items,\n    className: testutilStyles['overflow-menu'],\n    onItemClick: onItemClick,\n    ariaLabel: ariaLabel,\n    variant: \"icon\",\n    customTriggerBuilder: customTriggerBuilder,\n    expandToViewport: true\n  });\n}","map":{"version":3,"names":["React","InternalButtonDropdown","testutilStyles","mapDrawerToItem","drawer","isTypeCheckbox","id","text","ariaLabels","drawerName","iconName","trigger","iconSvg","badge","itemType","undefined","checked","active","OverflowMenu","items","drawers","onItemClick","customTriggerBuilder","ariaLabel","globalDrawersStartIndex","hasGlobalDrawers","itemsFlatList","map","item","index","slice","createElement","className","variant","expandToViewport"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/app-layout/drawer/overflow-menu.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport {\n  ButtonDropdownProps,\n  InternalButtonDropdownProps,\n  InternalItemOrGroup,\n} from '../../button-dropdown/interfaces';\nimport InternalButtonDropdown from '../../button-dropdown/internal';\nimport { CancelableEventHandler } from '../../internal/events';\nimport { AppLayoutProps } from '../interfaces';\n\nimport testutilStyles from '../test-classes/styles.css.js';\n\ntype Drawer = AppLayoutProps.Drawer & { active?: boolean };\n\ninterface OverflowMenuProps {\n  items: Array<Drawer>;\n  onItemClick: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  customTriggerBuilder?: InternalButtonDropdownProps['customTriggerBuilder'];\n  ariaLabel?: string;\n  globalDrawersStartIndex?: number;\n}\n\nconst mapDrawerToItem = (drawer: Drawer, isTypeCheckbox: boolean) => ({\n  id: drawer.id,\n  text: drawer.ariaLabels.drawerName,\n  iconName: drawer.trigger!.iconName,\n  iconSvg: drawer.trigger!.iconSvg,\n  badge: drawer.badge,\n  itemType: isTypeCheckbox ? ('checkbox' as ButtonDropdownProps.ItemType) : undefined,\n  checked: drawer.active,\n});\n\nexport default function OverflowMenu({\n  items: drawers,\n  onItemClick,\n  customTriggerBuilder,\n  ariaLabel,\n  globalDrawersStartIndex,\n}: OverflowMenuProps) {\n  const hasGlobalDrawers = globalDrawersStartIndex !== undefined;\n  const itemsFlatList = drawers.map((item, index) =>\n    mapDrawerToItem(item, hasGlobalDrawers && index >= globalDrawersStartIndex)\n  );\n  let items: ReadonlyArray<InternalItemOrGroup>;\n  if (hasGlobalDrawers) {\n    items = [\n      { items: itemsFlatList.slice(0, globalDrawersStartIndex) },\n      { items: itemsFlatList.slice(globalDrawersStartIndex) },\n    ];\n  } else {\n    items = itemsFlatList;\n  }\n\n  return (\n    <InternalButtonDropdown\n      items={items}\n      className={testutilStyles['overflow-menu']}\n      onItemClick={onItemClick}\n      ariaLabel={ariaLabel}\n      variant=\"icon\"\n      customTriggerBuilder={customTriggerBuilder}\n      expandToViewport={true}\n    />\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAOzB,OAAOC,sBAAsB,MAAM,gCAAgC;AAInE,OAAOC,cAAc,MAAM,+BAA+B;AAY1D,MAAMC,eAAe,GAAGA,CAACC,MAAc,EAAEC,cAAuB,MAAM;EACpEC,EAAE,EAAEF,MAAM,CAACE,EAAE;EACbC,IAAI,EAAEH,MAAM,CAACI,UAAU,CAACC,UAAU;EAClCC,QAAQ,EAAEN,MAAM,CAACO,OAAQ,CAACD,QAAQ;EAClCE,OAAO,EAAER,MAAM,CAACO,OAAQ,CAACC,OAAO;EAChCC,KAAK,EAAET,MAAM,CAACS,KAAK;EACnBC,QAAQ,EAAET,cAAc,GAAI,UAA2C,GAAGU,SAAS;EACnFC,OAAO,EAAEZ,MAAM,CAACa;CACjB,CAAC;AAEF,eAAc,SAAUC,YAAYA,CAAC;EACnCC,KAAK,EAAEC,OAAO;EACdC,WAAW;EACXC,oBAAoB;EACpBC,SAAS;EACTC;AAAuB,CACL;EAClB,MAAMC,gBAAgB,GAAGD,uBAAuB,KAAKT,SAAS;EAC9D,MAAMW,aAAa,GAAGN,OAAO,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAC5C1B,eAAe,CAACyB,IAAI,EAAEH,gBAAgB,IAAII,KAAK,IAAIL,uBAAuB,CAAC,CAC5E;EACD,IAAIL,KAAyC;EAC7C,IAAIM,gBAAgB,EAAE;IACpBN,KAAK,GAAG,CACN;MAAEA,KAAK,EAAEO,aAAa,CAACI,KAAK,CAAC,CAAC,EAAEN,uBAAuB;IAAC,CAAE,EAC1D;MAAEL,KAAK,EAAEO,aAAa,CAACI,KAAK,CAACN,uBAAuB;IAAC,CAAE,CACxD;GACF,MAAM;IACLL,KAAK,GAAGO,aAAa;;EAGvB,OACE1B,KAAA,CAAA+B,aAAA,CAAC9B,sBAAsB;IACrBkB,KAAK,EAAEA,KAAK;IACZa,SAAS,EAAE9B,cAAc,CAAC,eAAe,CAAC;IAC1CmB,WAAW,EAAEA,WAAW;IACxBE,SAAS,EAAEA,SAAS;IACpBU,OAAO,EAAC,MAAM;IACdX,oBAAoB,EAAEA,oBAAoB;IAC1CY,gBAAgB,EAAE;EAAI,EACtB;AAEN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}