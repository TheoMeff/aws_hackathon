{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { matchBreakpointMapping } from '../internal/breakpoints';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport InternalLiveRegion from '../live-region/internal';\nimport { AdditionalInfo } from './additional-info';\nimport { gridDefaults } from './grid-defaults';\nimport { Row } from './row';\nimport { getGridTemplateColumns } from './utils';\nimport styles from './styles.css.js';\nconst InternalAttributeEditor = React.forwardRef((_a, ref) => {\n  var {\n      additionalInfo,\n      disableAddButton,\n      definition = [{}],\n      gridLayout,\n      items,\n      isItemRemovable = () => true,\n      empty,\n      addButtonText,\n      addButtonVariant,\n      removeButtonText,\n      removeButtonAriaLabel,\n      customRowActions,\n      i18nStrings,\n      onAddButtonClick,\n      onRemoveButtonClick,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"additionalInfo\", \"disableAddButton\", \"definition\", \"gridLayout\", \"items\", \"isItemRemovable\", \"empty\", \"addButtonText\", \"addButtonVariant\", \"removeButtonText\", \"removeButtonAriaLabel\", \"customRowActions\", \"i18nStrings\", \"onAddButtonClick\", \"onRemoveButtonClick\", \"__internalRootRef\"]);\n  const removeButtonRefs = useRef([]);\n  const addButtonRef = useRef(null);\n  const wasNonEmpty = useRef(false);\n  const [removalAnnouncement, setRemovalAnnouncement] = useState('');\n  const baseProps = getBaseProps(props);\n  const isEmpty = items && items.length === 0;\n  wasNonEmpty.current = wasNonEmpty.current || !isEmpty;\n  useImperativeHandle(ref, () => ({\n    focusRemoveButton(rowIndex) {\n      var _a;\n      (_a = removeButtonRefs.current[rowIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    focusAddButton() {\n      var _a;\n      (_a = addButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }));\n  const additionalInfoId = useUniqueId('attribute-editor-info');\n  const infoAriaDescribedBy = additionalInfo ? additionalInfoId : undefined;\n  const prevItemsLength = usePrevious(items.length);\n  React.useEffect(() => {\n    if (prevItemsLength && prevItemsLength > items.length && (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive)) {\n      setRemovalAnnouncement(i18nStrings.itemRemovedAriaLive);\n    } else {\n      setRemovalAnnouncement('');\n    }\n    // we only want to announce when the number of items decreases (i.e. when an item is removed)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive]);\n  if (!gridLayout) {\n    gridLayout = gridDefaults[definition.length];\n    if (!gridLayout) {\n      console.warn('AttributeEditor', '`gridLayout` is required for more than 6 attributes. Cannot render.');\n      gridLayout = [];\n    }\n  }\n  const gridLayoutBreakpoints = gridLayout.reduce((acc, layout) => Object.assign(Object.assign({}, acc), {\n    [layout.breakpoint || 'default']: layout\n  }), {});\n  const [breakpoint, breakpointRef] = useContainerBreakpoints(Object.keys(gridLayoutBreakpoints));\n  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n  const gridLayoutForBreakpoint = matchBreakpointMapping(gridLayoutBreakpoints, breakpoint || 'default');\n  if (!gridLayoutForBreakpoint) {\n    console.warn('AttributeEditor', `No \\`gridLayout\\` entry found for breakpoint ${breakpoint}. Cannot render.`);\n    return React.createElement(\"div\", null);\n  }\n  const totalColumnsInLayout = gridLayoutForBreakpoint.rows.reduce((total, columns) => total + columns.length, 0);\n  if (totalColumnsInLayout !== definition.length) {\n    console.warn('AttributeEditor', `Incorrect number of columns in layout (${totalColumnsInLayout}) for definition (${definition.length}). Cannot render.`);\n    return React.createElement(\"div\", null);\n  }\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root),\n    style: {\n      gridTemplateColumns: getGridTemplateColumns(gridLayoutForBreakpoint)\n    }\n  }), isEmpty && React.createElement(\"div\", {\n    className: clsx(styles.empty, wasNonEmpty.current && styles['empty-appear'])\n  }, empty), items.map((item, index) => React.createElement(Row, {\n    key: index,\n    index: index,\n    breakpoint: breakpoint,\n    layout: gridLayoutForBreakpoint,\n    item: item,\n    definition: definition,\n    i18nStrings: i18nStrings,\n    removable: isItemRemovable(item),\n    removeButtonText: removeButtonText,\n    removeButtonRefs: removeButtonRefs.current,\n    customRowActions: customRowActions,\n    onRemoveButtonClick: onRemoveButtonClick,\n    removeButtonAriaLabel: removeButtonAriaLabel\n  })), React.createElement(\"div\", {\n    className: styles['add-row']\n  }, React.createElement(InternalButton, {\n    className: styles['add-button'],\n    disabled: disableAddButton,\n    // Using aria-disabled=\"true\" and tabindex=\"-1\" instead of \"disabled\"\n    // because focus can be dynamically moved to this button by calling\n    // `focusAddButton()` on the ref.\n    __nativeAttributes: disableAddButton ? {\n      tabIndex: -1\n    } : {},\n    __focusable: true,\n    onClick: onAddButtonClick,\n    formAction: \"none\",\n    ref: addButtonRef,\n    ariaDescribedby: infoAriaDescribedBy,\n    variant: addButtonVariant,\n    iconName: addButtonVariant === 'inline-link' ? 'add-plus' : undefined\n  }, addButtonText), React.createElement(InternalLiveRegion, {\n    \"data-testid\": \"removal-announcement\",\n    tagName: \"span\",\n    hidden: true,\n    delay: 5,\n    key: items.length\n  }, removalAnnouncement), !!additionalInfo && React.createElement(AdditionalInfo, {\n    id: infoAriaDescribedBy\n  }, additionalInfo)));\n});\nexport default InternalAttributeEditor;","map":{"version":3,"names":["React","useImperativeHandle","useRef","useState","clsx","useMergeRefs","InternalButton","getBaseProps","matchBreakpointMapping","useContainerBreakpoints","usePrevious","useUniqueId","InternalLiveRegion","AdditionalInfo","gridDefaults","Row","getGridTemplateColumns","styles","InternalAttributeEditor","forwardRef","_a","ref","additionalInfo","disableAddButton","definition","gridLayout","items","isItemRemovable","empty","addButtonText","addButtonVariant","removeButtonText","removeButtonAriaLabel","customRowActions","i18nStrings","onAddButtonClick","onRemoveButtonClick","__internalRootRef","props","__rest","removeButtonRefs","addButtonRef","wasNonEmpty","removalAnnouncement","setRemovalAnnouncement","baseProps","isEmpty","length","current","focusRemoveButton","rowIndex","focus","focusAddButton","additionalInfoId","infoAriaDescribedBy","undefined","prevItemsLength","useEffect","itemRemovedAriaLive","console","warn","gridLayoutBreakpoints","reduce","acc","layout","Object","assign","breakpoint","breakpointRef","keys","mergedRef","gridLayoutForBreakpoint","createElement","totalColumnsInLayout","rows","total","columns","className","root","style","gridTemplateColumns","map","item","index","key","removable","disabled","__nativeAttributes","tabIndex","__focusable","onClick","formAction","ariaDescribedby","variant","iconName","tagName","hidden","delay","id"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/attribute-editor/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { matchBreakpointMapping } from '../internal/breakpoints';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { SomeRequired } from '../internal/types';\nimport InternalLiveRegion from '../live-region/internal';\nimport { AdditionalInfo } from './additional-info';\nimport { gridDefaults } from './grid-defaults';\nimport { AttributeEditorForwardRefType, AttributeEditorProps } from './interfaces';\nimport { Row } from './row';\nimport { getGridTemplateColumns } from './utils';\n\nimport styles from './styles.css.js';\n\ntype InternalAttributeEditorProps<T> = SomeRequired<AttributeEditorProps<T>, 'items' | 'addButtonVariant'> &\n  InternalBaseComponentProps;\n\nconst InternalAttributeEditor = React.forwardRef(\n  <T,>(\n    {\n      additionalInfo,\n      disableAddButton,\n      definition = [{}],\n      gridLayout,\n      items,\n      isItemRemovable = () => true,\n      empty,\n      addButtonText,\n      addButtonVariant,\n      removeButtonText,\n      removeButtonAriaLabel,\n      customRowActions,\n      i18nStrings,\n      onAddButtonClick,\n      onRemoveButtonClick,\n      __internalRootRef = null,\n      ...props\n    }: InternalAttributeEditorProps<T>,\n    ref: React.Ref<AttributeEditorProps.Ref>\n  ) => {\n    const removeButtonRefs = useRef<Array<ButtonProps.Ref | undefined>>([]);\n    const addButtonRef = useRef<ButtonProps.Ref>(null);\n    const wasNonEmpty = useRef<boolean>(false);\n    const [removalAnnouncement, setRemovalAnnouncement] = useState<string>('');\n\n    const baseProps = getBaseProps(props);\n    const isEmpty = items && items.length === 0;\n\n    wasNonEmpty.current = wasNonEmpty.current || !isEmpty;\n\n    useImperativeHandle(ref, () => ({\n      focusRemoveButton(rowIndex: number) {\n        removeButtonRefs.current[rowIndex]?.focus();\n      },\n      focusAddButton() {\n        addButtonRef.current?.focus();\n      },\n    }));\n\n    const additionalInfoId = useUniqueId('attribute-editor-info');\n    const infoAriaDescribedBy = additionalInfo ? additionalInfoId : undefined;\n\n    const prevItemsLength = usePrevious(items.length);\n\n    React.useEffect(() => {\n      if (prevItemsLength && prevItemsLength > items.length && i18nStrings?.itemRemovedAriaLive) {\n        setRemovalAnnouncement(i18nStrings.itemRemovedAriaLive);\n      } else {\n        setRemovalAnnouncement('');\n      }\n      // we only want to announce when the number of items decreases (i.e. when an item is removed)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [items, i18nStrings?.itemRemovedAriaLive]);\n\n    if (!gridLayout) {\n      gridLayout = gridDefaults[definition.length];\n      if (!gridLayout) {\n        console.warn('AttributeEditor', '`gridLayout` is required for more than 6 attributes. Cannot render.');\n        gridLayout = [];\n      }\n    }\n\n    const gridLayoutBreakpoints = gridLayout.reduce(\n      (acc, layout) => ({\n        ...acc,\n        [layout.breakpoint || 'default']: layout,\n      }),\n      {} as Record<AttributeEditorProps.Breakpoint, AttributeEditorProps.GridLayout>\n    );\n\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(\n      Object.keys(gridLayoutBreakpoints) as AttributeEditorProps.Breakpoint[]\n    );\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    const gridLayoutForBreakpoint = matchBreakpointMapping(gridLayoutBreakpoints, breakpoint || 'default');\n\n    if (!gridLayoutForBreakpoint) {\n      console.warn('AttributeEditor', `No \\`gridLayout\\` entry found for breakpoint ${breakpoint}. Cannot render.`);\n      return <div />;\n    }\n\n    const totalColumnsInLayout = gridLayoutForBreakpoint.rows.reduce((total, columns) => total + columns.length, 0);\n    if (totalColumnsInLayout !== definition.length) {\n      console.warn(\n        'AttributeEditor',\n        `Incorrect number of columns in layout (${totalColumnsInLayout}) for definition (${definition.length}). Cannot render.`\n      );\n      return <div />;\n    }\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(baseProps.className, styles.root)}\n        style={{ gridTemplateColumns: getGridTemplateColumns(gridLayoutForBreakpoint) }}\n      >\n        {isEmpty && <div className={clsx(styles.empty, wasNonEmpty.current && styles['empty-appear'])}>{empty}</div>}\n        {items.map((item, index) => (\n          <Row<T>\n            key={index}\n            index={index}\n            breakpoint={breakpoint}\n            layout={gridLayoutForBreakpoint}\n            item={item}\n            definition={definition}\n            i18nStrings={i18nStrings}\n            removable={isItemRemovable(item)}\n            removeButtonText={removeButtonText}\n            removeButtonRefs={removeButtonRefs.current}\n            customRowActions={customRowActions}\n            onRemoveButtonClick={onRemoveButtonClick}\n            removeButtonAriaLabel={removeButtonAriaLabel}\n          />\n        ))}\n\n        <div className={styles['add-row']}>\n          <InternalButton\n            className={styles['add-button']}\n            disabled={disableAddButton}\n            // Using aria-disabled=\"true\" and tabindex=\"-1\" instead of \"disabled\"\n            // because focus can be dynamically moved to this button by calling\n            // `focusAddButton()` on the ref.\n            __nativeAttributes={disableAddButton ? { tabIndex: -1 } : {}}\n            __focusable={true}\n            onClick={onAddButtonClick}\n            formAction=\"none\"\n            ref={addButtonRef}\n            ariaDescribedby={infoAriaDescribedBy}\n            variant={addButtonVariant}\n            iconName={addButtonVariant === 'inline-link' ? 'add-plus' : undefined}\n          >\n            {addButtonText}\n          </InternalButton>\n          <InternalLiveRegion\n            data-testid=\"removal-announcement\"\n            tagName=\"span\"\n            hidden={true}\n            delay={5}\n            key={items.length}\n          >\n            {removalAnnouncement}\n          </InternalLiveRegion>\n          {!!additionalInfo && <AdditionalInfo id={infoAriaDescribedBy}>{additionalInfo}</AdditionalInfo>}\n        </div>\n      </div>\n    );\n  }\n) as AttributeEditorForwardRefType;\n\nexport default InternalAttributeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}