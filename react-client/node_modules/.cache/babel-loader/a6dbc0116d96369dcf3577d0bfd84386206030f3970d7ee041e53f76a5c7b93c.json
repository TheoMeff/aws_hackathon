{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport InternalIcon from '../icon/internal';\nimport Tooltip from '../internal/components/tooltip';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nexport const Segment = React.forwardRef(({\n  disabled,\n  disabledReason,\n  text,\n  iconName,\n  iconAlt,\n  iconUrl,\n  iconSvg,\n  isActive,\n  onClick,\n  onKeyDown,\n  tabIndex,\n  id\n}, ref) => {\n  const buttonRef = useRef(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const isDisabledWithReason = disabled && !!disabledReason;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(disabledReason);\n  const isVisualRefresh = useVisualRefresh();\n  return React.createElement(\"button\", Object.assign({\n    className: clsx(styles.segment, {\n      [styles.disabled]: !!disabled\n    }, {\n      [styles.selected]: isActive\n    }, {\n      [styles.refresh]: isVisualRefresh\n    }),\n    ref: useMergeRefs(ref, buttonRef),\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    disabled: disabled && !disabledReason,\n    \"aria-disabled\": isDisabledWithReason ? 'true' : undefined,\n    type: \"button\",\n    tabIndex: tabIndex,\n    \"aria-pressed\": isActive ? 'true' : 'false',\n    \"aria-label\": !text ? iconAlt : undefined,\n    onFocus: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onBlur: isDisabledWithReason ? () => setShowTooltip(false) : undefined,\n    onMouseEnter: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onMouseLeave: isDisabledWithReason ? () => setShowTooltip(false) : undefined\n  }, isDisabledWithReason ? targetProps : {}, {\n    \"data-testid\": id\n  }), (iconName || iconUrl || iconSvg) && React.createElement(InternalIcon, {\n    className: clsx(styles.icon, text ? styles['with-text'] : styles['with-no-text']),\n    name: iconName,\n    url: iconUrl,\n    svg: iconSvg,\n    alt: iconAlt,\n    variant: disabled ? 'disabled' : 'normal'\n  }), React.createElement(\"span\", null, text), isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: buttonRef,\n    value: disabledReason,\n    onDismiss: () => setShowTooltip(false)\n  })));\n});","map":{"version":3,"names":["React","useRef","useState","clsx","useMergeRefs","InternalIcon","Tooltip","useHiddenDescription","useVisualRefresh","styles","Segment","forwardRef","disabled","disabledReason","text","iconName","iconAlt","iconUrl","iconSvg","isActive","onClick","onKeyDown","tabIndex","id","ref","buttonRef","showTooltip","setShowTooltip","isDisabledWithReason","targetProps","descriptionEl","isVisualRefresh","createElement","Object","assign","className","segment","selected","refresh","undefined","type","onFocus","onBlur","onMouseEnter","onMouseLeave","icon","name","url","svg","alt","variant","Fragment","trackRef","value","onDismiss"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/segmented-control/segment.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalIcon from '../icon/internal';\nimport Tooltip from '../internal/components/tooltip';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SegmentedControlProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface SegmentProps extends SegmentedControlProps.Option {\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLButtonElement>) => void;\n  isActive: boolean;\n  tabIndex: number;\n}\n\nexport const Segment = React.forwardRef(\n  (\n    {\n      disabled,\n      disabledReason,\n      text,\n      iconName,\n      iconAlt,\n      iconUrl,\n      iconSvg,\n      isActive,\n      onClick,\n      onKeyDown,\n      tabIndex,\n      id,\n    }: SegmentProps,\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    const buttonRef = useRef<HTMLElement>(null);\n    const [showTooltip, setShowTooltip] = useState(false);\n    const isDisabledWithReason = disabled && !!disabledReason;\n\n    const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);\n    const isVisualRefresh = useVisualRefresh();\n\n    return (\n      <button\n        className={clsx(\n          styles.segment,\n          { [styles.disabled]: !!disabled },\n          { [styles.selected]: isActive },\n          { [styles.refresh]: isVisualRefresh }\n        )}\n        ref={useMergeRefs(ref, buttonRef)}\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        disabled={disabled && !disabledReason}\n        aria-disabled={isDisabledWithReason ? 'true' : undefined}\n        type=\"button\"\n        tabIndex={tabIndex}\n        aria-pressed={isActive ? 'true' : 'false'}\n        aria-label={!text ? iconAlt : undefined}\n        onFocus={isDisabledWithReason ? () => setShowTooltip(true) : undefined}\n        onBlur={isDisabledWithReason ? () => setShowTooltip(false) : undefined}\n        onMouseEnter={isDisabledWithReason ? () => setShowTooltip(true) : undefined}\n        onMouseLeave={isDisabledWithReason ? () => setShowTooltip(false) : undefined}\n        {...(isDisabledWithReason ? targetProps : {})}\n        data-testid={id}\n      >\n        {(iconName || iconUrl || iconSvg) && (\n          <InternalIcon\n            className={clsx(styles.icon, text ? styles['with-text'] : styles['with-no-text'])}\n            name={iconName}\n            url={iconUrl}\n            svg={iconSvg}\n            alt={iconAlt}\n            variant={disabled ? 'disabled' : 'normal'}\n          />\n        )}\n        <span>{text}</span>\n\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {showTooltip && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={buttonRef}\n                value={disabledReason!}\n                onDismiss={() => setShowTooltip(false)}\n              />\n            )}\n          </>\n        )}\n      </button>\n    );\n  }\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}