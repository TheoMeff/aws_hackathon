{"ast":null,"code":"function base64ToFloat32Array(base64String) {\n  const binaryString = atob(base64String);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  const int16Array = new Int16Array(bytes.buffer);\n  const float32Array = new Float32Array(int16Array.length);\n  for (let i = 0; i < int16Array.length; i++) {\n    float32Array[i] = int16Array[i] / 32768.0;\n  }\n  return float32Array;\n}\nexport { base64ToFloat32Array };","map":{"version":3,"names":["base64ToFloat32Array","base64String","binaryString","atob","bytes","Uint8Array","length","i","charCodeAt","int16Array","Int16Array","buffer","float32Array","Float32Array"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/src/helper/audioHelper.js"],"sourcesContent":["function base64ToFloat32Array(base64String) {\n    const binaryString = atob(base64String);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    const int16Array = new Int16Array(bytes.buffer);\n    const float32Array = new Float32Array(int16Array.length);\n    for (let i = 0; i < int16Array.length; i++) {\n        float32Array[i] = int16Array[i] / 32768.0;\n    }\n\n    return float32Array;\n}\n\nexport { base64ToFloat32Array };"],"mappings":"AAAA,SAASA,oBAAoBA,CAACC,YAAY,EAAE;EACxC,MAAMC,YAAY,GAAGC,IAAI,CAACF,YAAY,CAAC;EACvC,MAAMG,KAAK,GAAG,IAAIC,UAAU,CAACH,YAAY,CAACI,MAAM,CAAC;EACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC1CH,KAAK,CAACG,CAAC,CAAC,GAAGL,YAAY,CAACM,UAAU,CAACD,CAAC,CAAC;EACzC;EAEA,MAAME,UAAU,GAAG,IAAIC,UAAU,CAACN,KAAK,CAACO,MAAM,CAAC;EAC/C,MAAMC,YAAY,GAAG,IAAIC,YAAY,CAACJ,UAAU,CAACH,MAAM,CAAC;EACxD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,UAAU,CAACH,MAAM,EAAEC,CAAC,EAAE,EAAE;IACxCK,YAAY,CAACL,CAAC,CAAC,GAAGE,UAAU,CAACF,CAAC,CAAC,GAAG,OAAO;EAC7C;EAEA,OAAOK,YAAY;AACvB;AAEA,SAASZ,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}