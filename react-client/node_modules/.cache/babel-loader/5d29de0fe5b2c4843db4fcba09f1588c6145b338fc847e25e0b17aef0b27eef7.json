{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { add } from 'date-fns';\nimport { renderMonthAndYear, renderYear } from '../../../calendar/utils/intl';\nimport { useInternalI18n } from '../../../i18n/context.js';\nimport InternalLiveRegion from '../../../live-region/internal';\nimport { NextPageButton, PrevPageButton } from './header-button';\nimport styles from '../../styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nexport default function CalendarHeader({\n  baseDate,\n  locale,\n  onChangePage,\n  previousPageLabel,\n  nextPageLabel,\n  isSingleGrid,\n  headingIdPrefix,\n  granularity = 'day'\n}) {\n  const i18n = useInternalI18n('date-range-picker');\n  const isMonthPicker = granularity === 'month';\n  const renderLabel = isMonthPicker ? renderYear : renderMonthAndYear;\n  const prevPageHeaderLabel = renderLabel(locale, add(baseDate, granularity === 'month' ? {\n    years: -1\n  } : {\n    months: -1\n  }));\n  const currentPageHeaderLabel = renderLabel(locale, baseDate);\n  const pageUnit = isMonthPicker ? 'year' : 'month';\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: clsx(testutilStyles['calendar-header'], styles['calendar-header'])\n  }, React.createElement(PrevPageButton, {\n    ariaLabel: i18n(isMonthPicker ? 'i18nStrings.previousYearAriaLabel' : 'i18nStrings.previousMonthAriaLabel', previousPageLabel),\n    onChangePage: onChangePage\n  }), React.createElement(\"h2\", {\n    className: styles['calendar-header-pages-wrapper']\n  }, !isSingleGrid && React.createElement(\"span\", {\n    className: styles['calendar-header-page'],\n    id: `${headingIdPrefix}-prev${pageUnit}`\n  }, prevPageHeaderLabel), React.createElement(\"span\", {\n    className: styles['calendar-header-page'],\n    id: `${headingIdPrefix}-current${pageUnit}`\n  }, currentPageHeaderLabel)), React.createElement(NextPageButton, {\n    ariaLabel: i18n(isMonthPicker ? 'i18nStrings.nextYearAriaLabel' : 'i18nStrings.nextMonthAriaLabel', nextPageLabel),\n    onChangePage: onChangePage\n  })), React.createElement(InternalLiveRegion, {\n    hidden: true\n  }, isSingleGrid ? currentPageHeaderLabel : `${prevPageHeaderLabel}, ${currentPageHeaderLabel}`));\n}","map":{"version":3,"names":["React","clsx","add","renderMonthAndYear","renderYear","useInternalI18n","InternalLiveRegion","NextPageButton","PrevPageButton","styles","testutilStyles","CalendarHeader","baseDate","locale","onChangePage","previousPageLabel","nextPageLabel","isSingleGrid","headingIdPrefix","granularity","i18n","isMonthPicker","renderLabel","prevPageHeaderLabel","years","months","currentPageHeaderLabel","pageUnit","createElement","Fragment","className","ariaLabel","id","hidden"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/date-range-picker/calendar/header/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { add } from 'date-fns';\n\nimport { CalendarProps } from '../../../calendar/interfaces';\nimport { renderMonthAndYear, renderYear } from '../../../calendar/utils/intl';\nimport { useInternalI18n } from '../../../i18n/context.js';\nimport InternalLiveRegion from '../../../live-region/internal';\nimport { NextPageButton, PrevPageButton } from './header-button';\n\nimport styles from '../../styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\n\ninterface CalendarHeaderProps extends Pick<CalendarProps, 'granularity'> {\n  baseDate: Date;\n  locale: string;\n  onChangePage: (n: number) => void;\n  previousPageLabel?: string;\n  nextPageLabel?: string;\n  isSingleGrid: boolean;\n  headingIdPrefix: string;\n}\n\nexport default function CalendarHeader({\n  baseDate,\n  locale,\n  onChangePage,\n  previousPageLabel,\n  nextPageLabel,\n  isSingleGrid,\n  headingIdPrefix,\n  granularity = 'day',\n}: CalendarHeaderProps) {\n  const i18n = useInternalI18n('date-range-picker');\n  const isMonthPicker = granularity === 'month';\n  const renderLabel = isMonthPicker ? renderYear : renderMonthAndYear;\n  const prevPageHeaderLabel = renderLabel(\n    locale,\n    add(baseDate, granularity === 'month' ? { years: -1 } : { months: -1 })\n  );\n  const currentPageHeaderLabel = renderLabel(locale, baseDate);\n  const pageUnit = isMonthPicker ? 'year' : 'month';\n\n  return (\n    <>\n      <div className={clsx(testutilStyles['calendar-header'], styles['calendar-header'])}>\n        <PrevPageButton\n          ariaLabel={i18n(\n            isMonthPicker ? 'i18nStrings.previousYearAriaLabel' : 'i18nStrings.previousMonthAriaLabel',\n            previousPageLabel\n          )}\n          onChangePage={onChangePage}\n        />\n        <h2 className={styles['calendar-header-pages-wrapper']}>\n          {!isSingleGrid && (\n            <span className={styles['calendar-header-page']} id={`${headingIdPrefix}-prev${pageUnit}`}>\n              {prevPageHeaderLabel}\n            </span>\n          )}\n          <span className={styles['calendar-header-page']} id={`${headingIdPrefix}-current${pageUnit}`}>\n            {currentPageHeaderLabel}\n          </span>\n        </h2>\n        <NextPageButton\n          ariaLabel={i18n(\n            isMonthPicker ? 'i18nStrings.nextYearAriaLabel' : 'i18nStrings.nextMonthAriaLabel',\n            nextPageLabel\n          )}\n          onChangePage={onChangePage}\n        />\n      </div>\n      <InternalLiveRegion hidden={true}>\n        {isSingleGrid ? currentPageHeaderLabel : `${prevPageHeaderLabel}, ${currentPageHeaderLabel}`}\n      </InternalLiveRegion>\n    </>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,GAAG,QAAQ,UAAU;AAG9B,SAASC,kBAAkB,EAAEC,UAAU,QAAQ,8BAA8B;AAC7E,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAEhE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,kCAAkC;AAY7D,eAAc,SAAUC,cAAcA,CAAC;EACrCC,QAAQ;EACRC,MAAM;EACNC,YAAY;EACZC,iBAAiB;EACjBC,aAAa;EACbC,YAAY;EACZC,eAAe;EACfC,WAAW,GAAG;AAAK,CACC;EACpB,MAAMC,IAAI,GAAGf,eAAe,CAAC,mBAAmB,CAAC;EACjD,MAAMgB,aAAa,GAAGF,WAAW,KAAK,OAAO;EAC7C,MAAMG,WAAW,GAAGD,aAAa,GAAGjB,UAAU,GAAGD,kBAAkB;EACnE,MAAMoB,mBAAmB,GAAGD,WAAW,CACrCT,MAAM,EACNX,GAAG,CAACU,QAAQ,EAAEO,WAAW,KAAK,OAAO,GAAG;IAAEK,KAAK,EAAE,CAAC;EAAC,CAAE,GAAG;IAAEC,MAAM,EAAE,CAAC;EAAC,CAAE,CAAC,CACxE;EACD,MAAMC,sBAAsB,GAAGJ,WAAW,CAACT,MAAM,EAAED,QAAQ,CAAC;EAC5D,MAAMe,QAAQ,GAAGN,aAAa,GAAG,MAAM,GAAG,OAAO;EAEjD,OACErB,KAAA,CAAA4B,aAAA,CAAA5B,KAAA,CAAA6B,QAAA,QACE7B,KAAA,CAAA4B,aAAA;IAAKE,SAAS,EAAE7B,IAAI,CAACS,cAAc,CAAC,iBAAiB,CAAC,EAAED,MAAM,CAAC,iBAAiB,CAAC;EAAC,GAChFT,KAAA,CAAA4B,aAAA,CAACpB,cAAc;IACbuB,SAAS,EAAEX,IAAI,CACbC,aAAa,GAAG,mCAAmC,GAAG,oCAAoC,EAC1FN,iBAAiB,CAClB;IACDD,YAAY,EAAEA;EAAY,EAC1B,EACFd,KAAA,CAAA4B,aAAA;IAAIE,SAAS,EAAErB,MAAM,CAAC,+BAA+B;EAAC,GACnD,CAACQ,YAAY,IACZjB,KAAA,CAAA4B,aAAA;IAAME,SAAS,EAAErB,MAAM,CAAC,sBAAsB,CAAC;IAAEuB,EAAE,EAAE,GAAGd,eAAe,QAAQS,QAAQ;EAAE,GACtFJ,mBAAmB,CAEvB,EACDvB,KAAA,CAAA4B,aAAA;IAAME,SAAS,EAAErB,MAAM,CAAC,sBAAsB,CAAC;IAAEuB,EAAE,EAAE,GAAGd,eAAe,WAAWS,QAAQ;EAAE,GACzFD,sBAAsB,CAClB,CACJ,EACL1B,KAAA,CAAA4B,aAAA,CAACrB,cAAc;IACbwB,SAAS,EAAEX,IAAI,CACbC,aAAa,GAAG,+BAA+B,GAAG,gCAAgC,EAClFL,aAAa,CACd;IACDF,YAAY,EAAEA;EAAY,EAC1B,CACE,EACNd,KAAA,CAAA4B,aAAA,CAACtB,kBAAkB;IAAC2B,MAAM,EAAE;EAAI,GAC7BhB,YAAY,GAAGS,sBAAsB,GAAG,GAAGH,mBAAmB,KAAKG,sBAAsB,EAAE,CACzE,CACpB;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}