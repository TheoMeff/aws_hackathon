{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport TokenList from '../internal/components/token-list';\nimport { useTableComponentsContext } from '../internal/context/table-component-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport useDebounceSearchResultCallback from '../text-filter/use-debounce-search-result-callback';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport { PropertyEditorContentCustom, PropertyEditorContentEnum, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport { tokenGroupToTokens } from './utils';\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst PropertyFilterInternal = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      readOnlyOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      loading = false,\n      __internalRootRef\n    } = _a,\n    rest = __rest(_a, [\"disabled\", \"countText\", \"query\", \"hideOperations\", \"readOnlyOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"freeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"customFilterActions\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringConstraintText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\", \"tokenLimitShowFewerAriaLabel\", \"tokenLimitShowMoreAriaLabel\", \"enableTokenGroups\", \"loading\", \"__internalRootRef\"]);\n  const [nextFocusIndex, setNextFocusIndex] = useState(null);\n  const tokenListRef = useListFocusController({\n    nextFocusIndex,\n    onFocusMoved: (target, targetType) => {\n      var _a;\n      if (targetType === 'fallback') {\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      } else {\n        target.focus();\n      }\n      setNextFocusIndex(null);\n    },\n    listItemSelector: `.${tokenListStyles['list-item']}`,\n    showMoreSelector: `.${tokenListStyles.toggle}`,\n    fallbackSelector: `.${styles.input}`\n  });\n  const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const baseProps = getBaseProps(rest);\n  const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }), []);\n  const [filteringText, setFilteringText] = useState('');\n  const {\n    internalProperties,\n    internalOptions,\n    internalQuery,\n    internalFreeText\n  } = (() => {\n    var _a, _b;\n    const propertyByKey = filteringProperties.reduce((acc, property) => {\n      var _a, _b, _c, _d, _e;\n      const extendedOperators = ((_a = property === null || property === void 0 ? void 0 : property.operators) !== null && _a !== void 0 ? _a : []).reduce((acc, operator) => typeof operator === 'object' ? acc.set(operator.operator, operator) : acc, new Map());\n      acc.set(property.key, {\n        propertyKey: property.key,\n        propertyLabel: (_b = property === null || property === void 0 ? void 0 : property.propertyLabel) !== null && _b !== void 0 ? _b : '',\n        groupValuesLabel: (_c = property === null || property === void 0 ? void 0 : property.groupValuesLabel) !== null && _c !== void 0 ? _c : '',\n        propertyGroup: property === null || property === void 0 ? void 0 : property.group,\n        operators: ((_d = property === null || property === void 0 ? void 0 : property.operators) !== null && _d !== void 0 ? _d : []).map(op => typeof op === 'string' ? op : op.operator),\n        defaultOperator: (_e = property === null || property === void 0 ? void 0 : property.defaultOperator) !== null && _e !== void 0 ? _e : '=',\n        getTokenType: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.tokenType) !== null && _b !== void 0 ? _b : 'value' : 'value';\n        },\n        getValueFormatter: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.format) !== null && _b !== void 0 ? _b : null : null;\n        },\n        getValueFormRenderer: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.form) !== null && _b !== void 0 ? _b : null : null;\n        },\n        externalProperty: property\n      });\n      return acc;\n    }, new Map());\n    const getProperty = propertyKey => {\n      var _a;\n      return (_a = propertyByKey.get(propertyKey)) !== null && _a !== void 0 ? _a : null;\n    };\n    const internalOptions = filteringOptions.map(option => {\n      var _a, _b;\n      return {\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : ''\n      };\n    });\n    function transformToken(tokenOrGroup, standaloneIndex) {\n      return 'operation' in tokenOrGroup ? {\n        operation: tokenOrGroup.operation,\n        tokens: tokenOrGroup.tokens.map(token => transformToken(token))\n      } : {\n        standaloneIndex,\n        property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n        operator: tokenOrGroup.operator,\n        value: tokenOrGroup.value\n      };\n    }\n    const internalQuery = {\n      operation: query.operation,\n      tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken)\n    };\n    const internalFreeText = {\n      disabled: disableFreeTextFiltering,\n      operators: (_a = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.operators) !== null && _a !== void 0 ? _a : [':', '!:'],\n      defaultOperator: (_b = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.defaultOperator) !== null && _b !== void 0 ? _b : ':'\n    };\n    return {\n      internalProperties: [...propertyByKey.values()],\n      internalOptions,\n      internalQuery,\n      internalFreeText\n    };\n  })();\n  const countValue = useMemo(() => {\n    if (!countText || typeof countText !== 'string') {\n      return undefined;\n    }\n    const m = countText.match(/\\d+/);\n    return m ? parseInt(m[0]) : undefined;\n  }, [countText]);\n  const tableComponentContext = useTableComponentsContext();\n  useEffect(() => {\n    var _a;\n    if ((_a = tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.filterRef) === null || _a === void 0 ? void 0 : _a.current) {\n      const groupedTokens = tokenGroupToTokens(internalQuery.tokens);\n      const filteredBy = groupedTokens.map(token => {\n        var _a;\n        return (_a = token.property) === null || _a === void 0 ? void 0 : _a.propertyKey;\n      }).filter(propertyKey => typeof propertyKey === 'string');\n      tableComponentContext.filterRef.current.filterCount = countValue;\n      tableComponentContext.filterRef.current.filteredBy = filteredBy;\n      tableComponentContext.filterRef.current.filtered = groupedTokens.length > 0;\n      return () => {\n        var _a, _b, _c;\n        (_a = tableComponentContext.filterRef.current) === null || _a === void 0 ? true : delete _a.filterCount;\n        (_b = tableComponentContext.filterRef.current) === null || _b === void 0 ? true : delete _b.filteredBy;\n        (_c = tableComponentContext.filterRef.current) === null || _c === void 0 ? true : delete _c.filtered;\n      };\n    }\n  }, [tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.filterRef, countValue, internalQuery.tokens]);\n  const {\n    addToken,\n    updateToken,\n    updateOperation,\n    removeToken,\n    removeAllTokens\n  } = getQueryActions({\n    query: internalQuery,\n    filteringOptions: internalOptions,\n    onChange,\n    enableTokenGroups\n  });\n  const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n  const autosuggestOptions = getAutosuggestOptions(parsedText, internalProperties, internalOptions, customGroupsText, i18nStrings);\n  const createToken = currentText => {\n    const parsedText = parseText(currentText, internalProperties, internalFreeText);\n    let newToken;\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'free-text':\n        {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'operator':\n        {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText\n          };\n          break;\n        }\n    }\n    if (internalFreeText.disabled && !newToken.property) {\n      return;\n    }\n    addToken(newToken);\n    setFilteringText('');\n  };\n  const getLoadMoreDetail = (parsedText, filteringText) => {\n    const loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText,\n      filteringOperator: undefined\n    };\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n    return loadMoreDetail;\n  };\n  const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  const inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  const asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  const asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};\n  const handleSelected = event => {\n    var _a;\n    const {\n      detail: option\n    } = event;\n    const value = option.value || '';\n    if (!value) {\n      return;\n    }\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n    // stop dropdown from closing\n    event.preventDefault();\n    const parsedText = parseText(value, internalProperties, internalFreeText);\n    const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n    // Insert operator automatically if only one operator is defined for the given property.\n    if (parsedText.step === 'operator') {\n      const operators = getAllowedOperators(parsedText.property);\n      if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n        loadMoreDetail.filteringProperty = (_a = parsedText.property.externalProperty) !== null && _a !== void 0 ? _a : undefined;\n        loadMoreDetail.filteringOperator = operators[0];\n        loadMoreDetail.filteringText = '';\n        setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n      }\n    }\n    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n  useDebounceSearchResultCallback({\n    searchQuery: query,\n    countText,\n    loading,\n    announceCallback: () => {\n      var _a;\n      (_a = searchResultsRef.current) === null || _a === void 0 ? void 0 : _a.reannounce();\n    }\n  });\n  const propertyStep = parsedText.step === 'property' ? parsedText : null;\n  const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n  const [customFormValueRecord, setCustomFormValueRecord] = useState({});\n  const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n  const setCustomFormValue = value => setCustomFormValueRecord({\n    [customValueKey]: value\n  });\n  const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n  const isEnumValue = (propertyStep === null || propertyStep === void 0 ? void 0 : propertyStep.property.getTokenType(propertyStep.operator)) === 'enum';\n  const searchResultsId = useUniqueId('property-filter-search-results');\n  const constraintTextId = useUniqueId('property-filter-constraint');\n  const textboxAriaDescribedBy = filteringConstraintText ? joinStrings(rest.ariaDescribedby, constraintTextId) : rest.ariaDescribedby;\n  const showResults = !!((_b = internalQuery.tokens) === null || _b === void 0 ? void 0 : _b.length) && !disabled && !!countText;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles['search-field'], analyticsSelectors['search-field'])\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(\"div\", {\n    className: styles['input-wrapper']\n  }, React.createElement(PropertyFilterAutosuggest, Object.assign({\n    ref: inputRef,\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ariaLabel: filteringAriaLabel !== null && filteringAriaLabel !== void 0 ? filteringAriaLabel : i18nStrings.filteringAriaLabel,\n    placeholder: filteringPlaceholder !== null && filteringPlaceholder !== void 0 ? filteringPlaceholder : i18nStrings.filteringPlaceholder,\n    ariaLabelledby: rest.ariaLabelledby,\n    ariaDescribedby: textboxAriaDescribedBy,\n    controlId: rest.controlId,\n    value: filteringText,\n    disabled: disabled\n  }, autosuggestOptions, {\n    onChange: event => setFilteringText(event.detail.value),\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    onOptionClick: handleSelected,\n    customForm: operatorForm || isEnumValue ? {\n      content: operatorForm ? React.createElement(PropertyEditorContentCustom, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        filter: propertyStep.value,\n        operatorForm: operatorForm,\n        value: customFormValue,\n        onChange: setCustomFormValue\n      }) : React.createElement(PropertyEditorContentEnum, {\n        key: customValueKey,\n        property: propertyStep.property,\n        filter: propertyStep.value,\n        value: customFormValue,\n        onChange: setCustomFormValue,\n        asyncProps: asyncProps,\n        filteringOptions: internalOptions,\n        onLoadItems: inputLoadItemsHandlers.onLoadItems\n      }),\n      footer: React.createElement(PropertyEditorFooter, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        value: customFormValue,\n        i18nStrings: i18nStrings,\n        onCancel: () => {\n          var _a, _b;\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n            preventDropdown: true\n          });\n        },\n        onSubmit: token => {\n          var _a, _b;\n          addToken(token);\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n            preventDropdown: true\n          });\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.close();\n        }\n      })\n    } : undefined,\n    onCloseDropdown: () => setCustomFormValueRecord({}),\n    hideEnteredTextOption: internalFreeText.disabled && parsedText.step !== 'property',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    searchResultsId: showResults ? searchResultsId : undefined\n  })), showResults ? React.createElement(\"div\", {\n    className: styles.results\n  }, React.createElement(SearchResults, {\n    id: searchResultsId,\n    renderLiveRegion: !loading,\n    ref: searchResultsRef\n  }, countText)) : null)), filteringConstraintText && React.createElement(\"div\", {\n    id: constraintTextId,\n    className: styles.constraint\n  }, filteringConstraintText), internalQuery.tokens && internalQuery.tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(TokenList, {\n    alignment: \"inline\",\n    limit: tokenLimit,\n    items: internalQuery.tokens,\n    limitShowFewerAriaLabel: tokenLimitShowFewerAriaLabel,\n    limitShowMoreAriaLabel: tokenLimitShowMoreAriaLabel,\n    renderItem: (_, tokenIndex) => React.createElement(TokenButton, {\n      query: internalQuery,\n      tokenIndex: tokenIndex,\n      onUpdateToken: (token, releasedTokens) => {\n        updateToken(tokenIndex, token, releasedTokens);\n      },\n      onUpdateOperation: updateOperation,\n      onRemoveToken: () => {\n        removeToken(tokenIndex);\n        setNextFocusIndex(tokenIndex);\n      },\n      filteringProperties: internalProperties,\n      filteringOptions: internalOptions,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      hideOperations: hideOperations,\n      readOnlyOperations: readOnlyOperations,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: internalFreeText,\n      disabled: disabled,\n      expandToViewport: expandToViewport,\n      enableTokenGroups: enableTokenGroups\n    }),\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    after: customFilterActions ? React.createElement(\"div\", {\n      className: styles['custom-filter-actions']\n    }, customFilterActions) : React.createElement(\"span\", Object.assign({}, getAnalyticsMetadataAttribute({\n      action: 'clearFilters'\n    })), React.createElement(InternalButton, {\n      formAction: \"none\",\n      onClick: () => {\n        var _a;\n        removeAllTokens();\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      },\n      className: styles['remove-all'],\n      disabled: disabled\n    }, i18nStrings.clearFiltersText))\n  }))));\n});\nexport default PropertyFilterInternal;","map":{"version":3,"names":["React","useEffect","useImperativeHandle","useMemo","useRef","useState","clsx","useMergeRefs","getAnalyticsMetadataAttribute","InternalButton","getBaseProps","TokenList","useTableComponentsContext","fireNonCancelableEvent","useListFocusController","useUniqueId","joinStrings","InternalSpaceBetween","SearchResults","useDebounceSearchResultCallback","getAllowedOperators","getAutosuggestOptions","getQueryActions","parseText","usePropertyFilterI18n","PropertyEditorContentCustom","PropertyEditorContentEnum","PropertyEditorFooter","PropertyFilterAutosuggest","TokenButton","useLoadItems","tokenGroupToTokens","tokenListStyles","analyticsSelectors","styles","PropertyFilterInternal","forwardRef","_a","ref","disabled","countText","query","hideOperations","readOnlyOperations","onChange","filteringProperties","filteringOptions","customGroupsText","disableFreeTextFiltering","freeTextFiltering","onLoadItems","virtualScroll","customControl","customFilterActions","filteringPlaceholder","filteringAriaLabel","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringConstraintText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","tokenLimitShowFewerAriaLabel","tokenLimitShowMoreAriaLabel","enableTokenGroups","loading","__internalRootRef","rest","__rest","nextFocusIndex","setNextFocusIndex","tokenListRef","onFocusMoved","target","targetType","inputRef","current","focus","preventDropdown","listItemSelector","showMoreSelector","toggle","fallbackSelector","input","mergedRef","searchResultsRef","baseProps","i18nStrings","filteringText","setFilteringText","internalProperties","internalOptions","internalQuery","internalFreeText","propertyByKey","reduce","acc","property","extendedOperators","operators","operator","set","Map","key","propertyKey","propertyLabel","_b","groupValuesLabel","_c","propertyGroup","group","_d","map","op","defaultOperator","_e","getTokenType","get","tokenType","getValueFormatter","format","getValueFormRenderer","form","externalProperty","getProperty","option","value","label","transformToken","tokenOrGroup","standaloneIndex","operation","tokens","token","tokenGroups","values","countValue","undefined","m","match","parseInt","tableComponentContext","filterRef","groupedTokens","filteredBy","filter","filterCount","filtered","length","addToken","updateToken","updateOperation","removeToken","removeAllTokens","parsedText","autosuggestOptions","createToken","currentText","newToken","step","getLoadMoreDetail","loadMoreDetail","filteringProperty","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","Object","assign","handleSelected","event","detail","preventDefault","trim","firstPage","samePage","searchQuery","announceCallback","reannounce","propertyStep","customValueKey","customFormValueRecord","setCustomFormValueRecord","customFormValue","setCustomFormValue","operatorForm","isEnumValue","searchResultsId","constraintTextId","textboxAriaDescribedBy","ariaDescribedby","showResults","createElement","className","root","enteredTextLabel","ariaLabel","placeholder","ariaLabelledby","controlId","onOptionClick","customForm","content","footer","onCancel","close","onSubmit","onCloseDropdown","hideEnteredTextOption","clearAriaLabel","results","id","renderLiveRegion","constraint","size","direction","alignment","limit","items","limitShowFewerAriaLabel","limitShowMoreAriaLabel","renderItem","_","tokenIndex","onUpdateToken","releasedTokens","onUpdateOperation","onRemoveToken","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","after","action","formAction","onClick","clearFiltersText"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/property-filter/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { PropertyFilterOperator } from '@cloudscape-design/collection-hooks';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport TokenList from '../internal/components/token-list';\nimport { useTableComponentsContext } from '../internal/context/table-component-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { SomeRequired } from '../internal/types';\nimport { joinStrings } from '../internal/utils/strings';\nimport { InternalLiveRegionRef } from '../live-region/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport useDebounceSearchResultCallback from '../text-filter/use-debounce-search-result-callback';\nimport { GeneratedAnalyticsMetadataPropertyFilterClearFilters } from './analytics-metadata/interfaces';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport {\n  ComparisonOperator,\n  ExtendedOperator,\n  FilteringProperty,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  InternalToken,\n  InternalTokenGroup,\n  ParsedText,\n  PropertyFilterProps,\n  Ref,\n  Token,\n  TokenGroup,\n} from './interfaces';\nimport { PropertyEditorContentCustom, PropertyEditorContentEnum, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest, { PropertyFilterAutosuggestProps } from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport { tokenGroupToTokens } from './utils';\n\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ntype PropertyFilterInternalProps = SomeRequired<\n  PropertyFilterProps,\n  | 'filteringOptions'\n  | 'customGroupsText'\n  | 'enableTokenGroups'\n  | 'disableFreeTextFiltering'\n  | 'hideOperations'\n  | 'readOnlyOperations'\n> &\n  InternalBaseComponentProps;\n\nconst PropertyFilterInternal = React.forwardRef(\n  (\n    {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      readOnlyOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      loading = false,\n      __internalRootRef,\n      ...rest\n    }: PropertyFilterInternalProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const [nextFocusIndex, setNextFocusIndex] = useState<null | number>(null);\n    const tokenListRef = useListFocusController({\n      nextFocusIndex,\n      onFocusMoved: (target, targetType) => {\n        if (targetType === 'fallback') {\n          inputRef.current?.focus({ preventDropdown: true });\n        } else {\n          target.focus();\n        }\n        setNextFocusIndex(null);\n      },\n      listItemSelector: `.${tokenListStyles['list-item']}`,\n      showMoreSelector: `.${tokenListStyles.toggle}`,\n      fallbackSelector: `.${styles.input}`,\n    });\n\n    const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n    const inputRef = useRef<AutosuggestInputRef>(null);\n    const searchResultsRef = useRef<InternalLiveRegionRef>(null);\n    const baseProps = getBaseProps(rest);\n\n    const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n\n    useImperativeHandle(ref, () => ({ focus: () => inputRef.current?.focus() }), []);\n    const [filteringText, setFilteringText] = useState<string>('');\n\n    const { internalProperties, internalOptions, internalQuery, internalFreeText } = (() => {\n      const propertyByKey = filteringProperties.reduce((acc, property) => {\n        const extendedOperators = (property?.operators ?? []).reduce(\n          (acc, operator) => (typeof operator === 'object' ? acc.set(operator.operator, operator) : acc),\n          new Map<PropertyFilterOperator, null | ExtendedOperator<any>>()\n        );\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: property?.propertyLabel ?? '',\n          groupValuesLabel: property?.groupValuesLabel ?? '',\n          propertyGroup: property?.group,\n          operators: (property?.operators ?? []).map(op => (typeof op === 'string' ? op : op.operator)),\n          defaultOperator: property?.defaultOperator ?? '=',\n          getTokenType: operator => (operator ? extendedOperators.get(operator)?.tokenType ?? 'value' : 'value'),\n          getValueFormatter: operator => (operator ? extendedOperators.get(operator)?.format ?? null : null),\n          getValueFormRenderer: operator => (operator ? extendedOperators.get(operator)?.form ?? null : null),\n          externalProperty: property,\n        });\n        return acc;\n      }, new Map<string, InternalFilteringProperty>());\n      const getProperty = (propertyKey: string): null | InternalFilteringProperty =>\n        propertyByKey.get(propertyKey) ?? null;\n\n      const internalOptions: readonly InternalFilteringOption[] = filteringOptions.map(option => ({\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: option.label ?? option.value ?? '',\n      }));\n\n      function transformToken(\n        tokenOrGroup: Token | TokenGroup,\n        standaloneIndex?: number\n      ): InternalToken | InternalTokenGroup {\n        return 'operation' in tokenOrGroup\n          ? {\n              operation: tokenOrGroup.operation,\n              tokens: tokenOrGroup.tokens.map(token => transformToken(token)),\n            }\n          : {\n              standaloneIndex,\n              property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n              operator: tokenOrGroup.operator,\n              value: tokenOrGroup.value,\n            };\n      }\n\n      const internalQuery: InternalQuery = {\n        operation: query.operation,\n        tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken),\n      };\n\n      const internalFreeText: InternalFreeTextFiltering = {\n        disabled: disableFreeTextFiltering,\n        operators: freeTextFiltering?.operators ?? [':', '!:'],\n        defaultOperator: freeTextFiltering?.defaultOperator ?? ':',\n      };\n\n      return { internalProperties: [...propertyByKey.values()], internalOptions, internalQuery, internalFreeText };\n    })();\n\n    const countValue = useMemo(() => {\n      if (!countText || typeof countText !== 'string') {\n        return undefined;\n      }\n\n      const m = countText.match(/\\d+/);\n      return m ? parseInt(m[0]) : undefined;\n    }, [countText]);\n\n    const tableComponentContext = useTableComponentsContext();\n\n    useEffect(() => {\n      if (tableComponentContext?.filterRef?.current) {\n        const groupedTokens = tokenGroupToTokens<InternalToken>(internalQuery.tokens);\n        const filteredBy = groupedTokens\n          .map(token => token.property?.propertyKey)\n          .filter((propertyKey): propertyKey is string => typeof propertyKey === 'string');\n\n        tableComponentContext.filterRef.current.filterCount = countValue;\n        tableComponentContext.filterRef.current.filteredBy = filteredBy;\n        tableComponentContext.filterRef.current.filtered = groupedTokens.length > 0;\n\n        return () => {\n          delete tableComponentContext.filterRef.current?.filterCount;\n          delete tableComponentContext.filterRef.current?.filteredBy;\n          delete tableComponentContext.filterRef.current?.filtered;\n        };\n      }\n    }, [tableComponentContext?.filterRef, countValue, internalQuery.tokens]);\n\n    const { addToken, updateToken, updateOperation, removeToken, removeAllTokens } = getQueryActions({\n      query: internalQuery,\n      filteringOptions: internalOptions,\n      onChange,\n      enableTokenGroups,\n    });\n\n    const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n    const autosuggestOptions = getAutosuggestOptions(\n      parsedText,\n      internalProperties,\n      internalOptions,\n      customGroupsText,\n      i18nStrings\n    );\n\n    const createToken = (currentText: string) => {\n      const parsedText = parseText(currentText, internalProperties, internalFreeText);\n      let newToken: InternalToken;\n      switch (parsedText.step) {\n        case 'property': {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'free-text': {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'operator': {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText,\n          };\n          break;\n        }\n      }\n      if (internalFreeText.disabled && !newToken.property) {\n        return;\n      }\n      addToken(newToken);\n      setFilteringText('');\n    };\n    const getLoadMoreDetail = (parsedText: ParsedText, filteringText: string) => {\n      const loadMoreDetail: {\n        filteringProperty: FilteringProperty | undefined;\n        filteringText: string;\n        filteringOperator: ComparisonOperator | undefined;\n      } = {\n        filteringProperty: undefined,\n        filteringText,\n        filteringOperator: undefined,\n      };\n      if (parsedText.step === 'property') {\n        loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n        loadMoreDetail.filteringText = parsedText.value;\n        loadMoreDetail.filteringOperator = parsedText.operator;\n      }\n      return loadMoreDetail;\n    };\n    const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    const inputLoadItemsHandlers = useLoadItems(\n      onLoadItems,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringProperty,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringOperator\n    );\n    const asyncProps = {\n      empty: filteringEmpty,\n      loadingText: filteringLoadingText,\n      finishedText: filteringFinishedText,\n      errorText: filteringErrorText,\n      recoveryText: filteringRecoveryText,\n      statusType: filteringStatusType,\n    };\n    const asyncAutosuggestProps =\n      !!filteringText.length || asyncProperties\n        ? {\n            ...inputLoadItemsHandlers,\n            ...asyncProps,\n          }\n        : {};\n    const handleSelected: PropertyFilterAutosuggestProps['onOptionClick'] = event => {\n      const { detail: option } = event;\n      const value = option.value || '';\n      if (!value) {\n        return;\n      }\n\n      if (!('keepOpenOnSelect' in option)) {\n        createToken(value);\n        return;\n      }\n\n      // stop dropdown from closing\n      event.preventDefault();\n\n      const parsedText = parseText(value, internalProperties, internalFreeText);\n      const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n\n      // Insert operator automatically if only one operator is defined for the given property.\n      if (parsedText.step === 'operator') {\n        const operators = getAllowedOperators(parsedText.property);\n        if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n          loadMoreDetail.filteringProperty = parsedText.property.externalProperty ?? undefined;\n          loadMoreDetail.filteringOperator = operators[0];\n          loadMoreDetail.filteringText = '';\n          setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n        }\n      }\n\n      fireNonCancelableEvent(onLoadItems, { ...loadMoreDetail, firstPage: true, samePage: false });\n    };\n\n    useDebounceSearchResultCallback({\n      searchQuery: query,\n      countText,\n      loading,\n      announceCallback: () => {\n        searchResultsRef.current?.reannounce();\n      },\n    });\n\n    const propertyStep = parsedText.step === 'property' ? parsedText : null;\n    const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n    const [customFormValueRecord, setCustomFormValueRecord] = useState<Record<string, any>>({});\n    const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n    const setCustomFormValue = (value: null | any) => setCustomFormValueRecord({ [customValueKey]: value });\n    const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n    const isEnumValue = propertyStep?.property.getTokenType(propertyStep.operator) === 'enum';\n\n    const searchResultsId = useUniqueId('property-filter-search-results');\n    const constraintTextId = useUniqueId('property-filter-constraint');\n    const textboxAriaDescribedBy = filteringConstraintText\n      ? joinStrings(rest.ariaDescribedby, constraintTextId)\n      : rest.ariaDescribedby;\n\n    const showResults = !!internalQuery.tokens?.length && !disabled && !!countText;\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n        <div className={clsx(styles['search-field'], analyticsSelectors['search-field'])}>\n          {customControl && <div className={styles['custom-control']}>{customControl}</div>}\n          <div className={styles['input-wrapper']}>\n            <PropertyFilterAutosuggest\n              ref={inputRef}\n              virtualScroll={virtualScroll}\n              enteredTextLabel={i18nStrings.enteredTextLabel}\n              ariaLabel={filteringAriaLabel ?? i18nStrings.filteringAriaLabel}\n              placeholder={filteringPlaceholder ?? i18nStrings.filteringPlaceholder}\n              ariaLabelledby={rest.ariaLabelledby}\n              ariaDescribedby={textboxAriaDescribedBy}\n              controlId={rest.controlId}\n              value={filteringText}\n              disabled={disabled}\n              {...autosuggestOptions}\n              onChange={event => setFilteringText(event.detail.value)}\n              empty={filteringEmpty}\n              {...asyncAutosuggestProps}\n              expandToViewport={expandToViewport}\n              onOptionClick={handleSelected}\n              customForm={\n                operatorForm || isEnumValue\n                  ? {\n                      content: operatorForm ? (\n                        <PropertyEditorContentCustom\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          filter={propertyStep.value}\n                          operatorForm={operatorForm}\n                          value={customFormValue}\n                          onChange={setCustomFormValue}\n                        />\n                      ) : (\n                        <PropertyEditorContentEnum\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          filter={propertyStep.value}\n                          value={customFormValue}\n                          onChange={setCustomFormValue}\n                          asyncProps={asyncProps}\n                          filteringOptions={internalOptions}\n                          onLoadItems={inputLoadItemsHandlers.onLoadItems}\n                        />\n                      ),\n                      footer: (\n                        <PropertyEditorFooter\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          value={customFormValue}\n                          i18nStrings={i18nStrings}\n                          onCancel={() => {\n                            setFilteringText('');\n                            inputRef.current?.close();\n                            inputRef.current?.focus({ preventDropdown: true });\n                          }}\n                          onSubmit={token => {\n                            addToken(token);\n                            setFilteringText('');\n                            inputRef.current?.focus({ preventDropdown: true });\n                            inputRef.current?.close();\n                          }}\n                        />\n                      ),\n                    }\n                  : undefined\n              }\n              onCloseDropdown={() => setCustomFormValueRecord({})}\n              hideEnteredTextOption={internalFreeText.disabled && parsedText.step !== 'property'}\n              clearAriaLabel={i18nStrings.clearAriaLabel}\n              searchResultsId={showResults ? searchResultsId : undefined}\n            />\n            {showResults ? (\n              <div className={styles.results}>\n                <SearchResults id={searchResultsId} renderLiveRegion={!loading} ref={searchResultsRef}>\n                  {countText}\n                </SearchResults>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {filteringConstraintText && (\n          <div id={constraintTextId} className={styles.constraint}>\n            {filteringConstraintText}\n          </div>\n        )}\n        {internalQuery.tokens && internalQuery.tokens.length > 0 && (\n          <div className={styles.tokens}>\n            <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n              <TokenList\n                alignment=\"inline\"\n                limit={tokenLimit}\n                items={internalQuery.tokens}\n                limitShowFewerAriaLabel={tokenLimitShowFewerAriaLabel}\n                limitShowMoreAriaLabel={tokenLimitShowMoreAriaLabel}\n                renderItem={(_, tokenIndex) => (\n                  <TokenButton\n                    query={internalQuery}\n                    tokenIndex={tokenIndex}\n                    onUpdateToken={(token, releasedTokens) => {\n                      updateToken(tokenIndex, token, releasedTokens);\n                    }}\n                    onUpdateOperation={updateOperation}\n                    onRemoveToken={() => {\n                      removeToken(tokenIndex);\n                      setNextFocusIndex(tokenIndex);\n                    }}\n                    filteringProperties={internalProperties}\n                    filteringOptions={internalOptions}\n                    asyncProps={asyncProps}\n                    onLoadItems={onLoadItems}\n                    i18nStrings={i18nStrings}\n                    asyncProperties={asyncProperties}\n                    hideOperations={hideOperations}\n                    readOnlyOperations={readOnlyOperations}\n                    customGroupsText={customGroupsText}\n                    freeTextFiltering={internalFreeText}\n                    disabled={disabled}\n                    expandToViewport={expandToViewport}\n                    enableTokenGroups={enableTokenGroups}\n                  />\n                )}\n                i18nStrings={{\n                  limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                  limitShowMore: i18nStrings.tokenLimitShowMore,\n                }}\n                after={\n                  customFilterActions ? (\n                    <div className={styles['custom-filter-actions']}>{customFilterActions}</div>\n                  ) : (\n                    <span\n                      {...getAnalyticsMetadataAttribute({\n                        action: 'clearFilters',\n                      } as Partial<GeneratedAnalyticsMetadataPropertyFilterClearFilters>)}\n                    >\n                      <InternalButton\n                        formAction=\"none\"\n                        onClick={() => {\n                          removeAllTokens();\n                          inputRef.current?.focus({ preventDropdown: true });\n                        }}\n                        className={styles['remove-all']}\n                        disabled={disabled}\n                      >\n                        {i18nStrings.clearFiltersText}\n                      </InternalButton>\n                    </span>\n                  )\n                }\n              />\n            </InternalSpaceBetween>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default PropertyFilterInternal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}