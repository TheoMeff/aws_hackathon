{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs, warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { formatDateTimeWithOffset } from '../internal/utils/date-time/format-date-time-with-offset';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { normalizeTimeOffset } from './time-offset';\nimport { formatInitialValue, formatValue } from './utils';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nfunction renderDateRange({\n  locale,\n  range,\n  placeholder = '',\n  formatRelativeRange,\n  absoluteFormat,\n  hideTimeOffset,\n  timeOffset\n}) {\n  var _a;\n  const firstPart = range ? range.type === 'relative' ? (_a = formatRelativeRange === null || formatRelativeRange === void 0 ? void 0 : formatRelativeRange(range)) !== null && _a !== void 0 ? _a : '' : formatDateTimeWithOffset({\n    date: range.startDate,\n    timeOffset: timeOffset.startDate,\n    hideTimeOffset,\n    format: absoluteFormat,\n    locale\n  }) : placeholder;\n  const secondPart = (range === null || range === void 0 ? void 0 : range.type) === 'absolute' ? formatDateTimeWithOffset({\n    date: range.endDate,\n    timeOffset: timeOffset.endDate,\n    hideTimeOffset,\n    format: absoluteFormat,\n    locale\n  }) : '';\n  return React.createElement(\"span\", {\n    className: !range && styles['label-text'] || undefined,\n    \"aria-disabled\": !range\n  }, React.createElement(\"span\", {\n    className: (range === null || range === void 0 ? void 0 : range.type) === 'absolute' ? styles['label-token-nowrap'] : undefined\n  }, firstPart), React.createElement(\"span\", null, secondPart && ' â€” '), React.createElement(\"span\", {\n    className: styles['label-token-nowrap']\n  }, secondPart));\n}\nconst DateRangePicker = React.forwardRef((_a, ref) => {\n  var _b, _c;\n  var {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      dateDisabledReason,\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({\n        valid: true\n      }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      customAbsoluteRangeControl,\n      absoluteFormat = 'iso',\n      hideTimeOffset,\n      customRelativeRangeUnits,\n      granularity = 'day'\n    } = _a,\n    rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"dateDisabledReason\", \"value\", \"placeholder\", \"readOnly\", \"disabled\", \"onChange\", \"onBlur\", \"onFocus\", \"relativeOptions\", \"i18nStrings\", \"isValidRange\", \"showClearButton\", \"dateOnly\", \"timeOffset\", \"getTimeOffset\", \"timeInputFormat\", \"expandToViewport\", \"rangeSelectorMode\", \"customAbsoluteRangeControl\", \"absoluteFormat\", \"hideTimeOffset\", \"customRelativeRangeUnits\", \"granularity\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('DateRangePicker', {\n    props: {\n      absoluteFormat,\n      dateOnly,\n      expandToViewport,\n      rangeSelectorMode,\n      readOnly,\n      showClearButton,\n      timeInputFormat,\n      hideTimeOffset,\n      granularity\n    },\n    metadata: {\n      hasDisabledReasons: Boolean(dateDisabledReason)\n    }\n  });\n  const isMonthOnly = granularity === 'month';\n  const hideTime = dateOnly || isMonthOnly;\n  checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n  const normalizedTimeOffset = hideTime ? {\n    startDate: undefined,\n    endDate: undefined\n  } : normalizeTimeOffset(value, getTimeOffset, timeOffset);\n  value = formatInitialValue(value, dateOnly, isMonthOnly, normalizedTimeOffset);\n  const baseProps = getBaseProps(rest);\n  const {\n    invalid,\n    warning,\n    controlId,\n    ariaDescribedby,\n    ariaLabelledby\n  } = useFormFieldContext(Object.assign({\n    ariaLabelledby: (_b = rest.ariaLabelledby) !== null && _b !== void 0 ? _b : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby,\n    ariaDescribedby: (_c = rest.ariaDescribedby) !== null && _c !== void 0 ? _c : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby\n  }, rest));\n  const isSingleGrid = useMobile();\n  const triggerRef = useRef(null);\n  useForwardFocus(ref, triggerRef);\n  const rootRef = useRef(null);\n  const dropdownId = useUniqueId('date-range-picker-dropdown');\n  const triggerContentId = useUniqueId('date-range-picker-trigger');\n  useFocusTracker({\n    rootRef,\n    onBlur,\n    onFocus\n  });\n  const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n  const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n  const closeDropdown = (focusTrigger = false) => {\n    var _a;\n    setIsDropDownOpen(false);\n    if (focusTrigger) {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  const onWrapperKeyDownHandler = event => {\n    if (event.keyCode === KeyCode.escape) {\n      if (isDropDownOpen) {\n        event.stopPropagation();\n      }\n      closeDropdown(true);\n    }\n  };\n  const onClear = () => {\n    fireNonCancelableEvent(onChange, {\n      value: null\n    });\n  };\n  const onApply = newValue => {\n    const formattedValue = formatValue(newValue, {\n      dateOnly,\n      monthOnly: isMonthOnly,\n      timeOffset: hideTime ? {\n        startDate: undefined,\n        endDate: undefined\n      } : normalizeTimeOffset(newValue, getTimeOffset, timeOffset)\n    });\n    const validationResult = isValidRange(formattedValue);\n    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {\n      return validationResult;\n    }\n    if (isDevelopment) {\n      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === 'absolute') {\n        const [startDateWithoutTime] = newValue.startDate.split('T');\n        const [endDateWithoutTime] = newValue.endDate.split('T');\n        if (!startDateWithoutTime || !endDateWithoutTime) {\n          warnOnce('DateRangePicker', 'You have provided an `isValidRange` prop that did not catch a missing start or end date.');\n        }\n      }\n    }\n    fireNonCancelableEvent(onChange, {\n      value: formattedValue\n    });\n    return validationResult || {\n      valid: true\n    };\n  };\n  const prevDateOnly = usePrevious(dateOnly);\n  useEffect(() => {\n    if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n      warnOnce('DateRangePicker', `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`);\n    }\n  }, [prevDateOnly, dateOnly]);\n  if (value && value.type !== 'absolute' && value.type !== 'relative') {\n    warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n    value = null;\n  }\n  if ((value === null || value === void 0 ? void 0 : value.type) === 'absolute' && rangeSelectorMode === 'relative-only' || (value === null || value === void 0 ? void 0 : value.type) === 'relative' && rangeSelectorMode === 'absolute-only') {\n    warnOnce('DateRangePicker', 'The provided value does not correspond to the current range selector mode. Reverting back to default.');\n    value = null;\n  }\n  const i18n = useInternalI18n('date-range-picker');\n  const formatRelativeRange = i18n('i18nStrings.formatRelativeRange', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatRelativeRange, format => ({\n    amount,\n    unit\n  }) => format({\n    amount,\n    unit\n  }));\n  if (isDevelopment) {\n    if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n      warnOnce('DateRangePicker', 'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.');\n    }\n  }\n  const formattedDate = renderDateRange({\n    locale: normalizedLocale,\n    range: value,\n    placeholder,\n    formatRelativeRange,\n    absoluteFormat,\n    hideTimeOffset: hideTime || hideTimeOffset,\n    timeOffset: normalizedTimeOffset\n  });\n  const trigger = React.createElement(ButtonTrigger, {\n    ref: triggerRef,\n    id: controlId,\n    invalid: invalid,\n    warning: warning,\n    ariaLabelledby: joinStrings(ariaLabelledby, triggerContentId),\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    className: clsx(testutilStyles.label, styles.label, {\n      [styles['label-enabled']]: !readOnly && !disabled\n    }),\n    hideCaret: true,\n    onClick: () => {\n      setIsDropDownOpen(true);\n    },\n    disabled: disabled,\n    readOnly: readOnly,\n    ariaHasPopup: \"dialog\"\n  }, React.createElement(\"span\", {\n    className: styles['trigger-flexbox']\n  }, React.createElement(\"span\", {\n    className: styles['icon-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"calendar\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })), React.createElement(\"span\", {\n    id: triggerContentId\n  }, formattedDate)));\n  const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root, testutilStyles.root, absoluteFormat === 'long-localized' && !dateOnly && !isMonthOnly && styles.wide),\n    onKeyDown: onWrapperKeyDownHandler\n  }), React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: () => closeDropdown(),\n    trigger: trigger,\n    stretchToTriggerWidth: false,\n    expandToViewport: expandToViewport,\n    dropdownId: dropdownId\n  }, React.createElement(ResetContextsForModal, null, isDropDownOpen && React.createElement(DateRangePickerDropdown, {\n    startOfWeek: startOfWeek,\n    locale: normalizedLocale,\n    isSingleGrid: isSingleGrid,\n    onDropdownClose: () => closeDropdown(true),\n    value: value,\n    showClearButton: showClearButton,\n    isDateEnabled: isDateEnabled,\n    dateDisabledReason: dateDisabledReason,\n    i18nStrings: i18nStrings,\n    onClear: onClear,\n    onApply: onApply,\n    getTimeOffset: getTimeOffset,\n    timeOffset: timeOffset,\n    relativeOptions: relativeOptions,\n    isValidRange: isValidRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    rangeSelectorMode: rangeSelectorMode,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    customAbsoluteRangeControl: customAbsoluteRangeControl,\n    customRelativeRangeUnits: customRelativeRangeUnits,\n    granularity: granularity\n  }))));\n});\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","useMergeRefs","warnOnce","useInternalI18n","InternalIcon","getBaseProps","ButtonTrigger","Dropdown","useFormFieldContext","ResetContextsForModal","fireNonCancelableEvent","checkControlled","useForwardFocus","useBaseComponent","useFocusTracker","useMobile","usePrevious","useUniqueId","isDevelopment","KeyCode","applyDisplayName","formatDateTimeWithOffset","normalizeLocale","joinStrings","DateRangePickerDropdown","normalizeTimeOffset","formatInitialValue","formatValue","styles","testutilStyles","renderDateRange","locale","range","placeholder","formatRelativeRange","absoluteFormat","hideTimeOffset","timeOffset","firstPart","type","_a","date","startDate","format","secondPart","endDate","createElement","className","undefined","DateRangePicker","forwardRef","ref","startOfWeek","isDateEnabled","dateDisabledReason","value","readOnly","disabled","onChange","onBlur","onFocus","relativeOptions","i18nStrings","isValidRange","valid","showClearButton","dateOnly","getTimeOffset","timeInputFormat","expandToViewport","rangeSelectorMode","customAbsoluteRangeControl","customRelativeRangeUnits","granularity","rest","__rest","__internalRootRef","props","metadata","hasDisabledReasons","Boolean","isMonthOnly","hideTime","normalizedTimeOffset","baseProps","invalid","warning","controlId","ariaDescribedby","ariaLabelledby","Object","assign","_b","_c","isSingleGrid","triggerRef","rootRef","dropdownId","triggerContentId","isDropDownOpen","setIsDropDownOpen","normalizedLocale","closeDropdown","focusTrigger","current","focus","onWrapperKeyDownHandler","event","keyCode","escape","stopPropagation","onClear","onApply","newValue","formattedValue","monthOnly","validationResult","startDateWithoutTime","split","endDateWithoutTime","prevDateOnly","i18n","amount","unit","formattedDate","trigger","id","ariaLabel","label","hideCaret","onClick","ariaHasPopup","name","variant","mergedRef","root","wide","onKeyDown","stretchWidth","stretchHeight","open","onDropdownClose","stretchToTriggerWidth"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/date-range-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs, warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { formatDateTimeWithOffset } from '../internal/utils/date-time/format-date-time-with-offset';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { DateRangePickerProps } from './interfaces';\nimport { normalizeTimeOffset } from './time-offset';\nimport { formatInitialValue, formatValue } from './utils';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\nexport { DateRangePickerProps };\n\nfunction renderDateRange({\n  locale,\n  range,\n  placeholder = '',\n  formatRelativeRange,\n  absoluteFormat,\n  hideTimeOffset,\n  timeOffset,\n}: {\n  locale?: string;\n  range: null | DateRangePickerProps.Value;\n  placeholder?: string;\n  formatRelativeRange: DateRangePickerProps.I18nStrings['formatRelativeRange'];\n  absoluteFormat: DateRangePickerProps.AbsoluteFormat;\n  hideTimeOffset?: boolean;\n  timeOffset: { startDate?: number; endDate?: number };\n}) {\n  const firstPart = range\n    ? range.type === 'relative'\n      ? formatRelativeRange?.(range) ?? ''\n      : formatDateTimeWithOffset({\n          date: range.startDate,\n          timeOffset: timeOffset.startDate,\n          hideTimeOffset,\n          format: absoluteFormat,\n          locale,\n        })\n    : placeholder;\n\n  const secondPart =\n    range?.type === 'absolute'\n      ? formatDateTimeWithOffset({\n          date: range.endDate,\n          timeOffset: timeOffset.endDate,\n          hideTimeOffset,\n          format: absoluteFormat,\n          locale,\n        })\n      : '';\n\n  return (\n    <span className={(!range && styles['label-text']) || undefined} aria-disabled={!range}>\n      <span className={range?.type === 'absolute' ? styles['label-token-nowrap'] : undefined}>{firstPart}</span>\n      <span>{secondPart && ' â€” '}</span>\n      <span className={styles['label-token-nowrap']}>{secondPart}</span>\n    </span>\n  );\n}\n\nconst DateRangePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      dateDisabledReason,\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({ valid: true }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      customAbsoluteRangeControl,\n      absoluteFormat = 'iso',\n      hideTimeOffset,\n      customRelativeRangeUnits,\n      granularity = 'day',\n      ...rest\n    }: DateRangePickerProps,\n    ref: Ref<DateRangePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DateRangePicker', {\n      props: {\n        absoluteFormat,\n        dateOnly,\n        expandToViewport,\n        rangeSelectorMode,\n        readOnly,\n        showClearButton,\n        timeInputFormat,\n        hideTimeOffset,\n        granularity,\n      },\n      metadata: { hasDisabledReasons: Boolean(dateDisabledReason) },\n    });\n    const isMonthOnly = granularity === 'month';\n    const hideTime = dateOnly || isMonthOnly;\n    checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n\n    const normalizedTimeOffset = hideTime\n      ? { startDate: undefined, endDate: undefined }\n      : normalizeTimeOffset(value, getTimeOffset, timeOffset);\n    value = formatInitialValue(value, dateOnly, isMonthOnly, normalizedTimeOffset);\n    const baseProps = getBaseProps(rest);\n    const { invalid, warning, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext({\n      ariaLabelledby: rest.ariaLabelledby ?? i18nStrings?.ariaLabelledby,\n      ariaDescribedby: rest.ariaDescribedby ?? i18nStrings?.ariaDescribedby,\n      ...rest,\n    });\n    const isSingleGrid = useMobile();\n\n    const triggerRef = useRef<HTMLButtonElement | null>(null);\n    useForwardFocus(ref, triggerRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('date-range-picker-dropdown');\n    const triggerContentId = useUniqueId('date-range-picker-trigger');\n\n    useFocusTracker({ rootRef, onBlur, onFocus });\n\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n\n    const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n\n    const closeDropdown = (focusTrigger = false) => {\n      setIsDropDownOpen(false);\n      if (focusTrigger) {\n        triggerRef.current?.focus();\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape) {\n        if (isDropDownOpen) {\n          event.stopPropagation();\n        }\n        closeDropdown(true);\n      }\n    };\n\n    const onClear = () => {\n      fireNonCancelableEvent(onChange, { value: null });\n    };\n\n    const onApply = (newValue: null | DateRangePickerProps.Value): DateRangePickerProps.ValidationResult => {\n      const formattedValue = formatValue(newValue, {\n        dateOnly,\n        monthOnly: isMonthOnly,\n        timeOffset: hideTime\n          ? { startDate: undefined, endDate: undefined }\n          : normalizeTimeOffset(newValue, getTimeOffset, timeOffset),\n      });\n\n      const validationResult = isValidRange(formattedValue);\n      if (validationResult?.valid === false) {\n        return validationResult;\n      }\n\n      if (isDevelopment) {\n        if (newValue?.type === 'absolute') {\n          const [startDateWithoutTime] = newValue.startDate.split('T');\n          const [endDateWithoutTime] = newValue.endDate.split('T');\n          if (!startDateWithoutTime || !endDateWithoutTime) {\n            warnOnce(\n              'DateRangePicker',\n              'You have provided an `isValidRange` prop that did not catch a missing start or end date.'\n            );\n          }\n        }\n      }\n      fireNonCancelableEvent(onChange, { value: formattedValue });\n      return validationResult || { valid: true };\n    };\n\n    const prevDateOnly = usePrevious(dateOnly);\n    useEffect(() => {\n      if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n        warnOnce(\n          'DateRangePicker',\n          `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`\n        );\n      }\n    }, [prevDateOnly, dateOnly]);\n\n    if (value && value.type !== 'absolute' && value.type !== 'relative') {\n      warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n      value = null;\n    }\n\n    if (\n      (value?.type === 'absolute' && rangeSelectorMode === 'relative-only') ||\n      (value?.type === 'relative' && rangeSelectorMode === 'absolute-only')\n    ) {\n      warnOnce(\n        'DateRangePicker',\n        'The provided value does not correspond to the current range selector mode. Reverting back to default.'\n      );\n      value = null;\n    }\n\n    const i18n = useInternalI18n('date-range-picker');\n    const formatRelativeRange = i18n(\n      'i18nStrings.formatRelativeRange',\n      i18nStrings?.formatRelativeRange,\n      format =>\n        ({ amount, unit }) =>\n          format({ amount, unit })\n    );\n\n    if (isDevelopment) {\n      if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n        warnOnce(\n          'DateRangePicker',\n          'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.'\n        );\n      }\n    }\n\n    const formattedDate: string | JSX.Element = renderDateRange({\n      locale: normalizedLocale,\n      range: value,\n      placeholder,\n      formatRelativeRange,\n      absoluteFormat,\n      hideTimeOffset: hideTime || hideTimeOffset,\n      timeOffset: normalizedTimeOffset,\n    });\n\n    const trigger = (\n      <ButtonTrigger\n        ref={triggerRef}\n        id={controlId}\n        invalid={invalid}\n        warning={warning}\n        ariaLabelledby={joinStrings(ariaLabelledby, triggerContentId)}\n        ariaLabel={i18nStrings?.ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        className={clsx(testutilStyles.label, styles.label, {\n          [styles['label-enabled']]: !readOnly && !disabled,\n        })}\n        hideCaret={true}\n        onClick={() => {\n          setIsDropDownOpen(true);\n        }}\n        disabled={disabled}\n        readOnly={readOnly}\n        ariaHasPopup=\"dialog\"\n      >\n        <span className={styles['trigger-flexbox']}>\n          <span className={styles['icon-wrapper']}>\n            <InternalIcon name=\"calendar\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n          </span>\n          <span id={triggerContentId}>{formattedDate}</span>\n        </span>\n      </ButtonTrigger>\n    );\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(\n          baseProps.className,\n          styles.root,\n          testutilStyles.root,\n          absoluteFormat === 'long-localized' && !dateOnly && !isMonthOnly && styles.wide\n        )}\n        onKeyDown={onWrapperKeyDownHandler}\n      >\n        <Dropdown\n          stretchWidth={true}\n          stretchHeight={true}\n          open={isDropDownOpen}\n          onDropdownClose={() => closeDropdown()}\n          trigger={trigger}\n          stretchToTriggerWidth={false}\n          expandToViewport={expandToViewport}\n          dropdownId={dropdownId}\n        >\n          {/* Reset form field context to prevent a wrapper form field from labelling all inputs inside the dropdown. */}\n          <ResetContextsForModal>\n            {isDropDownOpen && (\n              <DateRangePickerDropdown\n                startOfWeek={startOfWeek}\n                locale={normalizedLocale}\n                isSingleGrid={isSingleGrid}\n                onDropdownClose={() => closeDropdown(true)}\n                value={value}\n                showClearButton={showClearButton}\n                isDateEnabled={isDateEnabled}\n                dateDisabledReason={dateDisabledReason}\n                i18nStrings={i18nStrings}\n                onClear={onClear}\n                onApply={onApply}\n                getTimeOffset={getTimeOffset}\n                timeOffset={timeOffset}\n                relativeOptions={relativeOptions}\n                isValidRange={isValidRange}\n                dateOnly={dateOnly}\n                timeInputFormat={timeInputFormat}\n                rangeSelectorMode={rangeSelectorMode}\n                ariaLabelledby={ariaLabelledby}\n                ariaDescribedby={ariaDescribedby}\n                customAbsoluteRangeControl={customAbsoluteRangeControl}\n                customRelativeRangeUnits={customRelativeRangeUnits}\n                granularity={granularity}\n              />\n            )}\n          </ResetContextsForModal>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}