{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport clsx from 'clsx';\nimport { Portal } from '@cloudscape-design/component-toolkit/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport { joinStrings } from '../../utils/strings';\nimport useDragAndDropReorder from './use-drag-and-drop-reorder';\nimport useLiveAnnouncements from './use-live-announcements';\nimport styles from './styles.css.js';\nexport default function SortableArea({\n  items,\n  itemDefinition,\n  renderItem,\n  onItemsChange,\n  disableReorder,\n  i18nStrings\n}) {\n  var _a;\n  const {\n    activeItemId,\n    setActiveItemId,\n    collisionDetection,\n    handleKeyDown,\n    sensors\n  } = useDragAndDropReorder({\n    items,\n    itemDefinition\n  });\n  const activeItem = activeItemId ? items.find(item => itemDefinition.id(item) === activeItemId) : null;\n  const isDragging = activeItemId !== null;\n  const announcements = useLiveAnnouncements(Object.assign({\n    items,\n    itemDefinition,\n    isDragging\n  }, i18nStrings));\n  const portalContainer = usePortalContainer();\n  return React.createElement(DndContext, {\n    sensors: sensors,\n    collisionDetection: collisionDetection,\n    accessibility: {\n      announcements,\n      restoreFocus: false,\n      screenReaderInstructions: (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.dragHandleAriaDescription) ? {\n        draggable: i18nStrings.dragHandleAriaDescription\n      } : undefined,\n      container: portalContainer !== null && portalContainer !== void 0 ? portalContainer : undefined\n    },\n    onDragStart: ({\n      active\n    }) => setActiveItemId(active.id),\n    onDragEnd: event => {\n      setActiveItemId(null);\n      const {\n        active,\n        over\n      } = event;\n      if (over && active.id !== over.id) {\n        const movedItem = items.find(item => itemDefinition.id(item) === active.id);\n        const oldIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const newIndex = items.findIndex(item => itemDefinition.id(item) === over.id);\n        fireNonCancelableEvent(onItemsChange, {\n          items: arrayMove([...items], oldIndex, newIndex),\n          movedItem\n        });\n      }\n    },\n    onDragCancel: () => setActiveItemId(null)\n  }, React.createElement(SortableContext, {\n    disabled: disableReorder,\n    items: items.map(item => itemDefinition.id(item)),\n    strategy: verticalListSortingStrategy\n  }, items.map(item => React.createElement(DraggableItem, {\n    key: itemDefinition.id(item),\n    item: item,\n    itemDefinition: itemDefinition,\n    renderItem: renderItem,\n    onKeyDown: handleKeyDown,\n    dragHandleAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.dragHandleAriaLabel\n  }))), React.createElement(Portal, {\n    container: portalContainer\n  }, React.createElement(DragOverlay, {\n    className: clsx(styles['drag-overlay'], styles[`drag-overlay-${getBorderRadiusVariant(itemDefinition)}`]),\n    dropAnimation: null,\n    style: {\n      zIndex: 5000\n    }\n  }, activeItem && renderItem({\n    item: activeItem,\n    style: {},\n    className: styles.active,\n    isDropPlaceholder: true,\n    isSortingActive: false,\n    isDragGhost: true,\n    dragHandleProps: {\n      ariaLabel: (_a = joinStrings(i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.dragHandleAriaLabel, itemDefinition.label(activeItem))) !== null && _a !== void 0 ? _a : '',\n      onKeyDown: handleKeyDown\n    }\n  }))));\n}\nfunction usePortalContainer() {\n  const portalContainerRef = useRef(typeof document !== 'undefined' ? document.createElement('div') : null);\n  useEffect(() => {\n    const container = portalContainerRef.current;\n    if (container && !container.isConnected) {\n      document.body.appendChild(container);\n    }\n    return () => {\n      if (container && container.isConnected) {\n        document.body.removeChild(container);\n      }\n    };\n  }, []);\n  return portalContainerRef.current;\n}\nfunction DraggableItem({\n  item,\n  itemDefinition,\n  dragHandleAriaLabel,\n  onKeyDown,\n  renderItem\n}) {\n  var _a;\n  const {\n    isDragging,\n    isSorting,\n    listeners,\n    setNodeRef,\n    transform,\n    attributes\n  } = useSortable({\n    id: itemDefinition.id(item)\n  });\n  const style = {\n    transform: CSS.Translate.toString(transform)\n  };\n  const dragHandleListeners = attributes['aria-disabled'] ? {} : Object.assign(Object.assign({}, listeners), {\n    onKeyDown: event => {\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n      if (listeners === null || listeners === void 0 ? void 0 : listeners.onKeyDown) {\n        listeners.onKeyDown(event);\n      }\n    }\n  });\n  const className = clsx(isDragging && clsx(styles.placeholder, styles[`placeholder-${getBorderRadiusVariant(itemDefinition)}`]), isSorting && styles.sorting);\n  return React.createElement(React.Fragment, null, renderItem({\n    item,\n    ref: setNodeRef,\n    style,\n    className,\n    isDropPlaceholder: isDragging,\n    isSortingActive: isSorting,\n    isDragGhost: false,\n    dragHandleProps: Object.assign(Object.assign({}, dragHandleListeners), {\n      ariaLabel: (_a = joinStrings(dragHandleAriaLabel, itemDefinition.label(item))) !== null && _a !== void 0 ? _a : '',\n      ariaDescribedby: attributes['aria-describedby'],\n      disabled: attributes['aria-disabled']\n    })\n  }));\n}\nexport function getBorderRadiusVariant(itemDefinition) {\n  var _a;\n  return (_a = itemDefinition.borderRadius) !== null && _a !== void 0 ? _a : 'item';\n}","map":{"version":3,"names":["React","useEffect","useRef","DndContext","DragOverlay","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","clsx","Portal","fireNonCancelableEvent","joinStrings","useDragAndDropReorder","useLiveAnnouncements","styles","SortableArea","items","itemDefinition","renderItem","onItemsChange","disableReorder","i18nStrings","activeItemId","setActiveItemId","collisionDetection","handleKeyDown","sensors","activeItem","find","item","id","isDragging","announcements","Object","assign","portalContainer","usePortalContainer","createElement","accessibility","restoreFocus","screenReaderInstructions","dragHandleAriaDescription","draggable","undefined","container","onDragStart","active","onDragEnd","event","over","movedItem","oldIndex","findIndex","newIndex","onDragCancel","disabled","map","strategy","DraggableItem","key","onKeyDown","dragHandleAriaLabel","className","getBorderRadiusVariant","dropAnimation","style","zIndex","isDropPlaceholder","isSortingActive","isDragGhost","dragHandleProps","ariaLabel","_a","label","portalContainerRef","document","current","isConnected","body","appendChild","removeChild","isSorting","listeners","setNodeRef","transform","attributes","Translate","toString","dragHandleListeners","placeholder","sorting","Fragment","ref","ariaDescribedby","borderRadius"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/components/sortable-area/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport clsx from 'clsx';\n\nimport { Portal } from '@cloudscape-design/component-toolkit/internal';\n\nimport { fireNonCancelableEvent } from '../../events';\nimport { joinStrings } from '../../utils/strings';\nimport { SortableAreaProps } from './interfaces';\nimport useDragAndDropReorder from './use-drag-and-drop-reorder';\nimport useLiveAnnouncements from './use-live-announcements';\n\nimport styles from './styles.css.js';\n\nexport { SortableAreaProps };\n\nexport default function SortableArea<Item>({\n  items,\n  itemDefinition,\n  renderItem,\n  onItemsChange,\n  disableReorder,\n  i18nStrings,\n}: SortableAreaProps<Item>) {\n  const { activeItemId, setActiveItemId, collisionDetection, handleKeyDown, sensors } = useDragAndDropReorder({\n    items,\n    itemDefinition,\n  });\n  const activeItem = activeItemId ? items.find(item => itemDefinition.id(item) === activeItemId) : null;\n  const isDragging = activeItemId !== null;\n  const announcements = useLiveAnnouncements({ items, itemDefinition, isDragging, ...i18nStrings });\n  const portalContainer = usePortalContainer();\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={collisionDetection}\n      accessibility={{\n        announcements,\n        restoreFocus: false,\n        screenReaderInstructions: i18nStrings?.dragHandleAriaDescription\n          ? { draggable: i18nStrings.dragHandleAriaDescription }\n          : undefined,\n        container: portalContainer ?? undefined,\n      }}\n      onDragStart={({ active }) => setActiveItemId(active.id)}\n      onDragEnd={event => {\n        setActiveItemId(null);\n        const { active, over } = event;\n        if (over && active.id !== over.id) {\n          const movedItem = items.find(item => itemDefinition.id(item) === active.id)!;\n          const oldIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n          const newIndex = items.findIndex(item => itemDefinition.id(item) === over.id);\n          fireNonCancelableEvent(onItemsChange, { items: arrayMove([...items], oldIndex, newIndex), movedItem });\n        }\n      }}\n      onDragCancel={() => setActiveItemId(null)}\n    >\n      <SortableContext\n        disabled={disableReorder}\n        items={items.map(item => itemDefinition.id(item))}\n        strategy={verticalListSortingStrategy}\n      >\n        {items.map(item => (\n          <DraggableItem\n            key={itemDefinition.id(item)}\n            item={item}\n            itemDefinition={itemDefinition}\n            renderItem={renderItem}\n            onKeyDown={handleKeyDown}\n            dragHandleAriaLabel={i18nStrings?.dragHandleAriaLabel}\n          />\n        ))}\n      </SortableContext>\n\n      <Portal container={portalContainer}>\n        {/* Make sure that the drag overlay is above the modal  by assigning the z-index as inline style\n            so that it prevails over dnd-kit's inline z-index of 999 */}\n        <DragOverlay\n          className={clsx(styles['drag-overlay'], styles[`drag-overlay-${getBorderRadiusVariant(itemDefinition)}`])}\n          dropAnimation={null}\n          style={{ zIndex: 5000 }}\n        >\n          {activeItem &&\n            renderItem({\n              item: activeItem,\n              style: {},\n              className: styles.active,\n              isDropPlaceholder: true,\n              isSortingActive: false,\n              isDragGhost: true,\n              dragHandleProps: {\n                ariaLabel: joinStrings(i18nStrings?.dragHandleAriaLabel, itemDefinition.label(activeItem)) ?? '',\n                onKeyDown: handleKeyDown,\n              },\n            })}\n        </DragOverlay>\n      </Portal>\n    </DndContext>\n  );\n}\n\nfunction usePortalContainer() {\n  const portalContainerRef = useRef(typeof document !== 'undefined' ? document.createElement('div') : null);\n  useEffect(() => {\n    const container = portalContainerRef.current;\n    if (container && !container.isConnected) {\n      document.body.appendChild(container);\n    }\n    return () => {\n      if (container && container.isConnected) {\n        document.body.removeChild(container);\n      }\n    };\n  }, []);\n  return portalContainerRef.current;\n}\n\nfunction DraggableItem<Item>({\n  item,\n  itemDefinition,\n  dragHandleAriaLabel,\n  onKeyDown,\n  renderItem,\n}: {\n  item: Item;\n  itemDefinition: SortableAreaProps.ItemDefinition<Item>;\n  dragHandleAriaLabel?: string;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  renderItem: (props: SortableAreaProps.RenderItemProps<Item>) => React.ReactNode;\n}) {\n  const { isDragging, isSorting, listeners, setNodeRef, transform, attributes } = useSortable({\n    id: itemDefinition.id(item),\n  });\n  const style = { transform: CSS.Translate.toString(transform) };\n  const dragHandleListeners = attributes['aria-disabled']\n    ? {}\n    : {\n        ...listeners,\n        onKeyDown: (event: React.KeyboardEvent) => {\n          if (onKeyDown) {\n            onKeyDown(event);\n          }\n          if (listeners?.onKeyDown) {\n            listeners.onKeyDown(event);\n          }\n        },\n      };\n  const className = clsx(\n    isDragging && clsx(styles.placeholder, styles[`placeholder-${getBorderRadiusVariant(itemDefinition)}`]),\n    isSorting && styles.sorting\n  );\n  return (\n    <>\n      {renderItem({\n        item,\n        ref: setNodeRef,\n        style,\n        className,\n        isDropPlaceholder: isDragging,\n        isSortingActive: isSorting,\n        isDragGhost: false,\n        dragHandleProps: {\n          ...dragHandleListeners,\n          ariaLabel: joinStrings(dragHandleAriaLabel, itemDefinition.label(item)) ?? '',\n          ariaDescribedby: attributes['aria-describedby'],\n          disabled: attributes['aria-disabled'],\n        },\n      })}\n    </>\n  );\n}\n\nexport function getBorderRadiusVariant(\n  itemDefinition: SortableAreaProps.ItemDefinition<any>\n): SortableAreaProps.BorderRadiusVariant {\n  return itemDefinition.borderRadius ?? 'item';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}