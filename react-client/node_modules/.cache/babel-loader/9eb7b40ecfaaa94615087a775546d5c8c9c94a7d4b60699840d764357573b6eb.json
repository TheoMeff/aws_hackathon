{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../../icon/internal';\nimport { Transition } from '../transition';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\n// Mapping from CSS logical property direction to icon name. The icon component\n// already flips the left/right icons automatically based on RTL, so we don't\n// need to do anything special.\nconst ICON_LOGICAL_PROPERTY_MAP = {\n  'block-start': 'arrow-up',\n  'block-end': 'arrow-down',\n  'inline-start': 'arrow-left',\n  'inline-end': 'arrow-right'\n};\nexport default function DirectionButton({\n  direction,\n  state,\n  show,\n  onClick\n}) {\n  return React.createElement(Transition, {\n    in: show\n  }, (transitionState, ref) =>\n  // The wrapper exists to provide a padding around each direction button that\n  // prevents any accidental presses around the button from propagating to any\n  // interactive elements behind the button.\n  React.createElement(\"span\", {\n    ref: ref,\n    className: clsx(styles['direction-button-wrapper'], styles[`direction-button-wrapper-${direction}`], transitionState === 'exited' && styles['direction-button-wrapper-hidden'], styles[`direction-button-wrapper-motion-${transitionState}`])\n  }, React.createElement(\"span\", {\n    className: clsx(styles['direction-button'], state === 'disabled' && styles['direction-button-disabled'], testUtilsStyles[`direction-button-${direction}`], transitionState !== 'exited' && testUtilsStyles['direction-button-visible']),\n    onClick: state !== 'disabled' ? onClick : undefined,\n    // This prevents focus from being lost to `document.body` on\n    // mouse/pointer press. This allows us to listen to onClick while\n    // keeping this button pointer-accessible only.\n    onPointerDown: event => event.preventDefault()\n  }, React.createElement(InternalIcon, {\n    name: ICON_LOGICAL_PROPERTY_MAP[direction],\n    size: \"small\"\n  }))));\n}","map":{"version":3,"names":["React","clsx","InternalIcon","Transition","styles","testUtilsStyles","ICON_LOGICAL_PROPERTY_MAP","DirectionButton","direction","state","show","onClick","createElement","in","transitionState","ref","className","undefined","onPointerDown","event","preventDefault","name","size"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/internal/components/drag-handle-wrapper/direction-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport { Transition } from '../transition';\nimport { Direction, DirectionState } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\n\n// Mapping from CSS logical property direction to icon name. The icon component\n// already flips the left/right icons automatically based on RTL, so we don't\n// need to do anything special.\nconst ICON_LOGICAL_PROPERTY_MAP: Record<Direction, IconProps.Name> = {\n  'block-start': 'arrow-up',\n  'block-end': 'arrow-down',\n  'inline-start': 'arrow-left',\n  'inline-end': 'arrow-right',\n};\n\ninterface DirectionButtonProps {\n  direction: Direction;\n  state: DirectionState;\n  onClick: React.MouseEventHandler;\n  show: boolean;\n}\n\nexport default function DirectionButton({ direction, state, show, onClick }: DirectionButtonProps) {\n  return (\n    <Transition in={show}>\n      {(transitionState, ref) => (\n        // The wrapper exists to provide a padding around each direction button that\n        // prevents any accidental presses around the button from propagating to any\n        // interactive elements behind the button.\n        <span\n          ref={ref}\n          className={clsx(\n            styles['direction-button-wrapper'],\n            styles[`direction-button-wrapper-${direction}`],\n            transitionState === 'exited' && styles['direction-button-wrapper-hidden'],\n            styles[`direction-button-wrapper-motion-${transitionState}`]\n          )}\n        >\n          <span\n            className={clsx(\n              styles['direction-button'],\n              state === 'disabled' && styles['direction-button-disabled'],\n              testUtilsStyles[`direction-button-${direction}`],\n              transitionState !== 'exited' && testUtilsStyles['direction-button-visible']\n            )}\n            onClick={state !== 'disabled' ? onClick : undefined}\n            // This prevents focus from being lost to `document.body` on\n            // mouse/pointer press. This allows us to listen to onClick while\n            // keeping this button pointer-accessible only.\n            onPointerDown={event => event.preventDefault()}\n          >\n            <InternalIcon name={ICON_LOGICAL_PROPERTY_MAP[direction]} size=\"small\" />\n          </span>\n        </span>\n      )}\n    </Transition>\n  );\n}\n"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAGvB,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,UAAU,QAAQ,eAAe;AAG1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D;AACA;AACA;AACA,MAAMC,yBAAyB,GAAsC;EACnE,aAAa,EAAE,UAAU;EACzB,WAAW,EAAE,YAAY;EACzB,cAAc,EAAE,YAAY;EAC5B,YAAY,EAAE;CACf;AASD,eAAc,SAAUC,eAAeA,CAAC;EAAEC,SAAS;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAO,CAAwB;EAC/F,OACEX,KAAA,CAAAY,aAAA,CAACT,UAAU;IAACU,EAAE,EAAEH;EAAI,GACjB,CAACI,eAAe,EAAEC,GAAG;EACpB;EACA;EACA;EACAf,KAAA,CAAAY,aAAA;IACEG,GAAG,EAAEA,GAAG;IACRC,SAAS,EAAEf,IAAI,CACbG,MAAM,CAAC,0BAA0B,CAAC,EAClCA,MAAM,CAAC,4BAA4BI,SAAS,EAAE,CAAC,EAC/CM,eAAe,KAAK,QAAQ,IAAIV,MAAM,CAAC,iCAAiC,CAAC,EACzEA,MAAM,CAAC,mCAAmCU,eAAe,EAAE,CAAC;EAC7D,GAEDd,KAAA,CAAAY,aAAA;IACEI,SAAS,EAAEf,IAAI,CACbG,MAAM,CAAC,kBAAkB,CAAC,EAC1BK,KAAK,KAAK,UAAU,IAAIL,MAAM,CAAC,2BAA2B,CAAC,EAC3DC,eAAe,CAAC,oBAAoBG,SAAS,EAAE,CAAC,EAChDM,eAAe,KAAK,QAAQ,IAAIT,eAAe,CAAC,0BAA0B,CAAC,CAC5E;IACDM,OAAO,EAAEF,KAAK,KAAK,UAAU,GAAGE,OAAO,GAAGM,SAAS;IACnD;IACA;IACA;IACAC,aAAa,EAAEC,KAAK,IAAIA,KAAK,CAACC,cAAc;EAAE,GAE9CpB,KAAA,CAAAY,aAAA,CAACV,YAAY;IAACmB,IAAI,EAAEf,yBAAyB,CAACE,SAAS,CAAC;IAAEc,IAAI,EAAC;EAAO,EAAG,CACpE,CAEV,CACU;AAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}