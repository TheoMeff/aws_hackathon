{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo } from 'react';\nimport { parseCountValue } from '../../internal/analytics/utils/parse-count-text';\nimport { useTableComponentsContext } from '../../internal/context/table-component-context';\n/**\n * Custom hook that integrates table counter values with table component context.\n *\n * The extracted count value is automatically synchronized with the table header\n * component through the table context, updating the countText property.\n */\nexport const useTableIntegration = (filteringText, countText) => {\n  const tableComponentContext = useTableComponentsContext();\n  const countValue = useMemo(() => parseCountValue(countText), [countText]);\n  useEffect(() => {\n    var _a;\n    if ((_a = tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.filterRef) === null || _a === void 0 ? void 0 : _a.current) {\n      tableComponentContext.filterRef.current.filterText = filteringText;\n      tableComponentContext.filterRef.current.filterCount = countValue;\n      tableComponentContext.filterRef.current.filtered = !!filteringText;\n      return () => {\n        var _a, _b, _c;\n        (_a = tableComponentContext.filterRef.current) === null || _a === void 0 ? true : delete _a.filterText;\n        (_b = tableComponentContext.filterRef.current) === null || _b === void 0 ? true : delete _b.filterCount;\n        (_c = tableComponentContext.filterRef.current) === null || _c === void 0 ? true : delete _c.filtered;\n      };\n    }\n  }, [tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.filterRef, countValue, filteringText]);\n};","map":{"version":3,"names":["useEffect","useMemo","parseCountValue","useTableComponentsContext","useTableIntegration","filteringText","countText","tableComponentContext","countValue","_a","filterRef","current","filterText","filterCount","filtered","_b","_c"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/text-filter/analytics/use-table-integration.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo } from 'react';\n\nimport { parseCountValue } from '../../internal/analytics/utils/parse-count-text';\nimport { useTableComponentsContext } from '../../internal/context/table-component-context';\n\n/**\n * Custom hook that integrates table counter values with table component context.\n *\n * The extracted count value is automatically synchronized with the table header\n * component through the table context, updating the countText property.\n */\nexport const useTableIntegration = (filteringText: string | undefined, countText: string | undefined) => {\n  const tableComponentContext = useTableComponentsContext();\n  const countValue = useMemo(() => parseCountValue(countText), [countText]);\n\n  useEffect(() => {\n    if (tableComponentContext?.filterRef?.current) {\n      tableComponentContext.filterRef.current.filterText = filteringText;\n      tableComponentContext.filterRef.current.filterCount = countValue;\n      tableComponentContext.filterRef.current.filtered = !!filteringText;\n\n      return () => {\n        delete tableComponentContext.filterRef.current?.filterText;\n        delete tableComponentContext.filterRef.current?.filterCount;\n        delete tableComponentContext.filterRef.current?.filtered;\n      };\n    }\n  }, [tableComponentContext?.filterRef, countValue, filteringText]);\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAE1C,SAASC,eAAe,QAAQ,iDAAiD;AACjF,SAASC,yBAAyB,QAAQ,gDAAgD;AAE1F;;;;;;AAMA,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,aAAiC,EAAEC,SAA6B,KAAI;EACtG,MAAMC,qBAAqB,GAAGJ,yBAAyB,EAAE;EACzD,MAAMK,UAAU,GAAGP,OAAO,CAAC,MAAMC,eAAe,CAACI,SAAS,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEzEN,SAAS,CAAC,MAAK;;IACb,IAAI,CAAAS,EAAA,GAAAF,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEG,SAAS,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,OAAO,EAAE;MAC7CJ,qBAAqB,CAACG,SAAS,CAACC,OAAO,CAACC,UAAU,GAAGP,aAAa;MAClEE,qBAAqB,CAACG,SAAS,CAACC,OAAO,CAACE,WAAW,GAAGL,UAAU;MAChED,qBAAqB,CAACG,SAAS,CAACC,OAAO,CAACG,QAAQ,GAAG,CAAC,CAACT,aAAa;MAElE,OAAO,MAAK;;QACH,CAAAI,EAAA,GAAAF,qBAAqB,CAACG,SAAS,CAACC,OAAO,cAAAF,EAAA,4BAAAA,EAAA,CAAEG,UAAU;QACnD,CAAAG,EAAA,GAAAR,qBAAqB,CAACG,SAAS,CAACC,OAAO,cAAAI,EAAA,4BAAAA,EAAA,CAAEF,WAAW;QACpD,CAAAG,EAAA,GAAAT,qBAAqB,CAACG,SAAS,CAACC,OAAO,cAAAK,EAAA,4BAAAA,EAAA,CAAEF,QAAQ;MAC1D,CAAC;;EAEL,CAAC,EAAE,CAACP,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEG,SAAS,EAAEF,UAAU,EAAEH,aAAa,CAAC,CAAC;AACnE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}