{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { awsuiPluginsInternal } from '../../internal/plugins/api';\nimport { useAppLayoutFlagEnabled } from '../utils/feature-flags';\nfunction checkAlreadyExists(value, propName) {\n  if (value) {\n    warnOnce('AppLayout', `Another app layout instance on this page already defines ${propName} property. This instance will be ignored.`);\n    return true;\n  }\n  return false;\n}\nexport function mergeProps(ownProps, additionalProps) {\n  var _a, _b;\n  const toolbar = {};\n  for (const props of [ownProps, ...additionalProps]) {\n    toolbar.ariaLabels = Object.assign((_a = toolbar.ariaLabels) !== null && _a !== void 0 ? _a : {}, props.ariaLabels);\n    if (props.drawers && props.drawers.some(drawer => drawer.trigger) && !checkAlreadyExists(!!toolbar.drawers, 'tools or drawers')) {\n      toolbar.drawers = props.drawers;\n      toolbar.activeDrawerId = props.activeDrawerId;\n      toolbar.drawersFocusRef = props.drawersFocusRef;\n      toolbar.onActiveDrawerChange = props.onActiveDrawerChange;\n    }\n    if (props.globalDrawers && !checkAlreadyExists(!!toolbar.globalDrawers, 'globalDrawers')) {\n      toolbar.globalDrawersFocusControl = props.globalDrawersFocusControl;\n      toolbar.globalDrawers = props.globalDrawers;\n      toolbar.activeGlobalDrawersIds = props.activeGlobalDrawersIds;\n      toolbar.onActiveGlobalDrawersChange = props.onActiveGlobalDrawersChange;\n    }\n    if (props.navigation && !checkAlreadyExists(!!toolbar.hasNavigation, 'navigation')) {\n      toolbar.hasNavigation = true;\n      toolbar.navigationOpen = props.navigationOpen;\n      toolbar.navigationFocusRef = props.navigationFocusRef;\n      toolbar.onNavigationToggle = props.onNavigationToggle;\n    }\n    if (props.splitPanel && ((_b = props.splitPanelToggleProps) === null || _b === void 0 ? void 0 : _b.displayed) && !checkAlreadyExists(!!toolbar.hasSplitPanel, 'splitPanel')) {\n      toolbar.hasSplitPanel = true;\n      toolbar.splitPanelFocusRef = props.splitPanelFocusRef;\n      toolbar.splitPanelToggleProps = props.splitPanelToggleProps;\n      toolbar.onSplitPanelToggle = props.onSplitPanelToggle;\n    }\n    if (props.breadcrumbs && !checkAlreadyExists(!!toolbar.hasBreadcrumbsPortal, 'hasBreadcrumbsPortal')) {\n      toolbar.hasBreadcrumbsPortal = true;\n    }\n    if (props.expandedDrawerId && !checkAlreadyExists(!!toolbar.expandedDrawerId, 'expandedDrawerId')) {\n      toolbar.expandedDrawerId = props.expandedDrawerId;\n      toolbar.setExpandedDrawerId = props.setExpandedDrawerId;\n    }\n  }\n  // do not render toolbar if no fields are defined, except ariaLabels, which are always there\n  return Object.keys(toolbar).filter(key => key !== 'ariaLabels').length > 0 ? toolbar : null;\n}\nexport function useMultiAppLayout(props, isEnabled) {\n  const [registration, setRegistration] = useState(null);\n  const {\n    forceDeduplicationType\n  } = props;\n  const isToolbar = useAppLayoutFlagEnabled();\n  useLayoutEffect(() => {\n    if (!isEnabled || forceDeduplicationType === 'suspended' || !isToolbar) {\n      return;\n    }\n    if (forceDeduplicationType === 'off') {\n      setRegistration({\n        type: 'primary',\n        discoveredProps: []\n      });\n      return;\n    }\n    return awsuiPluginsInternal.appLayoutWidget.register(forceDeduplicationType, props => setRegistration(props));\n  }, [forceDeduplicationType, isEnabled, isToolbar]);\n  useLayoutEffect(() => {\n    if ((registration === null || registration === void 0 ? void 0 : registration.type) === 'secondary') {\n      registration.update(props);\n    }\n  });\n  if (!isToolbar) {\n    return {\n      registered: 'primary',\n      // mergeProps is needed here because the toolbar's behavior depends on reconciliation logic\n      // in this function. For example, navigation trigger visibility\n      toolbarProps: mergeProps(props, [])\n    };\n  }\n  return {\n    registered: !!(registration === null || registration === void 0 ? void 0 : registration.type),\n    toolbarProps: (registration === null || registration === void 0 ? void 0 : registration.type) === 'primary' ? mergeProps(props, registration.discoveredProps) : null\n  };\n}","map":{"version":3,"names":["useLayoutEffect","useState","warnOnce","awsuiPluginsInternal","useAppLayoutFlagEnabled","checkAlreadyExists","value","propName","mergeProps","ownProps","additionalProps","toolbar","props","ariaLabels","Object","assign","_a","drawers","some","drawer","trigger","activeDrawerId","drawersFocusRef","onActiveDrawerChange","globalDrawers","globalDrawersFocusControl","activeGlobalDrawersIds","onActiveGlobalDrawersChange","navigation","hasNavigation","navigationOpen","navigationFocusRef","onNavigationToggle","splitPanel","_b","splitPanelToggleProps","displayed","hasSplitPanel","splitPanelFocusRef","onSplitPanelToggle","breadcrumbs","hasBreadcrumbsPortal","expandedDrawerId","setExpandedDrawerId","keys","filter","key","length","useMultiAppLayout","isEnabled","registration","setRegistration","forceDeduplicationType","isToolbar","type","discoveredProps","appLayoutWidget","register","update","registered","toolbarProps"],"sources":["/Users/theo/Library/CloudStorage/OneDrive-RackspaceInc/Documents/aws_hackathon/react-client/node_modules/src/app-layout/visual-refresh-toolbar/multi-layout.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useState } from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { awsuiPluginsInternal } from '../../internal/plugins/api';\nimport { RegistrationState } from '../../internal/plugins/controllers/app-layout-widget';\nimport { AppLayoutProps } from '../interfaces';\nimport { useAppLayoutFlagEnabled } from '../utils/feature-flags';\nimport { OnChangeParams } from '../utils/use-drawers';\nimport { Focusable, FocusControlMultipleStates } from '../utils/use-focus-control';\nimport { SplitPanelToggleProps, ToolbarProps } from './toolbar';\n\nexport interface SharedProps {\n  forceDeduplicationType?: 'primary' | 'secondary' | 'suspended' | 'off';\n  ariaLabels: AppLayoutProps.Labels | undefined;\n  navigation: React.ReactNode;\n  navigationOpen: boolean;\n  onNavigationToggle: (open: boolean) => void;\n  navigationFocusRef: React.Ref<Focusable> | undefined;\n  breadcrumbs: React.ReactNode;\n  activeDrawerId: string | null;\n  drawers: ReadonlyArray<AppLayoutProps.Drawer> | undefined;\n  onActiveDrawerChange: ((drawerId: string | null, params: OnChangeParams) => void) | undefined;\n  drawersFocusRef: React.Ref<Focusable> | undefined;\n  globalDrawersFocusControl?: FocusControlMultipleStates | undefined;\n  globalDrawers?: ReadonlyArray<AppLayoutProps.Drawer> | undefined;\n  activeGlobalDrawersIds?: Array<string> | undefined;\n  onActiveGlobalDrawersChange?: ((newDrawerId: string, params: OnChangeParams) => void) | undefined;\n  splitPanel: React.ReactNode;\n  splitPanelToggleProps: SplitPanelToggleProps | undefined;\n  splitPanelFocusRef: React.Ref<Focusable> | undefined;\n  onSplitPanelToggle: () => void;\n  expandedDrawerId?: string | null;\n  setExpandedDrawerId: (value: string | null) => void;\n}\n\nfunction checkAlreadyExists(value: boolean, propName: string) {\n  if (value) {\n    warnOnce(\n      'AppLayout',\n      `Another app layout instance on this page already defines ${propName} property. This instance will be ignored.`\n    );\n    return true;\n  }\n  return false;\n}\n\nexport function mergeProps(\n  ownProps: SharedProps,\n  additionalProps: ReadonlyArray<Partial<SharedProps>>\n): ToolbarProps | null {\n  const toolbar: ToolbarProps = {};\n  for (const props of [ownProps, ...additionalProps]) {\n    toolbar.ariaLabels = Object.assign(toolbar.ariaLabels ?? {}, props.ariaLabels);\n    if (\n      props.drawers &&\n      props.drawers.some(drawer => drawer.trigger) &&\n      !checkAlreadyExists(!!toolbar.drawers, 'tools or drawers')\n    ) {\n      toolbar.drawers = props.drawers;\n      toolbar.activeDrawerId = props.activeDrawerId;\n      toolbar.drawersFocusRef = props.drawersFocusRef;\n      toolbar.onActiveDrawerChange = props.onActiveDrawerChange;\n    }\n    if (props.globalDrawers && !checkAlreadyExists(!!toolbar.globalDrawers, 'globalDrawers')) {\n      toolbar.globalDrawersFocusControl = props.globalDrawersFocusControl;\n      toolbar.globalDrawers = props.globalDrawers;\n      toolbar.activeGlobalDrawersIds = props.activeGlobalDrawersIds;\n      toolbar.onActiveGlobalDrawersChange = props.onActiveGlobalDrawersChange;\n    }\n    if (props.navigation && !checkAlreadyExists(!!toolbar.hasNavigation, 'navigation')) {\n      toolbar.hasNavigation = true;\n      toolbar.navigationOpen = props.navigationOpen;\n      toolbar.navigationFocusRef = props.navigationFocusRef;\n      toolbar.onNavigationToggle = props.onNavigationToggle;\n    }\n    if (\n      props.splitPanel &&\n      props.splitPanelToggleProps?.displayed &&\n      !checkAlreadyExists(!!toolbar.hasSplitPanel, 'splitPanel')\n    ) {\n      toolbar.hasSplitPanel = true;\n      toolbar.splitPanelFocusRef = props.splitPanelFocusRef;\n      toolbar.splitPanelToggleProps = props.splitPanelToggleProps;\n      toolbar.onSplitPanelToggle = props.onSplitPanelToggle;\n    }\n    if (props.breadcrumbs && !checkAlreadyExists(!!toolbar.hasBreadcrumbsPortal, 'hasBreadcrumbsPortal')) {\n      toolbar.hasBreadcrumbsPortal = true;\n    }\n    if (props.expandedDrawerId && !checkAlreadyExists(!!toolbar.expandedDrawerId, 'expandedDrawerId')) {\n      toolbar.expandedDrawerId = props.expandedDrawerId;\n      toolbar.setExpandedDrawerId = props.setExpandedDrawerId;\n    }\n  }\n  // do not render toolbar if no fields are defined, except ariaLabels, which are always there\n  return Object.keys(toolbar).filter(key => key !== 'ariaLabels').length > 0 ? toolbar : null;\n}\n\nexport function useMultiAppLayout(props: SharedProps, isEnabled: boolean) {\n  const [registration, setRegistration] = useState<RegistrationState<SharedProps> | null>(null);\n  const { forceDeduplicationType } = props;\n  const isToolbar = useAppLayoutFlagEnabled();\n\n  useLayoutEffect(() => {\n    if (!isEnabled || forceDeduplicationType === 'suspended' || !isToolbar) {\n      return;\n    }\n    if (forceDeduplicationType === 'off') {\n      setRegistration({ type: 'primary', discoveredProps: [] });\n      return;\n    }\n    return awsuiPluginsInternal.appLayoutWidget.register(forceDeduplicationType, props =>\n      setRegistration(props as RegistrationState<SharedProps>)\n    );\n  }, [forceDeduplicationType, isEnabled, isToolbar]);\n\n  useLayoutEffect(() => {\n    if (registration?.type === 'secondary') {\n      registration.update(props);\n    }\n  });\n\n  if (!isToolbar) {\n    return {\n      registered: 'primary',\n      // mergeProps is needed here because the toolbar's behavior depends on reconciliation logic\n      // in this function. For example, navigation trigger visibility\n      toolbarProps: mergeProps(props, []),\n    };\n  }\n\n  return {\n    registered: !!registration?.type,\n    toolbarProps: registration?.type === 'primary' ? mergeProps(props, registration.discoveredProps) : null,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}